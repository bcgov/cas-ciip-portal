%syntax-version=1.0.0
%project=ggircs-portal
%uri=https://github.com/bcgov/cas-ggircs/app

schema_swrs 2020-04-15T01:19:51Z Matthieu Foucault <matthieu@button.is> # Add a schema for SWRS
schema_ggircs_portal 2019-07-11T18:30:51Z Hamza Javed <hamza@button.is> # Add a schema for the GGIRCS Industry Portal (GIP)
schema_ggircs_portal_private 2020-02-04T19:34:27Z Dylan Leard <dylan@button.is> # Private schema for entities needed in the portal that should not be exposed to the API
database_functions/graphile_worker_job_definer [schema_ggircs_portal_private] 2020-02-28T23:07:39Z Dylan Leard <dylan@button.is> # Wrapper for graphile_worker.add_job to run as security definer
database_functions/create_roles [schema_ggircs_portal_private] 2020-01-27T21:15:42Z Dylan Leard <dylan@button.is> # Adds the roles necessary for row level security
database_functions/verify_grant [schema_ggircs_portal_private] 2020-01-31T21:31:38Z Dylan Leard <dylan@button.is> # Function verifies the granted permissions a role has on tables & columns
database_functions/verify_policy [schema_ggircs_portal_private] 2020-02-03T17:44:49Z Dylan Leard <dylan@button.is> # Function verifies the row level security policies attached to a table
database_functions/set_general_permissions [schema_ggircs_portal_private] 2020-01-29T21:10:26Z Dylan Leard <dylan@button.is> # Sets the general or global permissions for schema ggircs_portal
database_functions/grant_permissions [database_functions/create_roles] 2020-01-28T21:37:13Z Dylan Leard <dylan@button.is> # Function grants permission necessary for each user
database_functions/upsert_policy [database_functions/create_roles] 2020-01-28T21:38:23Z Dylan Leard <dylan@button.is> # Function creates / alters policies for each table
trigger_functions/update_timestamps [schema_ggircs_portal_private] 2019-10-01T21:42:55Z Alec Wenzowski <alec@button.is> # A function to be used as a trigger to update the created_at and updated column values
trigger_functions/set_random_id [schema_ggircs_portal_private] 2019-12-04T00:34:07Z Dylan Leard <dylan@button.is> # Trigger function to generate a random string and set it to id
trigger_functions/set_expiry [schema_ggircs_portal_private] 2019-12-10T19:13:27Z Dylan Leard <dylan@button.is> # Function sets row expiry
trigger_functions/ensure_window_open_submit_application_status 2020-01-16T17:51:13Z Matthieu Foucault <matthieu@button.is> # add a trigger that raises an exception if the application window is closed
trigger_functions/run_graphile_worker_job [schema_ggircs_portal_private] 2020-02-20T23:08:40Z Dylan Leard <dylan@button.is> # Trigger function for running a graphile worker
trigger_functions/check_for_immutable_application_revision_status [schema_ggircs_portal_private] 2020-04-29T19:14:56Z Dylan Leard <dylan@button.is> # Trigger function checks if the status being added applies to the current version of the application. Otherwise do not add status.
trigger_functions/protect_read_only_products [schema_ggircs_portal_private] 2020-05-04T17:54:24Z Dylan Leard <dylan@button.is> # Trigger function protects any product rows/columns that should be read only
trigger_functions/request_for_organisation_access [schema_ggircs_portal] 2020-06-03T22:05:30Z Dylan Leard <ddylan@button.is> # Trigger function sends an email to a reporter when they have requested access to an organisation
trigger_functions/organisation_access_approved [schema_ggircs_portal] 2020-06-03T23:08:20Z Dylan Leard <dylan@button.is> # Trigger function sends an email when organisation access has been approved
trigger_functions/draft_application_started [schema_ggircs_portal] 2020-06-04T00:08:08Z Dylan Leard <dylan@button.is> # Trigger sends an email to the reporter when they begin a draft application
types/jwt_token [schema_ggircs_portal] 2019-10-17T00:28:40Z Alec Wenzowski <alec@button.is> # Add a schema for Keycloak JWT Tokens
function_session [schema_ggircs_portal types/jwt_token] 2019-10-17T01:02:35Z Alec Wenzowski <alec@button.is> # Something
types/ciip_user_organisation_status [schema_ggircs_portal] 2019-11-06T21:07:19Z Helen Liu <helen@button.is> # added new type file ciip_user_organisation_status
types/ciip_application_revision_status [schema_ggircs_portal] 2019-11-26T18:39:57Z Helen Liu <helen@button.is> # Added ciip application status type
types/ciip_form_result_status [schema_ggircs_portal] 2020-01-13T19:14:50Z Dylan Leard <dylan@button.is> # form result status enum type
types/review_comment_type [schema_ggircs_portal] 2020-01-13T20:18:15Z Dylan Leard <dylan@button.is> # The type of a review comment
types/application_search_result [schema_ggircs_portal types/ciip_application_revision_status] 2019-12-12T23:22:59Z Dylan Leard <dylan@button.is> # Return type for searching and listing applications
types/ciip_product_state [schema_ggircs_portal] 2020-05-04T17:14:21Z Dylan Leard <dylan@button.is> # product_state enum type
types/search_certification_url_result [schema_ggircs_portal] 2020-05-22T18:42:07Z Dylan Leard <dylan@button.is> # Custom return type for the certification_url search function
tables/ciip_user [schema_ggircs_portal trigger_functions/update_timestamps] 2019-07-11T18:32:05Z Hamza Javed <hamza@button.is> # Create a User table for GGIRCS Industry Portal (GIP)
trigger_functions/set_user_id [function_session tables/ciip_user] 2019-12-10T20:02:31Z Dylan Leard <dylan@button.is> # Trigger function updates the user_id field
trigger_functions/checksum_form_results [schema_ggircs_portal_private] 2020-01-13T23:21:05Z Dylan Leard <dylan@button.is> # Trigger function checksums current submtted and previous submitted form result & changes form result status on result
tables/product [schema_ggircs_portal trigger_functions/update_timestamps types/ciip_product_state trigger_functions/protect_read_only_products] 2019-08-06T20:15:37Z Hamza Javed <hamza@button.is> # A table for adding products (for benchmarks)
tables/reporting_year [schema_ggircs_portal] 2019-11-19T18:06:01Z Helen Liu <helen@button.is> # Added new table with current reporting year, application deadline
function_current_timestamp [tables/reporting_year] 2020-01-06T19:50:36Z Matthieu Foucault <matthieu@button.is> # Add a function to get current time
function_opened_reporting_year [tables/reporting_year function_current_timestamp] 2020-01-06T19:50:36Z Matthieu Foucault <matthieu@button.is> # Add a function to get the opened reporting year
function_next_reporting_year [tables/reporting_year function_current_timestamp] 2020-01-06T19:51:30Z Matthieu Foucault <matthieu@button.is> # Add a function to get the next reporting year
tables/benchmark [tables/product trigger_functions/update_timestamps tables/reporting_year] 2019-08-06T20:25:30Z Hamza Javed <hamza@button.is> # A table for Benchmarks and Eligibility Thresholds for products
tables/organisation [schema_ggircs_portal] 2019-10-11T18:45:40Z Hamza Javed <hamza@button.is> # The organisation data for CIIP
tables/ciip_user_organisation [schema_ggircs_portal tables/ciip_user tables/organisation] 2019-10-11T18:46:57Z Hamza Javed <hamza@button.is> # Through table for Users and Organisations with a many to many relationship
tables/facility [schema_ggircs_portal tables/organisation] 2019-10-11T18:47:49Z Hamza Javed <hamza@button.is> # Facility data for CIIP
tables/application [schema_ggircs_portal trigger_functions/update_timestamps] 2019-10-11T18:09:42Z Dylan Leard <dylan@button.is> # Application table
tables/application_revision [tables/application] 2019-12-12T00:21:28Z Dylan Leard <dylan@button.is> # Table contains versioning data for application revisions
trigger_functions/signature_md5 [schema_ggircs_portal_private] 2020-02-25T18:43:40Z Dylan Leard <dylan@button.is> # Trigger function creates (on insert) or compares(on update) form_result md5 hash
tables/form_json [schema_ggircs_portal trigger_functions/update_timestamps] 2019-07-24T20:00:52Z Hamza Javed <hamza@button.is> # Table for the survey js forms (in JSON)
tables/form_result [schema_ggircs_portal trigger_functions/update_timestamps tables/form_json] 2019-07-24T22:44:27Z Hamza Javed <hamza@button.is> # A place to store all the form results
function_current_form_result_md5 [tables/form_result] 2020-02-26T18:42:47Z Dylan Leard <dylan@button.is> # Function computes the current md5 hash of the concactenated form results
types/facility_search_result [schema_ggircs_portal] 2019-12-11T21:41:41Z Helen Liu <helen@button.is> # added return type for search all facilities function
tables/application_revision_status [schema_ggircs_portal trigger_functions/update_timestamps tables/application_revision trigger_functions/ensure_window_open_submit_application_status] 2019-08-29T19:42:02Z Dylan Leard <dylan@button.is> # add table application_revision_status to schema ggircs_portal
views/ciip_fuel [tables/form_result] 2019-08-19T22:26:15Z Hamza Javed <hamza@button.is> # View for fuels reported in CIIP application
views/ciip_production [tables/form_result] 2019-08-20T23:22:31Z Hamza Javed <hamza@button.is> # Module throughput and production data reported in the ciip application
search_functions/search_application_list [tables/application_revision_status types/application_search_result] 2019-09-03T20:40:05Z Dylan Leard <dylan@button.is> # add function for searching the list of applications
swrs_functions/get_swrs_organisation_data [schema_ggircs_portal] 2019-10-01T20:51:53Z Hamza Javed <hamza@button.is> # Function that imports information from swrs based on parameters
tables/ciip_application_wizard [tables/form_json] 2019-10-09T17:18:33Z Matthieu Foucault <matthieu@button.is> # Add ciip_application_wizard
swrs_functions/get_swrs_facility_data 2019-10-07T21:25:50Z Hamza Javed <hamza@button.is> # Function to import facility data from swrs
swrs_functions/get_swrs_operator_contact_data 2019-10-07T21:28:12Z Hamza Javed <hamza@button.is> # Get operator contact data from SWRS via function
swrs_functions/get_swrs_emission_data 2019-10-07T23:36:44Z Hamza Javed <hamza@button.is> # Get summarized emission data from swrs
swrs_functions/get_swrs_fuel_data 2019-10-08T16:31:12Z Hamza Javed <hamza@button.is> # Get fuel data from swrs
tables/fuel [schema_ggircs_portal] 2019-10-16T18:17:17Z Matthieu Foucault <matthieu@button.is> # add fuel table
mutations/create_application_mutation_chain [tables/application] 2019-10-25T18:24:34Z Dylan Leard <dylan@button.is> # Mutation chain to create an application and create a pending application status
computed_columns/application_application_revision_status [tables/application] 2019-10-30T23:57:31Z Helen Liu <helen@button.is> # Added new column application status to application
computed_columns/application_ordered_form_results [tables/application tables/form_result tables/ciip_application_wizard] 2019-10-30T22:29:53Z Dylan Leard <dylan@button.is> # Function to order form results on an application
tables/emission_category 2020-03-27T21:33:29Z Junmin Ahn <junmin@button.is> # Table for emission category
tables/gas [schema_ggircs_portal] 2019-11-13T18:37:12Z Hamza Javed <hamza@button.is> # Add a table for gases
tables/emission_category_gas [schema_ggircs_portal tables/gas tables/emission_category] 2019-11-12T22:24:51Z Hamza Javed <hamza@button.is> # Table for mapping emission category to all its gases and GWP values for the json form schema
swrs_functions/init_application_administration_form_result [tables/form_result swrs_functions/get_swrs_organisation_data swrs_functions/get_swrs_facility_data swrs_functions/get_swrs_operator_contact_data] 2019-11-08T22:46:02Z Matthieu Foucault <matthieu@button.is> # add function to initialize admin form result
swrs_functions/init_application_fuel_form_result [tables/form_result swrs_functions/get_swrs_fuel_data] 2019-11-12T18:00:52Z Matthieu Foucault <matthieu@button.is> # add function to initialize fuel form
swrs_functions/init_application_emission_form_result [tables/form_result swrs_functions/get_swrs_emission_data] 2019-11-12T18:01:51Z Matthieu Foucault <matthieu@button.is> # add function to initialize emission form
computed_columns/facility_has_swrs_report [tables/facility] 2019-11-12T19:25:09Z Matthieu Foucault <matthieu@button.is> # add function to check if a facility has a swrs report
search_functions/search_ciip_user_organisation [tables/ciip_user_organisation] 2019-11-06T18:34:19Z Helen Liu <helen@button.is> # Added search function on user organisation table
tables/review_comment [tables/application tables/form_json] 2019-11-25T23:54:50Z Hamza Javed <hamza@button.is> # General comment table with polymorphic ids`
swrs_functions/get_carbon_tax_data [schema_ggircs_portal] 2019-11-28T18:45:57Z Dylan Leard <dylan@button.is> # Function retrieves carbon tax data for CIIP carbon tax calculator
views/ciip_carbon_tax_calculation [swrs_functions/get_carbon_tax_data views/ciip_fuel tables/application] 2019-11-28T19:23:39Z Dylan Leard <dylan@button.is> # Calculates carbon tax based on ciip fuel data
search_functions/search_products [tables/product] 2019-11-21T19:48:58Z Dylan Leard <dylan@button.is> # Custom search function for products
tables/certification_url [tables/application trigger_functions/set_random_id] 2019-12-03T19:58:18Z Dylan Leard <dylan@button.is> # Table containing the unique certification URL for an application and related data.
views/ciip_emission [tables/application] 2019-12-13T00:12:13Z Matthieu Foucault <matthieu@button.is> # Add a view that calculates the total of non-biogenic emissions for an application
search_functions/search_organisation_facilities [tables/facility] 2019-12-04T18:42:11Z Helen Liu <helen@button.is> # added search filter for applications of facilities
search_functions/search_all_facilities [tables/facility] 2019-12-06T00:27:16Z Helen Liu <helen@button.is> # added search function for all facilities
computed_columns/application_latest_submitted_revision [tables/application_revision_status] 2019-12-12T18:40:39Z Dylan Leard <dylan@button.is> # Function to add computed column latest_submitted_revision to ggircs_portal.application
computed_columns/application_latest_draft_revision [tables/application_revision_status] 2019-12-12T18:41:24Z Dylan Leard <dylan@button.is> # Function to add computed column latest_draft_revision to ggircs_portal.application
mutations/create_application_revision_mutation_chain [tables/application_revision_status] 2019-12-13T23:52:16Z Dylan Leard <dylan@button.is> # Stored procedure to create an application revision and all dependent tables
computed_columns/application_revision_application_revision_status [tables/application_revision_status] 2019-12-17T23:56:59Z Dylan Leard <dylan@button.is> # Function creates a computed column on application_revision
computed_columns/form_result_internal_general_comments [tables/review_comment tables/form_result] 2019-12-19T00:09:34Z Dylan Leard <dylan@button.is> # Function to add computed column of application comments to form_result
computed_columns/form_result_requested_change_comments [tables/form_result tables/review_comment] 2020-01-15T18:08:51Z Dylan Leard <dylan@button.is> # Computed column to return all requested change comments for a form result
computed_columns/form_result_has_unresolved_comments [tables/form_result tables/review_comment] 2019-12-19T22:27:33Z Dylan Leard <dylan@button.is> # Function creates a computed boolean column on form result has_unresolved_comments
computed_columns/application_previous_submitted_revision [tables/application_revision_status] 2020-01-02T18:28:24Z Dylan Leard <dylan@button.is> # Function adds computed column on application for previous submitted revision
swrs_functions/import_swrs_organisation_facility 2019-12-30T22:34:43Z Matthieu Foucault <matthieu@button.is> # Add function to import swrs organisation and facility tables
tables/form_result_status [tables/form_result] 2020-01-13T19:11:49Z Dylan Leard <dylan@button.is> # Table containing the status of an individual form result
mutations/create_review_comment_mutation_chain [tables/review_comment tables/form_result_status] 2020-01-15T23:15:53Z Dylan Leard <dylan@button.is> # Mutation chain to create a comment and update the form_result_status table based on the type of the comment created
computed_columns/form_result_form_result_statuses [tables/form_result tables/form_result_status] 2020-01-17T19:01:37Z Dylan Leard <dylan@button.is> # Computed column gets all form result statuses for a form result by application_id and form_id
types/ciip_incentive_by_product [schema_ggircs_portal] 2020-02-05T00:27:23Z Hamza Javed <hamza@button.is> # Return type for the ciip_incentive_payment function
database_functions/validate_energy_products [views/ciip_production] 2020-06-05T02:20:45Z Dylan Leard <dylan@button.is> # Function validates the existence of energy products if required
computed_columns/application_revision_ciip_incentive [tables/benchmark views/ciip_production types/ciip_incentive_by_product] 2020-02-03T22:17:13Z Hamza Javed <hamza@button.is> # Function for calculating incentive payout per product
computed_columns/application_revision_certification_url [tables/certification_url] 2020-02-25T22:55:30Z Dylan Leard <dylan@button.is> # Computed column to retrieve the current certification url associated with the revision
computed_columns/certification_url_hash_matches [function_current_form_result_md5 tables/certification_url] 2020-02-26T21:55:34Z Dylan Leard <dylan@button.is> # Computed column(boolean) on certification_url that checks if the current md5 hash of all form_results = the form_results_md5 column in certification_url
computed_columns/application_revision_certification_signature_is_valid [tables/application_revision function_current_form_result_md5] 2020-02-26T22:47:00Z Dylan Leard <dylan@button.is> # Computed column(boolean) on application_revision to show validity of certification signature
database_functions/create_portal_app_user [database_functions/create_roles] 2020-04-17T21:51:09Z Matthieu Foucault <matthieu@button.is> # create the portal_app role
computed_columns/application_revision_is_current_version [tables/application_revision] 2020-04-29T20:51:35Z Dylan Leard <dylan@button.is> # Boolean value on application revision indicates if revision is latest version of the application
database_functions/get_valid_applications_for_reporter [tables/application] 2020-05-12T18:22:41Z Dylan Leard <dylan@button.is> # Database function returns a list of application ids that a reporter should have row-level access to
database_functions/get_valid_applications_for_certifier [tables/certification_url] 2020-05-12T18:23:35Z Dylan Leard <dylan@button.is> # Database function returns a list of application ids that a certifier should have row-level access to
policies/application_revision_status_policies [database_functions/get_valid_applications_for_reporter database_functions/get_valid_applications_for_certifier] 2020-05-12T18:34:40Z Dylan Leard <dylan@button.is> # Applies row-level security policies for application_revision_status table
policies/certification_url_policies [tables/certification_url] 2020-05-12T19:10:52Z Dylan Leard <dylan@button.is> # Applies row-level security policies for certification_url table
policies/application_revision_policies [database_functions/get_valid_applications_for_reporter database_functions/get_valid_applications_for_certifier] 2020-05-12T20:09:45Z Dylan Leard <dylan@button.is> # Applies row-level security for application_revision table
policies/application_policies [tables/certification_url] 2020-05-12T20:44:30Z Dylan Leard <dylan@button.is> # Applies row-level security for table application
policies/form_result_policies [database_functions/get_valid_applications_for_reporter database_functions/get_valid_applications_for_certifier] 2020-05-12T22:22:42Z Dylan Leard <dylan@button.is> # Applies row-level security policies for form_result table
policies/facility_policies [tables/certification_url] 2020-05-12T23:05:04Z Dylan Leard <dylan@button.is> # Applies row-level security policies to the facility table
computed_columns/ciip_user_has_certification_requests [tables/ciip_user tables/certification_url tables/application] 2020-05-13T17:23:35Z Kristen Cooke <kristen@button.is> # Computed column returns all certification requests (latest drafts) associated with a user's email
policies/benchmark_policies [tables/benchmark] 2020-05-19T20:35:10Z Dylan Leard <dylan@button.is> # Applies row-level security policies for benchmark table
policies/ciip_application_wizard_policies [tables/ciip_application_wizard] 2020-05-19T20:41:06Z Dylan Leard <dylan@button.is> # Adds row-level security policies for ciip_application_wizard table
policies/ciip_user_organisation_policies [tables/ciip_user_organisation] 2020-05-19T20:59:07Z Dylan Leard <dylan@button.is> # Applies row-level security policies for ciip_user_organisation table
policies/ciip_user_policies [tables/ciip_user] 2020-05-19T21:15:19Z Dylan Leard <dylan@button.is> # Adds row-level security policies for ciip_user table
policies/emission_category_gas_policies [tables/emission_category_gas] 2020-05-19T21:19:33Z Dylan Leard <dylan@button.is> # Adds row-level security policies for emission_category_gas table
policies/emission_category_policies [tables/emission_category] 2020-05-19T21:22:23Z Dylan Leard <dylan@button.is> # Adds row-level security policies for emission_category table
policies/form_json_policies [tables/form_json] 2020-05-19T21:25:50Z Dylan Leard <dylan@button.is> # Adds row-level security policies for form_json table
policies/form_result_status_policies [tables/form_result_status] 2020-05-19T21:29:48Z Dylan Leard <dylan@button.is> # Adds row-level security policies for form_result_status table
policies/fuel_policies [tables/fuel] 2020-05-19T21:32:56Z Dylan Leard <dylan@button.is> # Adds row-level security policies for fuel table
policies/gas_policies [tables/gas] 2020-05-19T21:35:16Z Dylan Leard <dylan@button.is> # Adds row-level security for gas table
policies/organisation_policies [tables/organisation] 2020-05-19T21:37:23Z Dylan Leard <dylan@button.is> # Adds row-level security policies for organisation table
policies/product_policies [tables/product] 2020-05-19T21:49:50Z Dylan Leard <dylan@button.is> # Adds row-level security policies for product table
policies/reporting_year_policies [tables/reporting_year] 2020-05-19T21:52:53Z Dylan Leard <dylan@button.is> # Adds row-level security policies for reporting_year table
policies/review_comment_policies [tables/review_comment] 2020-05-19T21:57:08Z Dylan Leard <dylan@button.is> # Adds row-level security policies for review_comment table
search_functions/search_certification_requests [tables/certification_url] 2020-05-22T23:03:47Z Dylan Leard <dylan@button.is> # Search function to retrieve a list of certification urls and related info for a certifier
@v1.0.0-rc.1 2020-06-05T23:18:57Z Matthieu Foucault <matthieu@button.is> # release v1.0.0-rc.1
tables/linked_product [schema_ggircs_portal] 2020-06-05T21:12:40Z Dylan Leard <dylan@button.is> # Table contains links for products that require reporting other products
policies/linked_product_policies [tables/linked_product] 2020-06-05T22:19:31Z Dylan Leard <dylan@button.is> # Applies row-level security policies for linked_product table
types/linked_product_return [schema_ggircs_portal] 2020-06-08T21:29:20Z Dylan Leard <dylan@button.is> # Return type for computed column product_linked_product
computed_columns/product_linked_product [tables/linked_product types/linked_product_return] 2020-06-05T22:36:32Z Dylan Leard <dylan@button.is> # Computed column returns a set of linked products that exist for a product id
@v1.0.0-rc.5 2020-06-17T18:45:39Z Matthieu Foucault <matthieu@button.is> # release v1.0.0-rc.5
@v1.0.0-rc.6 2020-06-17T23:02:56Z Matthieu Foucault <matthieu@button.is> # release v1.0.0-rc.6
@v1.0.0-rc.7 2020-06-18T18:52:29Z Matthieu Foucault <matthieu@button.is> # release v1.0.0-rc.7
tables/connect_session [schema_ggircs_portal_private] 2020-06-19T01:45:52Z Alec Wenzowski <alec@button.is> # session support for connect-pg-simple
trigger_functions/draft_application_started [trigger_functions/draft_application_started@v1.0.0-rc.5 schema_ggircs_portal] 2020-06-19T23:22:37Z Kristen Cooke <kristen@button.is> # Adds applicationId to job data for draft application started email
trigger_functions/organisation_access_approved [trigger_functions/organisation_access_approved@v1.0.0-rc.5 schema_ggircs_portal] 2020-06-19T23:47:12Z Kristen Cooke <kristen@button.is> # Adds operatorName and organisationId to job data for org access approved email
trigger_functions/run_graphile_worker_job [trigger_functions/run_graphile_worker_job@v1.0.0-rc.5 schema_ggircs_portal] 2020-06-20T00:11:19Z Kristen Cooke <kristen@button.is> # Adds more data to application status change and signed by certifier email jobs
database_functions/graphile_worker_job_definer [database_functions/graphile_worker_job_definer@v1.0.0-rc.5] 2020-06-22T16:36:16Z Dylan Leard <dylan@button.is> # change to graphile_worker_job_definer adds add_job() throttling
search_functions/search_all_facilities [search_functions/search_all_facilities@v1.0.0-rc.5] 2020-06-25T16:08:13Z Dylan Leard <dylan@button.is> # Migration: add guard if clause, fixes failure with null data
search_functions/search_certification_requests [search_functions/search_certification_requests@v1.0.0-rc.5] 2020-06-25T16:09:26Z Dylan Leard <dylan@button.is> # Migration: add guard if clause, fixes failure on null data
policies/facility_policies [policies/facility_policies@v1.0.0-rc.5] 2020-06-25T18:19:13Z Dylan Leard <dylan@button.is> # Migration: add organisation request approved requirement
database_functions/get_valid_applications_for_reporter [database_functions/get_valid_applications_for_reporter@v1.0.0-rc.5] 2020-06-25T18:22:04Z Dylan Leard <dylan@button.is> # Migration: add organisation request approved requirement to rls
computed_columns/facility_has_swrs_report [computed_columns/facility_has_swrs_report@v1.0.0-rc.5 function_opened_reporting_year] 2020-06-24T23:54:56Z Dylan Leard <dylan@button.is> # Migration: removes reporting_year parameter & retrieves current year via a function
swrs_functions/import_swrs_organisation_facility [swrs_functions/import_swrs_organisation_facility@v1.0.0-rc.5] 2020-06-25T21:18:57Z Dylan Leard <dylan@button.is> # Migration: update on conflict columns
tables/organisation_001 [tables/organisation] 2020-06-25T21:27:04Z Dylan Leard <dylan@button.is> # Migration: add uindex for swrs_organisation_id
tables/facility_001 [tables/facility] 2020-06-25T21:36:21Z Dylan Leard <dylan@button.is> # Migration: add unique index for swrs_facility_id
@v1.0.0-rc.8 2020-06-26T15:55:59Z Matthieu Foucault <matthieu@button.is> # release v1.0.0-rc.8
tables/application_001 [tables/application] 2020-06-29T17:43:45Z Dylan Leard <dylan@button.is> # Migration: add uindex for application table on facility_id + reporting_year
@v1.0.0-rc.9 2020-07-06T17:47:04Z Matthieu Foucault <matthieu@button.is> # release v1.0.0-rc.9
@v1.0.0-rc.10 2020-07-07T21:50:15Z Matthieu Foucault <matthieu@button.is> # release v1.0.0-rc.10
tables/application_002 [tables/application] 2020-07-08T22:11:32Z Matthieu Foucault <matthieu@button.is> # add report_id column to application table
mutations/create_application_mutation_chain [mutations/create_application_mutation_chain@v1.0.0-rc.9] 2020-07-08T22:20:11Z Matthieu Foucault <matthieu@button.is> # insert facility report_id when creating an application
@v1.0.0-rc.11 2020-07-13T17:25:31Z Matthieu Foucault <matthieu@button.is> # release v1.0.0-rc.11
computed_columns/application_revision_ciip_incentive [computed_columns/application_revision_ciip_incentive@v1.0.0-rc.11 tables/benchmark views/ciip_production] 2020-07-14T21:21:37Z Kristen Cooke <kristen@button.is> # Reflect update to product names: Exported heat/electricity --> Sold heat/electricity
@v1.0.0-rc.12 2020-07-15T20:11:57Z Matthieu Foucault <matthieu@button.is> # release v1.0.0-rc.12
@v1.0.0 2020-07-16T00:27:28Z Matthieu Foucault <matthieu@button.is> # release v1.0.0
@v1.0.1 2020-07-16T01:12:49Z Matthieu Foucault <matthieu@button.is> # release v1.0.1
@v1.0.2 2020-07-16T19:48:33Z Matthieu Foucault <matthieu@button.is> # release v1.0.2
search_functions/search_products [search_functions/search_products@v1.0.0-rc.12] 2020-07-20T17:26:50Z Matthieu Foucault <matthieu@button.is> # fix wrong fields being returned by search_product function
@v1.0.3 2020-07-20T17:36:02Z Matthieu Foucault <matthieu@button.is> # release v1.0.3
trigger_functions/request_for_organisation_access [trigger_functions/request_for_organisation_access@v1.0.0-rc.12] 2020-07-16T20:03:30Z Matthieu Foucault <matthieu@button.is> # remove unused select clause failing if there are multiple facilities
@v1.1.0 2020-07-22T16:32:21Z Matthieu Foucault <matthieu@button.is> # release v1.1.0
@v1.2.0 2020-07-27T18:36:49Z Matthieu Foucault <matthieu@button.is> # release v1.2.0
@v1.3.0 2020-07-29T20:54:44Z Matthieu Foucault <matthieu@button.is> # release v1.3.0
tables/application_revision_001 [tables/application_revision] 2020-07-22T23:13:57Z Dylan Leard <dylan@button.is> # Migration: add override column to application_revision
database_functions/read_only_user_policies [schema_ggircs_portal schema_ggircs_portal_private] 2020-07-30T18:10:31Z Dylan Leard <dylan@button.is> # function adds RLS policies for the read_only_user (metabase)
computed_columns/application_current_user_can_edit [tables/ciip_user_organisation tables/application] 2020-07-30T23:55:55Z Dylan Leard <dylan@button.is> # computed column returns a boolean value: whether the current user has edit permission on the application
policies/review_comment_policies [policies/review_comment_policies@v1.1.0] 2020-07-31T22:54:37Z Dylan Leard <dylan@button.is> # migration fixes the industry_user_statement for rls
computed_columns/application_revision_ciip_incentive [computed_columns/application_revision_ciip_incentive@v1.1.0] 2020-08-04T21:21:18Z Matthieu Foucault <matthieu@button.is> # allow product amount to be 0
@v1.4.0 2020-08-06T15:05:56Z Matthieu Foucault <matthieu@button.is> # release v1.4.0
computed_columns/application_revision_ciip_incentive [computed_columns/application_revision_ciip_incentive@v1.4.0] 2020-08-06T18:43:10Z Dylan Leard <dylan@button.is> # Migration: remove raised exceptions from incentive function
@v1.4.1 2020-08-06T23:40:58Z Dylan Leard <dylan@button.is> # release 1.4.1
views/ciip_admin [tables/form_result] 2020-08-11T18:03:30Z Dylan Leard <dylan@button.is> # View for admin data collected from ciip
computed_columns/application_revision_ciip_incentive [computed_columns/application_revision_ciip_incentive@v1.4.1] 2020-08-10T17:21:46Z Dylan Leard <dylan@button.is> # Migration: handle possible divide by zero
@v1.5.0 2020-08-12T19:08:56Z Dylan Leard <dylan@button.is> # release v1.5.0
@v1.6.0 2020-08-26T14:53:04Z Matthieu Foucault <matthieu@button.is> # release v1.6.0
computed_columns/ciip_user_has_certification_requests [computed_columns/ciip_user_has_certification_requests@v1.5.0] 2020-08-27T19:17:01Z Dylan Leard <dylan@button.is> # Migration: make certifier email comparison case insensitive
database_functions/get_valid_applications_for_certifier [database_functions/get_valid_applications_for_certifier@v1.5.0] 2020-08-27T19:19:07Z Dylan Leard <dylan@button.is> # Migration: make certifier email comparison case insensitive
policies/application_policies [policies/application_policies@v1.5.0] 2020-08-27T19:22:26Z Dylan Leard <dylan@button.is> # Migration: make certifier email comparison case insensitive
policies/certification_url_policies [policies/certification_url_policies@v1.5.0] 2020-08-27T19:24:00Z Dylan Leard <dylan@button.is> # Migration: make certifier email comparison case insensitive
search_functions/search_certification_requests [search_functions/search_certification_requests@v1.5.0] 2020-08-27T19:25:37Z Dylan Leard <dylan@button.is> # Migration: make certifier email comparison case insensitive
policies/facility_policies [policies/facility_policies@v1.5.0] 2020-08-27T20:57:07Z Dylan Leard <dylan@button.is> # Migration: make certifier_email comparison case insensitive
@v1.6.1 2020-08-28T16:58:22Z Matthieu Foucault <matthieu@button.is> # release v1.6.1
search_functions/search_all_facilities [search_functions/search_all_facilities@v1.5.0] 2020-08-24T20:55:30Z Dylan Leard <dylan@button.is> # Migration: allow function to filter on different reporting years
trigger_functions/ensure_window_open_submit_application_status [trigger_functions/ensure_window_open_submit_application_status@v1.5.0] 2020-08-24T17:54:35Z Matthieu Foucault <matthieu@button.is> # Applications can be started or submitted when the window is closed if version > 1
mutations/create_application_revision_mutation_chain [mutations/create_application_revision_mutation_chain@v1.5.0] 2020-08-24T18:28:33Z Matthieu Foucault <matthieu@button.is> # allow revisions to be created when the window is closed if version_number > 1
@v1.7.0 2020-09-02T20:36:02Z Matthieu Foucault <matthieu@button.is> # release v1.7.0
@v1.7.1 2020-09-08T16:20:14Z Matthieu Foucault <matthieu@button.is> # release v1.7.1
@v1.8.0 2020-09-08T23:39:34Z Matthieu Foucault <matthieu@button.is> # release v1.8.0
@v1.8.1 2020-09-16T16:16:22Z Matthieu Foucault <matthieu@button.is> # release v1.8.1
@v1.9.0 2020-09-23T16:37:38Z Matthieu Foucault <matthieu@button.is> # release v1.9.0
@v1.9.1 2020-09-23T21:50:05Z Dylan Leard <dylan@button.is> # release v1.9.1
@v1.10.0 2020-10-07T16:21:01Z Matthieu Foucault <matthieu@button.is> # release v1.10.0
computed_columns/facility_has_swrs_report [computed_columns/facility_has_swrs_report@v1.7.0] 2020-10-09T20:52:04Z Matthieu Foucault <matthieu@button.is> # improve performance of has_swrs_report
computed_columns/application_revision_ciip_incentive [computed_columns/application_revision_ciip_incentive@v1.7.0] 2020-10-13T18:48:16Z Dylan Leard <dylan@button.is> # Migration: include generated heat/electricity in calculation
@v1.10.1 2020-10-15T17:41:54Z Matthieu Foucault <matthieu@button.is> # release v1.10.1
@v1.11.0 2020-10-22T00:27:09Z Dylan Leard <dylan@button.is> # release v1.11.0
function_current_timestamp [function_current_timestamp@v1.10.1] 2020-10-30T23:15:30Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Change ggircs_portal.current_timestamp() to use the mockable now() call instead
@v1.12.0 2020-11-16T16:53:25Z Dylan Leard,,, <dleard@dleard-Aspire-V5-591G> # release v1.12.0
trigger_functions/protect_date_overlap [schema_ggircs_portal_private] 2020-11-25T19:17:30Z Dylan Leard <dylan@button.is> # Trigger function to deny changes if a date range overlaps another
tables/reporting_year_001 [tables/reporting_year trigger_functions/protect_date_overlap] 2020-11-25T19:38:33Z Dylan Leard <dylan@button.is> # Migration: add trigger to reporting_year table
@v1.13.0 2020-11-30T22:27:39Z Dylan Leard <dylan@button.is> # release v1.13.0
computed_columns/application_revision_is_immutable [computed_columns/application_application_revision_status] 2020-12-04T22:47:50Z Dylan Leard <dylan@button.is> # Computer column determines if a revision is immutable (has been submitted)
trigger_functions/immutable_form_result [computed_columns/application_revision_is_immutable] 2020-12-04T20:34:19Z Dylan Leard <dylan@button.is> # Trigger makes form_result immutable if submitted
tables/form_result_001 [tables/form_result trigger_functions/immutable_form_result] 2020-12-04T20:46:48Z Dylan Leard <dylan@button.is> # Migration: add immutable_form_result trigger to table
computed_columns/application_application_revision_by_string_version_number 2020-12-04T23:47:35Z Matthieu Foucault <matthieu@button.is> # Add application_application_revision_by_string_version_number computed column
@v1.13.1 2020-12-07T23:15:52Z Matthieu Foucault <matthieu@button.is> # release v1.13.1
function_next_reporting_year [function_next_reporting_year@v1.13.0] 2020-12-05T00:23:05Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Refactoring next_reporting_year() to use the default now() that can be mocked if needed
function_opened_reporting_year [function_opened_reporting_year@v1.13.0] 2020-12-05T00:27:10Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Refactoring to use now() instead of current_timestamp()
function_current_timestamp [function_current_timestamp@v1.13.0] 2020-12-05T00:12:09Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Removing the function since it's not needed anymore
@v1.14.0 2021-01-05T23:06:03Z Matthieu Foucault <matthieu@button.is> # release v1.14.0
tables/ciip_application_wizard_001 [tables/ciip_application_wizard] 2021-01-26T18:30:43Z Dylan Leard <dylan@button.is> # Migration: add boolean column that shows whether a form is currently in use (active)
mutations/create_application_revision_mutation_chain [mutations/create_application_revision_mutation_chain@v1.14.0] 2021-01-26T18:40:02Z Dylan Leard <dylan@button.is> # Migration: ignore inactive forms in the ciip_application_wizard table
@v1.15.0 2021-02-01T21:26:33Z Matthieu Foucault <matthieu@button.is> # release v1.15.0
views/ciip_admin [views/ciip_admin@v1.14.0] 2021-01-19T19:16:19Z Dylan Leard <dylan@button.is> # Migration: include ciip_2018 data
views/ciip_fuel [views/ciip_fuel@v1.14.0] 2021-01-19T21:08:48Z Dylan Leard <dylan@button.is> # Migration: handle 2018 ciip data
views/ciip_emission [views/ciip_emission@v1.14.0] 2021-01-19T21:25:56Z Dylan Leard <dylan@button.is> # Migration: handle ciip_2018 data
views/ciip_production [views/ciip_production@v1.14.0] 2021-01-19T23:39:49Z Dylan Leard <dylan@button.is> # Migration: handle ciip_2018 data
database_functions/create_portal_app_user [database_functions/create_portal_app_user@v1.14.0] 2021-01-29T22:47:30Z Dylan Leard <dylan@button.is> # Migration: drop portal_app user (obsolete) and create ciip_portal user if it does not already exist
@v1.16.0 2021-02-03T19:12:15Z Dylan Leard <dylan@button.is> # release v1.16.0
@v1.17.0 2021-02-18T18:12:46Z Matthieu Foucault <matthieu@button.is> # release v1.17.0
@v1.18.0 2021-02-25T23:09:48Z Dylan Leard <dylan@button.is> # release v1.18.0
computed_columns/application_status [computed_columns/application_application_revision_status] 2021-02-10T21:21:40Z Dylan Leard <dylan@button.is> # Wrapper function to return application_revision_status as a scalar
computed_columns/application_facility_name [tables/application] 2021-02-10T21:52:23Z Dylan Leard <dylan@button.is> # Wrapper returns facility_name as a scalar
computed_columns/application_bcghgid [tables/application] 2021-02-10T23:43:20Z Dylan Leard <dylan@button.is> # Wrapper function returns bcghgid as a scalar from composite computed column
computed_columns/application_submission_date [computed_columns/application_application_revision_status] 2021-02-10T23:58:04Z Dylan Leard <dylan@button.is> # This is a wrapper that returns a scalar created_at from the composite return values of application_application_revision_status
computed_columns/application_operator_name [tables/application] 2021-02-11T00:09:43Z Dylan Leard <dylan@button.is> # This is a wrapper function that returns operator_name as a scalar from the composite value returned by the application_operator computed_column
search_functions/search_application_list [search_functions/search_application_list@v1.16.0] 2021-02-26T21:43:31Z Dylan Leard <dylan@button.is> # Migration: remove deprecated search function search_application_list
tables/application_revision_status_001 [tables/application_revision_status] 2021-03-09T18:23:35Z Dylan Leard <dylan@button.is> # Migration: remove signature_md5 trigger from application_revision_status table
computed_columns/ciip_user_organisation_first_name [tables/ciip_user_organisation] 2021-02-17T16:05:50Z Dylan Leard <dylan@button.is> # Computed column returns first_name from ciip_user as a scalar for filter/sort
computed_columns/ciip_user_organisation_last_name [tables/ciip_user_organisation] 2021-02-17T16:12:59Z Dylan Leard <dylan@button.is> # Computed column returns last_name from ciip_user as a scalar for filter/sort
computed_columns/ciip_user_organisation_email_address [tables/ciip_user_organisation] 2021-02-17T16:17:21Z Dylan Leard <dylan@button.is> # Computed column returns email_address from ciip_user as a scalar for filter/sort
computed_columns/ciip_user_organisation_operator_name [tables/ciip_user_organisation] 2021-02-17T16:21:07Z Dylan Leard <dylan@button.is> # Computed column returns operator_name as a scalar for filter/sort
search_functions/search_ciip_user_organisation [search_functions/search_ciip_user_organisation@v1.16.0] 2021-03-03T21:18:43Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Removing the custom search function since the filter plugin now takes care of it
computed_columns/product_current_benchmark [tables/benchmark] 2021-02-17T21:51:22Z Dylan Leard <dylan@button.is> # Computed column returns the current benchmark for a product as a scalar for filter/sort
computed_columns/product_current_eligibility_threshold [tables/benchmark] 2021-02-17T21:52:01Z Dylan Leard <dylan@button.is> # Computed column returns the current eligibility threshold for a product for filter/sort
search_functions/search_products [search_functions/search_products@v1.16.0] 2021-03-08T19:38:56Z Dylan Leard <dylan@button.is> # Migration: remove deprecated search_products function
trigger_functions/update_timestamps [trigger_functions/update_timestamps@v1.16.0] 2021-03-11T18:53:14Z Dylan Leard <dylan@button.is> # Migration: allow subset of created/updated/deleted columns & ability to define what column triggers the deleted at/by columns
database_functions/upsert_timestamp_columns [trigger_functions/update_timestamps] 2021-03-11T20:56:27Z Dylan Leard <dylan@button.is> # Internal function adds the columns, trigger and indices to do with timestamps
tables/review_step [schema_ggircs_portal] 2021-03-09T22:42:29Z Dylan Leard <dylan@button.is> # Table review_step is the set of names a application_review_step can select from and whether they are actively in use
policies/review_step_policies [tables/review_step] 2021-03-10T19:00:05Z Dylan Leard <dylan@button.is> # RLS policies for table review_step
tables/application_review_step [tables/application] 2021-03-10T00:00:08Z Dylan Leard <dylan@button.is> # application_review_step table contains data on each application_review_step an application must go through before a status change
policies/application_review_step_policies [tables/application_review_step] 2021-03-10T00:25:14Z Dylan Leard <dylan@button.is> # Row level security policy definitions for the application_review_step table
trigger_functions/create_or_refresh_review_step [tables/application_review_step] 2021-03-10T00:33:49Z Dylan Leard <dylan@button.is> # Trigger function creates review steps on application submit if they do not exist, else refreshes the is_complete column
tables/application_revision_status_002 [trigger_functions/create_or_refresh_review_step] 2021-03-10T19:46:57Z Dylan Leard <dylan@button.is> # Migration: add trigger to create or refresh application_review_step rows associated with the application
types/facility_application 2021-03-09T00:34:17Z Matthieu Foucault <matthieu@button.is> # add composite type for a facility and its application for a given reporting period
queries/facility_application_by_reporting_year 2021-03-03T21:10:13Z Matthieu Foucault <matthieu@button.is> # add a custom query returning facilities and their applications for a given reporting year
computed_columns/facility_application_application_status 2021-03-09T00:41:16Z Matthieu Foucault <matthieu@button.is> # add computed column to retrieve current application status of a facility_application
computed_columns/facility_application_last_swrs_reporting_year 2021-03-09T00:41:52Z Matthieu Foucault <matthieu@button.is> # add computed column to retrieve last swrs reporting year of a facility_application
search_functions/search_all_facilities [search_functions/search_all_facilities@v1.16.0] 2021-03-09T00:52:12Z Matthieu Foucault <matthieu@button.is> # drop obsolete search function
types/application_search_result [types/application_search_result@v1.16.0] 2021-03-09T00:56:14Z Matthieu Foucault <matthieu@button.is> # drop obsolete search result type
computed_columns/form_result_form_result_statuses [computed_columns/form_result_form_result_statuses@v1.16.0] 2021-03-12T22:52:30Z Dylan Leard <dylan@button.is> # Migration: drop deprecated computed column
mutations/create_application_revision_mutation_chain [mutations/create_application_revision_mutation_chain@v1.16.0] 2021-03-12T22:57:07Z Dylan Leard <dylan@button.is> # Migration: do not create form_result_statuses
mutations/create_review_comment_mutation_chain [mutations/create_review_comment_mutation_chain@v1.16.0] 2021-03-12T22:59:39Z Dylan Leard <dylan@button.is> # Migration: remove form_result_status inserts
trigger_functions/checksum_form_results [trigger_functions/checksum_form_results@v1.16.0] 2021-03-12T23:02:03Z Dylan Leard <dylan@button.is> # Migration: remove form_result_status insert
policies/form_result_status_policies [policies/form_result_status_policies@v1.16.0] 2021-03-12T23:04:17Z Dylan Leard <dylan@button.is> # Migration: drop form_result_status RLS function
tables/form_result_status [tables/form_result_status@v1.16.0] 2021-03-12T23:10:08Z Dylan Leard <dylan@button.is> # Migration: drop form_result_status table
types/ciip_form_result_status [types/ciip_form_result_status@v1.16.0] 2021-03-12T23:22:31Z Dylan Leard <dylan@button.is> # Migration: drop deprecated type
tables/naics_code [schema_ggircs_portal] 2021-03-17T20:59:43Z Dylan Leard <dylan@button.is> # Table contains naics codes & their descriptions. NAICS is an acronym for North American Industry Classification System and is used to categorize industrial operations into sectors
mutations/create_naics_code [tables/naics_code] 2021-03-17T21:14:47Z Dylan Leard <dylan@button.is> # Mutation does an upsert when creating a row for a naics code that already exists
computed_columns/application_application_revision_status [computed_columns/application_application_revision_status@v1.16.0] 2021-03-19T16:33:04Z Dylan Leard <dylan@button.is> # Migration: order by id instead of created_at
computed_columns/application_revision_application_revision_status [computed_columns/application_revision_application_revision_status@v1.16.0] 2021-03-19T16:33:59Z Dylan Leard <dylan@button.is> # Migration: order by id rather than created_at
trigger_functions/immutable_form_result [trigger_functions/immutable_form_result@v1.16.0] 2021-03-19T16:35:40Z Dylan Leard <dylan@button.is> # Migration: order by id rather than created_at
computed_columns/application_revision_is_immutable [computed_columns/application_revision_is_immutable@v1.16.0] 2021-03-19T16:58:18Z Dylan Leard <dylan@button.is> # Migration: fix comment copy paste error
tables/product_naics_code [tables/naics_code tables/product] 2021-03-19T20:00:08Z Dylan Leard <dylan@button.is> # Table contains product-naics relationships
mutations/create_product_naics_code [tables/product_naics_code] 2021-03-19T20:11:08Z Dylan Leard <dylan@button.is> # Custom create mutation upserts on conflict (product_id, naics_id)
database_functions/verify_policy_not_present 2021-03-13T00:18:59Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # function to verify a policy doesn't exist on the system
policies/certification_url_policies [policies/certification_url_policies@v1.16.0] 2021-03-11T22:31:10Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Removing certification url policies as part of the certifier role deprecation
database_functions/verify_function_not_present 2021-03-12T00:26:55Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Helper that throws if a function already exists, meant to verify drop operations
computed_columns/application_revision_certification_signature_is_valid [computed_columns/application_revision_certification_signature_is_valid@v1.16.0] 2021-03-11T23:59:49Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Removing computed column as part of the certifier role deprecation
computed_columns/application_revision_certification_url [computed_columns/application_revision_certification_url@v1.16.0] 2021-03-12T00:43:24Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # dropping computed column as part of the certifier role deprecation
computed_columns/certification_url_hash_matches [computed_columns/certification_url_hash_matches@v1.16.0] 2021-03-12T21:59:41Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # dropping computed column as part of certifier role deprecation
computed_columns/ciip_user_has_certification_requests [computed_columns/ciip_user_has_certification_requests@v1.16.0] 2021-03-12T22:08:19Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # dropping cc as part of the certifier role deprecation
search_functions/search_certification_requests [search_functions/search_certification_requests@v1.16.0] 2021-03-12T22:11:06Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # removing function as part of the certifier role deprecation
database_functions/verify_type_not_present 2021-03-12T22:17:37Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # function that throws if an existing type name is passed in, returns true otherwise
types/search_certification_url_result [types/search_certification_url_result@v1.16.0] 2021-03-12T22:13:32Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # removing type as part of the certifier role deprecation
policies/application_policies_001 [policies/application_policies] 2021-03-12T23:54:50Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # dropping certifier policies on application table
policies/application_revision_policies_001 [policies/application_revision_policies] 2021-03-13T01:03:12Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # removing the application revision policies linked to the certifier role
policies/application_revision_status_policies_001 [policies/application_revision_status_policies] 2021-03-15T17:59:33Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # removing certifier RLS
policies/facility_policies_001 [policies/facility_policies] 2021-03-15T18:25:58Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # remove facility RLS for certifier role
policies/form_result_policies_001 [policies/form_result_policies] 2021-03-15T18:51:08Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # remove certifier RLS on form_result table
database_functions/get_valid_applications_for_certifier [database_functions/get_valid_applications_for_certifier@v1.16.0] 2021-03-15T20:29:13Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # removing function as a part of certifier role deprecation
trigger_functions/run_graphile_worker_job [trigger_functions/run_graphile_worker_job@v1.16.0] 2021-03-15T20:44:38Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # removing jobs related to certification
tables/certification_url_001 [tables/certification_url] 2021-03-15T21:50:02Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # dropping triggers for removed functions
trigger_functions/signature_md5 [trigger_functions/signature_md5@v1.16.0] 2021-03-15T22:58:28Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # removing since we don't certify applications anymore
trigger_functions/set_user_id [trigger_functions/set_user_id@v1.16.0] 2021-03-15T23:10:29Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # removing certification option
tables/form_json_001 [tables/form_json] 2021-03-26T20:02:39Z Dylan Leard <dylan@button.is> # Migration: add a default_form_result column to define the shape of an empty form result
swrs_functions/refresh_swrs_version_data [tables/form_json_001 tables/form_result swrs_functions/init_application_administration_form_result swrs_functions/init_application_emission_form_result swrs_functions/init_application_fuel_form_result] 2021-03-24T23:42:37Z Dylan Leard <dylan@button.is> # Function refreshes the swrs version (version 0) of an application with updated data from swrs
tables/application_revision_validation_function [schema_ggircs_portal] 2021-03-30T21:34:20Z Dylan Leard <dylan@button.is> # Add table for validation function data
types/application_revision_validation_result [schema_ggircs_portal_private] 2021-03-30T21:45:42Z Dylan Leard <dylan@button.is> # Add return type for application validation functions
computed_columns/application_revision_validation [types/application_revision_validation_result tables/application_revision_validation_function] 2021-03-30T22:00:03Z Dylan Leard <dylan@button.is> # Function calls all validation functions in the application_revision_validation_function table
computed_columns/form_result_internal_general_comments [computed_columns/form_result_internal_general_comments@v1.16.0] 2021-03-16T18:31:48Z Dylan Leard <dylan@button.is> # Migration: drop deprecated function
computed_columns/form_result_requested_change_comments [computed_columns/form_result_requested_change_comments@v1.16.0] 2021-03-16T18:38:16Z Dylan Leard <dylan@button.is> # Migration: drop deprecated function
computed_columns/form_result_has_unresolved_comments [computed_columns/form_result_has_unresolved_comments@v1.16.0] 2021-03-16T18:42:31Z Dylan Leard <dylan@button.is> # Migration: drop deprecated function
tables/review_comment_001 [tables/review_comment] 2021-03-16T22:47:13Z Dylan Leard <dylan@button.is> # Migration: Changes Data! drop form_id column, add application_review_step_id column, update existing comments to point to an application_review_step
types/review_comment_type_001 [types/review_comment_type] 2021-03-16T20:16:04Z Dylan Leard <dylan@button.is> # Migration: Changes Data! all 'approval' or 'requested changes' comments are changed to general in this migration. enum type is truncated to only includ general/internal
tables/fuel_001 [tables/fuel] 2021-04-08T21:59:59Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # adding a comments column to store additional metadata
computed_columns/application_revision_ordered_form_results 2021-04-09T14:47:48Z Matthieu Foucault <matthieu@button.is> # add a computed column to get the form columns for an application revision
computed_columns/application_current_user_can_edit [computed_columns/application_current_user_can_edit@v1.16.0] 2021-04-13T23:05:23Z Matthieu Foucault <matthieu@button.is> # drop unnecessary computed column
@v2.0.0 2021-04-14T22:14:52Z Kristen Cooke <kristen@button.is> # release v2.0.0
swrs_functions/get_carbon_tax_data [swrs_functions/get_carbon_tax_data@v2.0.0] 2021-04-15T17:07:24Z Dylan Leard <dylan@button.is> # Migration: use fuel_carbon_tax_details_id fkey in fuel_charge join
computed_columns/application_revision_naics_code [tables/form_result tables/application_revision] 2021-04-05T17:14:23Z Dylan Leard <dylan@button.is> # Computed column returns a row from the naics_code table for an application revision
queries/default_displayed_reporting_year 2021-04-16T21:15:17Z Matthieu Foucault <matthieu@button.is> # add a function that returns the reporting year displayed by default, based on the currently opened reporting year
queries/facility_application_by_reporting_year [queries/facility_application_by_reporting_year@v2.0.0 queries/default_displayed_reporting_year] 2021-04-16T21:17:27Z Matthieu Foucault <matthieu@button.is> # allow facility_application_by_reporting_year to not have a reporting year
@v2.1.0 2021-04-21T21:07:05Z Dylan Leard <dylan@button.is> # release v2.1.0
tables/gas_001 [tables/gas] 2021-04-20T17:48:20Z Dylan Leard <dylan@button.is> # Migration: add is_ciip_emission column to gas table
computed_columns/application_revision_total_ciip_emissions [tables/gas_001 views/ciip_emission] 2021-04-20T18:28:40Z Dylan Leard <dylan@button.is> # Add computed column that returns the total ciip emissions for an application revision
computed_columns/application_revision_ciip_incentive [computed_columns/application_revision_ciip_incentive@v2.0.0] 2021-04-20T21:55:26Z Dylan Leard <dylan@button.is> # Migration: use ciip_total_emissions computed column to retrieve total facility emissions
tables/review_step_001 [tables/review_step] 2021-04-23T18:50:16Z Kristen Cooke <kristen@button.is> # Migration: Change 'other' review step name to 'application'
views/ciip_carbon_tax_calculation [views/ciip_carbon_tax_calculation@v2.1.0] 2021-04-22T21:07:42Z Dylan Leard <dylan@button.is> # Migration: remove redundant (and unused) carbon_taxed return column
swrs_functions/get_carbon_tax_data [swrs_functions/get_carbon_tax_data@v2.1.0] 2021-04-22T21:03:38Z Dylan Leard <dylan@button.is> # Migration: refactor function to join on new swrs.carbon_tax_act_fuel_type table
tables/application_003 [tables/application_002] 2021-04-26T16:50:55Z Dylan Leard <dylan@button.is> # Migration: add swrs_report_id to application table
mutations/create_application_mutation_chain [mutations/create_application_mutation_chain@v2.1.0] 2021-04-26T17:34:19Z Dylan Leard <dylan@button.is> # Migration: insert swrs_report_id on new application creation
swrs_functions/refresh_swrs_version_data [swrs_functions/refresh_swrs_version_data@v2.1.0 tables/application_003] 2021-04-26T17:49:38Z Dylan Leard <dylan@button.is> # Migration: use swrs_report_id to connect swrs.report to ggircs_portal.application
swrs_functions/import_swrs_organisation_facility [swrs_functions/import_swrs_organisation_facility@v2.1.0] 2021-04-26T23:58:45Z Matthieu Foucault <matthieu@button.is> # import facility bc ghg id from facility table
database_functions/prune_orphan_swrs_orgs_and_facilities [schema_ggircs_portal_private] 2021-04-27T19:01:27Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Function that removes all facilities and organisations that have a swrs identifier not present in the swrs schema - meaning they have been removed by the ggircs ETL
@v2.2.0 2021-04-28T17:11:59Z Matthieu Foucault <matthieu@button.is> # release v2.2.0
types/emission_form_data [schema_ggircs_portal] 2021-04-28T15:57:04Z Dylan Leard <dylan@button.is> # Type defines the shape of an emission form_result
computed_columns/application_revision_emission_form_data [tables/application_revision tables/form_result] 2021-04-28T15:53:12Z Dylan Leard <dylan@button.is> # Computed column to retrieve the emission data for an application revision
types/fuel_form_data [schema_ggircs_portal] 2021-04-28T16:41:32Z Dylan Leard <dylan@button.is> # Type defines the shape of a fuel form result
computed_columns/application_revision_fuel_form_data [tables/application_revision tables/form_result] 2021-04-28T16:45:36Z Dylan Leard <dylan@button.is> # Computed column to retrieve the fuel data for an application revision
types/production_form_data [schema_ggircs_portal] 2021-04-28T16:55:58Z Dylan Leard <dylan@button.is> # Type defines the shape of a production form result
computed_columns/application_revision_production_form_data [tables/application_revision tables/form_result] 2021-04-28T16:59:56Z Dylan Leard <dylan@button.is> # Computed column to retrive the production data for an application revision
trigger_functions/ensure_window_open_submit_application_status [trigger_functions/ensure_window_open_submit_application_status@v2.2.0] 2021-04-28T20:58:50Z Dylan Leard <dylan@button.is> # Migration: only check version 1 in trigger (ignore v0)
@v2.3.0 2021-04-28T21:29:52Z Matthieu Foucault <matthieu@button.is> # release v2.3.0
tables/application_004 [tables/application_003] 2021-04-28T23:11:07Z Dylan Leard <dylan@button.is> # Migration: reset swrs_report_version to 1 (was set to current in last migration, which blocked updating via refresh_swrs_version_data())
swrs_functions/refresh_swrs_version_data [swrs_functions/refresh_swrs_version_data@v2.3.0] 2021-04-28T23:15:05Z Dylan Leard <dylan@button.is> # Migration: Update swrs_report_version on update
@v2.3.1 2021-04-29T17:39:15Z Dylan Leard <dylan@button.is> # release v2.3.1
application_validation_functions/emission_total_matches_rev_zero 2021-04-28T15:44:50Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Validation function that validates that for a given application revision, the emission total matches the revision zero (swrs) emission total
computed_columns/application_revision_total_ciip_emissions [computed_columns/application_revision_total_ciip_emissions@v2.3.0] 2021-04-28T23:40:07Z Naomi Aro <naomi.aro@gov.bc.ca> # Don't use metabase view
application_validation_functions/emission_category_missing_fuel [tables/application_revision_validation_function computed_columns/application_revision_validation computed_columns/application_revision_fuel_form_data computed_columns/application_revision_emission_form_data] 2021-04-27T21:54:17Z Dylan Leard <dylan@button.is> # Validation function to determine if there a missing fuels based on the emission categories with reported emissions
tables/form_json_002 2021-04-28T18:17:56Z Matthieu Foucault <matthieu@button.is> # add unique constraint on ggircs_portal.form_json.slug
views/ciip_admin [views/ciip_admin@v2.3.0] 2021-04-29T17:25:52Z Matthieu Foucault <matthieu@button.is> # add support for admin-2020 form data
computed_columns/application_revision_naics_code [computed_columns/application_revision_naics_code@v2.3.0] 2021-04-29T17:50:32Z Matthieu Foucault <matthieu@button.is> # add support for admin-2020 form data
swrs_functions/init_application_administration_form_result [swrs_functions/init_application_administration_form_result@v2.3.1] 2021-04-29T23:52:57Z Matthieu Foucault <matthieu@button.is> # update function for admin-2020 changes
application_validation_functions/no_reported_ciip_product [tables/application_revision_validation_function computed_columns/application_revision_production_form_data computed_columns/application_revision_validation] 2021-05-03T20:15:07Z Dylan Leard <dylan@button.is> # Validation function to determine if no valid ciip products have been reported
database_functions/add_missing_indices 2021-05-04T17:46:31Z Dylan Leard <dylan@button.is> # Migration: add indices to all foreign keys that are currently missing them
application_validation_functions/mandatory_products_are_reported [tables/application_revision_validation_function] 2021-05-04T16:35:43Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Validation function that makes sure that the mandatory products as defined with the NAICS code have all been reported
types/application_revision_fuel_carbon_tax 2021-05-05T18:07:47Z Matthieu Foucault <matthieu@button.is> # add type for an application revisions' fuel carbon tax
computed_columns/application_revision_carbon_tax 2021-05-04T19:13:25Z Matthieu Foucault <matthieu@button.is> # add a computed column to get an application revision's carbon tax
computed_columns/application_revision_ciip_incentive [computed_columns/application_revision_ciip_incentive@v2.3.1] 2021-05-05T20:19:59Z Matthieu Foucault <matthieu@button.is> # use application_revision_carbon_tax function for ciip incentive
views/ciip_carbon_tax_calculation [views/ciip_carbon_tax_calculation@v2.3.1] 2021-05-07T16:42:26Z Matthieu Foucault <matthieu@button.is> # ciip_carbon_tax_calculation view uses application_revision_carbon_tax
computed_columns/fuel_is_carbon_taxed [tables/fuel_001] 2021-05-05T21:43:53Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Computed column to check if a fuel is carbon taxed
application_validation_functions/carbon_taxed_fuels_match_rev_zero [tables/application_revision_validation_function computed_columns/fuel_is_carbon_taxed] 2021-05-05T23:59:47Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Validation function that makes sure the total of the carbon taxed fuels match the revision zero of an application
@v2.4.0 2021-05-12T22:18:37Z Dylan Leard <dylan@button.is> # release v2.4.0
tables/application_005 [tables/application_004] 2021-05-17T16:37:16Z Dylan Leard <dylan@button.is> # Migration: remove draft application email trigger from application table
trigger_functions/draft_application_started [trigger_functions/draft_application_started@v2.4.0] 2021-05-17T16:53:01Z Dylan Leard <dylan@button.is> # Migration: drop deprecated trigger function
@v2.5.0 2021-05-21T17:23:58Z Dylan Leard <dylan@button.is> # release v2.5.0
application_validation_functions/carbon_taxed_fuels_match_rev_zero [application_validation_functions/carbon_taxed_fuels_match_rev_zero@v2.5.0] 2021-05-25T20:58:25Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # fixing an issue where zero quantity trigger a division by zero
@v2.6.0 2021-05-27T17:28:19Z Dylan Leard <dylan@button.is> # release v2.6.0
trigger_functions/create_or_refresh_review_step [trigger_functions/create_or_refresh_review_step@v2.6.0] 2021-05-27T23:02:19Z Dylan Leard <dylan@button.is> # Migration: ignore version 0 when creating review steps for an application
tables/application_review_step_001 [tables/application_review_step] 2021-05-27T23:14:00Z Dylan Leard <dylan@button.is> # Migration: remove erroneously created application_review_steps for 2018 applications
queries/facility_application_by_reporting_year [queries/facility_application_by_reporting_year@v2.6.0] 2021-05-27T18:02:27Z Matthieu Foucault <matthieu@button.is> # fix order by clause
trigger_functions/ensure_window_open_submit_application_status [trigger_functions/ensure_window_open_submit_application_status@v2.6.0] 2021-05-28T17:01:41Z Dylan Leard <dylan@button.is> # Migration: only fire trigger on change from draft to submitted
swrs_functions/init_application_fuel_form_result [swrs_functions/init_application_fuel_form_result@v2.6.0] 2021-06-02T17:16:07Z Dylan Leard <dylan@button.is> # Migration: get fuel_units from ciip fuel table & coalesce quantity with 0
@v2.7.0 2021-06-03T19:08:36Z Dylan Leard <dylan@button.is> # release v2.7.0
@v2.8.0 2021-06-10T16:30:56Z Dylan Leard <dylan@button.is> # release v2.8.0
application_validation_functions/mandatory_products_are_reported [application_validation_functions/mandatory_products_are_reported@v2.7.0] 2021-06-14T15:58:32Z Dylan Leard <dylan@button.is> # Migration: filter out archived products from this validation
@v2.8.1 2021-06-14T22:27:35Z Dylan Leard <dylan@button.is> # release v2.8.1
views/ciip_admin [views/ciip_admin@v2.8.1] 2021-06-15T22:51:59Z Dylan Leard <dylan@button.is> # Migration: get bchghid from the facility table
views/ciip_incentive_per_facility 2021-06-16T17:12:43Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A view that shows the average and maximum incentive for a facility's latest application revision
@v2.9.0 2021-06-24T16:12:00Z Matthieu Foucault <matthieu@button.is> # release v2.9.0
swrs_functions/refresh_swrs_version_data [swrs_functions/refresh_swrs_version_data@v2.9.0] 2021-07-05T16:49:44Z Dylan Leard <dylan@button.is> # Migration: key on combination of swrs_facility_id and reporting_year
@v2.10.0 2021-07-07T23:51:18Z Dylan Leard <dylan@button.is> # release v2.10.0
database_functions/dd_enum_comparison_operators 2021-07-08T21:17:17Z Naomi Aro <naomi.aro@gov.bc.ca> # Enum operators for Metabase.
views/ciip_incentive_per_product 2021-07-15T18:36:33Z Matthieu Foucault <matthieu@button.is> # add ciip_incentive_per_product view
@v2.11.0 2021-07-20T17:12:11Z Matthieu Foucault <matthieu@button.is> # release v2.11.0
computed_columns/application_latest_submitted_revision_status 2021-07-21T20:38:31Z Matthieu Foucault <matthieu@button.is> # add a computed column to get an application revision's latest submitted revision status
@v2.11.1 2021-07-21T21:35:35Z Matthieu Foucault <matthieu@button.is> # release v2.11.1
tables/emission_category_001 [tables/emission_category] 2021-07-22T17:17:17Z Dylan Leard <dylan@button.is> # Migration: add carbon_taxed column to table
computed_columns/application_revision_carbon_tax [computed_columns/application_revision_carbon_tax@v2.11.1] 2021-07-22T17:30:19Z Dylan Leard <dylan@button.is> # Migration: exclude fuels not carbon taxed based on the emisison category they were reported under
@v2.11.2 2021-07-27T22:51:31Z Dylan Leard <dylan@button.is> # release v2.11.2
@v2.11.3 2021-08-05T23:25:49Z Matthieu Foucault <matthieu@button.is> # release v2.11.3
swrs_functions/refresh_swrs_version_data [swrs_functions/refresh_swrs_version_data@v2.11.2] 2021-08-05T21:16:21Z Naomi Aro <naomi.aro@gov.bc.ca> # Change to update swrs_report_id
fix_swrs_report_id 2021-08-05T22:41:22Z Naomi Aro <naomi.aro@gov.bc.ca> # Migration to update swrs report id inconsistencies
@v2.11.4 2021-08-06T21:38:14Z Matthieu Foucault <matthieu@button.is> # release v2.11.4
@v2.12.0 2021-08-25T17:51:07Z Dylan Leard <dylan@button.is> # release v2.12.0
views/ciip_production [views/ciip_production@v2.11.4] 2021-08-26T15:39:47Z Dylan Leard <dylan@button.is> # Migration: fix the location of comments in select statement
computed_columns/application_revision_ciip_incentive [computed_columns/application_revision_ciip_incentive@v2.11.4] 2021-08-26T20:08:44Z Dylan Leard <dylan@button.is> # Migration: fix issue where the emission intensity for some products is incorrect with 0 values
@v2.12.1 2021-09-15T17:48:53Z Dylan Leard <dylan@button.is> # release v2.12.1
trigger_functions/restrict_old_application_submission [function_opened_reporting_year tables/application_revision_status] 2021-09-16T21:05:16Z Dylan Leard <dylan@button.is> # Trigger function restricts submission of applications created in previous reporting years
tables/application_revision_status_003 [tables/application_revision_status trigger_functions/restrict_old_application_submission] 2021-09-16T21:09:41Z Dylan Leard <dylan@button.is> # Migration: add restriction trigger for old applications
mutations/create_application_revision_mutation_chain [mutations/create_application_revision_mutation_chain@v2.12.1] 2021-09-17T23:59:00Z Dylan Leard <dylan@button.is> # Migration: rework function to handle resubmitting applications from previous years
@v2.13.0 2021-09-28T16:52:13Z Dylan Leard <dylan@button.is> # release v2.13.0
@v2.13.1 2021-09-28T19:27:43Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # release v2.13.1
@v2.13.2 2021-10-05T19:51:38Z Matthieu Foucault <matthieu@button.is> # release v2.13.2
application_validation_functions/emission_category_missing_fuel [application_validation_functions/emission_category_missing_fuel@v2.13.0] 2021-04-27T21:54:17Z Dylan Leard <dylan@button.is> # Validation function to determine if there a missing fuels based on the emission categories with reported emissions
application_validation_functions/no_reported_ciip_product [application_validation_functions/no_reported_ciip_product@v2.13.0] 2021-10-12T22:07:57Z Alex Zorkin <AizeeDev@BigThink> # Updating validation ogic on un-required products
trigger_functions/create_or_refresh_review_step [trigger_functions/create_or_refresh_review_step@v2.13.0] 2021-11-03T19:58:12Z Dylan Leard <dylan@button.is> # Migration: fix trigger to use legacy review steps where appropriate
@v2.14.0 2021-11-09T18:57:51Z Dylan Leard <dylan@button.is> # release v2.14.0
@v2.14.1 2021-11-10T16:39:22Z Dylan Leard <dylan@button.is> # release v2.14.1
@v2.14.2 2021-11-24T19:40:25Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # release v2.14.2
swrs_functions/get_carbon_tax_data [swrs_functions/get_carbon_tax_data@v2.14.0] 2021-12-08T20:06:30Z Matthieu Foucault <matthieu@button.is> # update the type of unit_conversion_factor to numeric
@v2.14.3 2021-12-09T20:53:11Z Matthieu Foucault <matthieu@button.is> # release v2.14.3
tables/incremental_fuel_charge_baseline [schema_ggircs_portal] 2022-01-10T20:50:27Z Dylan Leard <dylan@button.is> # Add table to define the baseline carbon tax per taxed fuel type
policies/incremental_fuel_charge_baseline_policies [tables/incremental_fuel_charge_baseline] 2022-01-10T22:13:17Z Dylan Leard <dylan@button.is> # Add RLS policies for incremental_fuel_charge_baseline table
computed_columns/application_revision_carbon_tax [computed_columns/application_revision_carbon_tax@v2.14.3] 2022-01-11T21:22:31Z Dylan Leard <dylan@button.is> # Migration: use the incremental_fuel_charge_baseline table retrieving carbon tax data
computed_columns/application_revision_ciip_incentive [computed_columns/application_revision_ciip_incentive@v2.14.3] 2022-01-12T21:25:28Z Dylan Leard <dylan@button.is> # Migration: round incentive ratio to 2 decimal places during calculation
@v2.15.0 2022-01-13T18:00:00Z Dylan Leard <dylan@button.is> # release v2.15.0
computed_columns/application_revision_ciip_incentive [computed_columns/application_revision_ciip_incentive@v2.15.0] 2022-02-01T21:45:07Z Dylan Leard <dylan@button.is> # Migration: round incentive ratio to 4 decimal places during calculation
@v2.16.0 2022-02-02T16:47:46Z Dylan Leard <dylan@button.is> # release v2.16.0
swrs_functions/get_swrs_facility_data [swrs_functions/get_swrs_facility_data@v2.16.0] 2022-02-11T23:26:27Z Dylan Leard <dylan@button.is> # Migration: the swrs.facility_details view has been dropped from the ggircs data, refactoring this function not to rely on that view
@v2.16.1 2022-02-14T23:24:47Z Dylan Leard <dylan@button.is> # release v2.16.1
@v2.16.2 2022-02-15T00:42:04Z Dylan Leard <dylan@button.is> # release v2.16.2
swrs_functions/get_carbon_tax_data [swrs_functions/get_carbon_tax_data@v2.16.1] 2022-02-23T17:01:49Z Dylan Leard <dylan@button.is> # DROP: drop deprecated swrs_function
@v2.16.3 2022-02-23T18:31:35Z Dylan Leard <dylan@button.is> # release v2.16.3
database_functions/change_sold_electricity_units_to_gwh [tables/form_result] 2022-03-25T23:06:22Z Dylan Leard <dylan@button.is> # Migration: Changes the units for Sold Electricity to GWh and scales the reported productAmount in each form_result
@v2.17.0 2022-04-05T23:02:54Z Dylan Leard <dylan@button.is> # release v2.17.0
queries/facility_application_by_reporting_year [queries/facility_application_by_reporting_year@v2.17.0] 2022-04-19T21:55:17Z Dylan Leard <dylan@button.is> # Migration: function should return a reporting_year when no application exists
computed_columns/facility_application_has_swrs_report [queries/facility_application_by_reporting_year tables/facility] 2022-04-19T20:02:21Z Dylan Leard <dylan@button.is> # Computed column returns true if an application has a corresponding swrs report for the year
@v2.18.0 2022-05-03T21:56:12Z Dylan Leard <dylan@button.is> # release v2.18.0
@v2.18.1 2022-05-04T15:28:59Z Dylan Leard <dylan@button.is> # release v2.18.1
@v2.18.2 2022-07-18T17:00:15Z Dylan Leard <dylan@button.is> # release v2.18.2
@v2.18.3 2022-07-20T16:55:59Z Dylan Leard <dylan@button.is> # release v2.18.3
@v2.18.4 2022-11-04T20:58:09Z Dylan Leard <dylan@button.is> # release v2.18.4
@v2.18.5 2022-11-21T17:08:07Z Dylan Leard <dylan@button.is> # release v2.18.5
@v2.18.6 2022-11-22T23:04:34Z Dylan Leard <dylan@button.is> # release v2.18.6
policies/ciip_user_policies_001_drop_before_type_change 2023-01-12T00:53:56Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # dropping ciip_user RLS policy before we can change the type of the user uuid to varchar
policies/ciip_user_organisation_policies_001_drop_before_type_change 2023-01-12T00:40:10Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # dropping ciip_user_organisation RLS policy before we can change the type of the user uuid to varchar
policies/application_review_step_policies_001_drop_before_type_change 2023-01-12T01:13:09Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # dropping application_review_step RLS policy before we can change the type of the user uuid to varchar
types/jwt_token_001_sub_is_text [types/jwt_token] 2023-01-11T00:01:27Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Updating the jwt_token to have a sub of type text
trigger_functions/user_uuid_immutable_with_flag 2023-01-11T00:07:27Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Trigger that throws on update if the allow_uuid_update flag is set to false
tables/ciip_user_001_uuid_is_varchar [tables/ciip_user] 2023-01-11T19:48:19Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Reworking the user table to contain a session_sub instead of a uuid field
trigger_functions/set_user_id [trigger_functions/set_user_id@v2.18.0] 2023-01-12T22:06:23Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Updating the uuid type to text for a ciip user
trigger_functions/update_timestamps [trigger_functions/update_timestamps@v2.18.0] 2023-01-12T22:12:06Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Updating the uuid type to text for ciip user
policies/application_review_step_policies_002_recreate_after_type_change 2023-01-12T23:23:03Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Recreating the policies impacted by the cif_user uuid type change
policies/ciip_user_organisation_policies_002_recreate_after_type_change 2023-01-12T23:33:28Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Recreating the policies impacted by the cif_user uuid type change
policies/ciip_user_policies_002_recreate_after_type_change 2023-01-12T23:36:30Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Recreating the policies impacted by the cif_user uuid type change
mutations/create_or_update_ciip_user 2023-01-14T00:11:45Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Custom mutation to create or update users upon login
2022_01_16_keycloak_gold_reject_all_organisation_membership 2023-01-16T18:29:46Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Rejecting all organisation approval ahead of migrationg to keycloak gold, so that user accounts don't inherit permissions accidentally
@v2.19.0 2023-01-19T19:06:19Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # release v2.19.0
@v2.19.1 2023-01-19T22:14:02Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # release v2.19.1
policies/review_comment_policies [policies/review_comment_policies@v2.19.0] 2023-01-28T01:16:39Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Removing dependency on = operator
policies/ciip_user_organisation_policies_003_remove_enum_operator_dependency 2023-01-28T01:26:16Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Remove dependency on = operator on enum type
@v2.19.2 2023-01-28T02:49:53Z Dylan Leard <dylan@button.is> # release v2.19.2
queries/validate_current_user 2023-01-31T01:07:55Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Custom query to validate whether the currently logged in user is allowed to move forward in the app, or should be logged out.
policies/ciip_user_policies_003_restrict_permissions [policies/ciip_user_policies_002_recreate_after_type_change] 2023-02-17T23:18:16Z Dylan Leard <dylan@button.is> # Migration: update policy to be more restrictive for industry users
trigger_functions/run_graphile_worker_job [trigger_functions/run_graphile_worker_job@v2.19.2] 2023-02-21T15:38:26Z Gurjeet Matharu <gurjeet@matharuco.com> # reworking to remove notify_admin case
views/ciip_fuel [views/ciip_fuel@v2.19.2] 2023-02-23T18:22:07Z Dylan Leard <dylan@button.is> # Migration: parse comments correctly from json array
tables/fuel_emission_category 2023-02-21T21:21:09Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Create a fuel_emission_category table
