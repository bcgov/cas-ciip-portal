// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Organisations should render the user's requested organisations 1`] = `
<Fragment>
  <Container
    fluid={false}
    style={
      Object {
        "background": "#dee2e6",
        "padding": 20,
      }
    }
  >
    <ForwardRef
      noGutters={false}
    >
      <Col
        md={3}
      >
        <h5>
          Sort User Requests
        </h5>
      </Col>
      <Col
        md={1}
      />
      <Col
        md={3}
      >
        <h5>
          Filter User Requests
        </h5>
      </Col>
    </ForwardRef>
    <ForwardRef
      noGutters={false}
    >
      <Col
        md={2}
      >
        <Dropdown
          navbar={false}
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <Bootstrap(DropdownToggle)
            id="dropdown-sort"
            style={
              Object {
                "backgroundColor": "#036",
                "width": "100%",
              }
            }
          />
          <DropdownMenu
            alignRight={false}
            flip={true}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <DropdownMenuItemComponent
              itemEventKey="user_id"
              itemFunc={[Function]}
              itemId="sortApplications"
              itemTitle="User ID"
              key="user_id"
            />
            <DropdownMenuItemComponent
              itemEventKey="first_name"
              itemFunc={[Function]}
              itemId="sortApplications"
              itemTitle="First Name"
              key="first_name"
            />
            <DropdownMenuItemComponent
              itemEventKey="last_name"
              itemFunc={[Function]}
              itemId="sortApplications"
              itemTitle="Last Name"
              key="last_name"
            />
            <DropdownMenuItemComponent
              itemEventKey="email_address"
              itemFunc={[Function]}
              itemId="sortApplications"
              itemTitle="Email"
              key="email_address"
            />
            <DropdownMenuItemComponent
              itemEventKey="status"
              itemFunc={[Function]}
              itemId="sortApplications"
              itemTitle="Status"
              key="status"
            />
            <DropdownMenuItemComponent
              itemEventKey="operator_name"
              itemFunc={[Function]}
              itemId="sortApplications"
              itemTitle="Operator"
              key="operator_name"
            />
            ;
          </DropdownMenu>
        </Dropdown>
      </Col>
      <Col
        md={1}
      >
        <Button
          active={false}
          disabled={false}
          id="toggleDirection"
          onClick={[Function]}
          style={
            Object {
              "backgroundColor": "#036",
              "width": "100%",
            }
          }
          type="button"
          variant="primary"
        />
      </Col>
      <Col
        md={1}
      />
      <Col
        md={2}
      >
        <Dropdown
          navbar={false}
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <Bootstrap(DropdownToggle)
            id="dropdown-filter"
            style={
              Object {
                "backgroundColor": "#036",
                "width": "100%",
              }
            }
          />
          <DropdownMenu
            alignRight={false}
            flip={true}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <DropdownMenuItemComponent
              itemEventKey={null}
              itemFunc={[Function]}
              itemId="applySearchField"
              itemTitle="No Filter"
              key="null"
            />
            <DropdownMenuItemComponent
              itemEventKey="user_id"
              itemFunc={[Function]}
              itemId="applySearchField"
              itemTitle="User ID"
              key="user_id"
            />
            <DropdownMenuItemComponent
              itemEventKey="first_name"
              itemFunc={[Function]}
              itemId="applySearchField"
              itemTitle="First Name"
              key="first_name"
            />
            <DropdownMenuItemComponent
              itemEventKey="last_name"
              itemFunc={[Function]}
              itemId="applySearchField"
              itemTitle="Last Name"
              key="last_name"
            />
            <DropdownMenuItemComponent
              itemEventKey="email_address"
              itemFunc={[Function]}
              itemId="applySearchField"
              itemTitle="Email"
              key="email_address"
            />
            <DropdownMenuItemComponent
              itemEventKey="status"
              itemFunc={[Function]}
              itemId="applySearchField"
              itemTitle="Status"
              key="status"
            />
            <DropdownMenuItemComponent
              itemEventKey="operator_name"
              itemFunc={[Function]}
              itemId="applySearchField"
              itemTitle="Operator"
              key="operator_name"
            />
            ;
          </DropdownMenu>
        </Dropdown>
      </Col>
      <Col
        md={6}
      >
        <Form
          id="applySearchValue"
          inline={false}
          onSubmit={[Function]}
        >
          <FormRow>
            <FormGroup
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "Col",
                  "render": [Function],
                }
              }
              md={8}
            >
              <FormControl
                type="string"
              />
            </FormGroup>
            <FormGroup
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "Col",
                  "render": [Function],
                }
              }
              md={1}
            >
              <Button
                active={false}
                disabled={false}
                style={
                  Object {
                    "backgroundColor": "#036",
                  }
                }
                type="submit"
                variant="primary"
              >
                Filter
              </Button>
            </FormGroup>
          </FormRow>
        </Form>
      </Col>
    </ForwardRef>
  </Container>
  <br />
  <br />
  <Bootstrap(Table)
    hover={true}
    striped={true}
    style={
      Object {
        "border": "1px solid #f5f5f5",
        "textAlign": "center",
      }
    }
  >
    <thead
      style={
        Object {
          "backgroundColor": "#036",
          "color": "white",
        }
      }
    >
      <tr>
        <th>
          #
        </th>
        <th>
          First Name
        </th>
        <th>
          Last Name
        </th>
        <th>
          Email
        </th>
        <th>
          Operator Requested
        </th>
        <th>
          Status
        </th>
        <th>
          Action
        </th>
      </tr>
    </thead>
    <tbody>
      <Relay(OrganisationRequestsTableRowComponent)
        key="1"
        userOrganisation={
          Object {
            "id": 1,
            "status": "APPROVED",
          }
        }
      />
    </tbody>
  </Bootstrap(Table)>
</Fragment>
`;
