// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The ProductionFields Component when rendered from the LinkProduct modal should match the snapshot 1`] = `
<StringField
  autofocus={false}
  disabled={false}
  errorSchema={null}
  formContext={Object {}}
  formData={1}
  idSchema={
    Object {
      "$id": "product_0",
    }
  }
  isLinkModal={true}
  naicsCode={null}
  name="product"
  onBlur={[MockFunction]}
  onChange={[MockFunction]}
  readonly={false}
  registry={
    Object {
      "ArrayFieldTemplate": [Function],
      "FieldTemplate": [Function],
      "ObjectFieldTemplate": [Function],
      "definitions": Object {},
      "fields": Object {
        "AnyOfField": [Function],
        "ArrayField": [Function],
        "BooleanField": [Function],
        "DescriptionField": [Function],
        "NullField": [Function],
        "NumberField": [Function],
        "ObjectField": [Function],
        "OneOfField": [Function],
        "SchemaField": [Function],
        "StringField": [Function],
        "TitleField": [Function],
        "UnsupportedField": [Function],
      },
      "formContext": Object {},
      "rootSchema": Object {},
      "widgets": Object {
        "AltDateTimeWidget": [Function],
        "AltDateWidget": [Function],
        "BaseInput": [Function],
        "CheckboxWidget": [Function],
        "CheckboxesWidget": [Function],
        "ColorWidget": [Function],
        "DateTimeWidget": [Function],
        "DateWidget": [Function],
        "EmailWidget": [Function],
        "FileWidget": [Function],
        "HiddenWidget": [Function],
        "PasswordWidget": [Function],
        "RadioWidget": [Function],
        "RangeWidget": [Function],
        "SelectWidget": [Function],
        "TextWidget": [Function],
        "TextareaWidget": [Function],
        "URLWidget": [Function],
        "UpDownWidget": [Function],
      },
    }
  }
  required={false}
  schema={
    Object {
      "dependencies": Object {
        "requiresEmissionAllocation": Object {
          "oneOf": Array [
            Object {
              "properties": Object {
                "requiresEmissionAllocation": Object {
                  "const": false,
                },
              },
            },
            Object {
              "properties": Object {
                "productEmissions": Object {
                  "minimum": 0,
                  "title": "Emissions allocated to product",
                  "type": "number",
                },
                "requiresEmissionAllocation": Object {
                  "const": true,
                },
              },
              "required": Array [
                "productEmissions",
              ],
            },
          ],
        },
        "requiresProductAmount": Object {
          "oneOf": Array [
            Object {
              "properties": Object {
                "productAmount": Object {
                  "minimum": 0,
                  "title": "Annual Production Amount",
                  "type": "number",
                },
                "productUnits": Object {
                  "title": "Units",
                  "type": "string",
                },
                "requiresProductAmount": Object {
                  "const": true,
                },
              },
              "required": Array [
                "productAmount",
              ],
            },
            Object {
              "properties": Object {
                "requiresProductAmount": Object {
                  "const": false,
                },
              },
            },
          ],
        },
      },
      "enum": Array [
        1,
      ],
      "enumNames": Array [
        "foo",
      ],
      "properties": Object {
        "comments": Object {
          "type": "string",
        },
        "isEnergyProduct": Object {
          "type": "boolean",
        },
        "productRowId": Object {
          "title": "Product or Service",
          "type": "integer",
        },
        "requiresEmissionAllocation": Object {
          "type": "boolean",
        },
        "requiresProductAmount": Object {
          "type": "boolean",
        },
      },
      "required": Array [
        "productRowId",
        "requiresEmissionAllocation",
        "requiresProductAmount",
      ],
      "type": "object",
    }
  }
  uiSchema={
    Object {
      "items": Object {
        "comments": Object {
          "ui:col-md": 12,
          "ui:field": "ProblemReportField",
          "ui:options": Object {
            "disableRenderingIfEmpty": true,
            "label": false,
          },
        },
        "isEnergyProduct": Object {
          "ui:widget": "hidden",
        },
        "productAmount": Object {
          "ui:col-md": 4,
          "ui:help": "Report the annual production for the product, following the guidance document provided",
        },
        "productEmissions": Object {
          "ui:col-md": 4,
          "ui:help": "Report emissions associated to CIIP product, in tCO2e",
        },
        "productRowId": Object {
          "ui:col-md": 12,
          "ui:field": "productRowId",
          "ui:widget": "SearchWidget",
        },
        "productUnits": Object {
          "ui:col-md": 4,
          "ui:readonly": true,
        },
        "requiresEmissionAllocation": Object {
          "ui:widget": "hidden",
        },
        "requiresProductAmount": Object {
          "ui:widget": "hidden",
        },
        "ui:field": "product",
        "ui:order": Array [
          "comments",
          "productRowId",
          "productAmount",
          "productUnits",
          "*",
        ],
      },
      "ui:add-text": "Add a Product",
      "ui:remove-text": "Remove Product",
    }
  }
/>
`;

exports[`The ProductionFields Component without naics code and isLinkModal is false should match the snapshot 1`] = `
<Alert
  closeLabel="Close alert"
  show={true}
  transition={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "defaultProps": Object {
        "appear": false,
        "in": false,
        "mountOnEnter": false,
        "timeout": 300,
        "unmountOnExit": false,
      },
      "displayName": "Fade",
      "render": [Function],
    }
  }
  variant="danger"
>
  We did not find any products associated with your NAICS code. Please verify the NAICS code entered in the Admin tab exists and is correct.
</Alert>
`;

exports[`The ProductionRowIdField Component with archived product should match the snapshot 1`] = `
<div>
  <InputGroup
    className="mb-3"
  >
    <InputGroupPrepend>
      <InputGroupText>
        bar
      </InputGroupText>
    </InputGroupPrepend>
  </InputGroup>
</div>
`;

exports[`The ProductionRowIdField Component with published product matched to a naics code should match the snapshot 1`] = `
<StringField
  autofocus={false}
  disabled={false}
  errorSchema={null}
  formContext={Object {}}
  formData={1}
  idSchema={
    Object {
      "$id": "product_0",
    }
  }
  naicsCode={
    Object {
      " $refType": "ProductRowIdField_naicsCode",
      "id": "abc",
      "productsByNaicsCode": Object {
        "edges": Array [
          Object {
            "node": Object {
              "productName": "foo",
              "productState": "PUBLISHED",
              "rowId": 1,
            },
          },
        ],
      },
    }
  }
  name="product"
  onBlur={[MockFunction]}
  onChange={[MockFunction]}
  readonly={false}
  registry={
    Object {
      "ArrayFieldTemplate": [Function],
      "FieldTemplate": [Function],
      "ObjectFieldTemplate": [Function],
      "definitions": Object {},
      "fields": Object {
        "AnyOfField": [Function],
        "ArrayField": [Function],
        "BooleanField": [Function],
        "DescriptionField": [Function],
        "NullField": [Function],
        "NumberField": [Function],
        "ObjectField": [Function],
        "OneOfField": [Function],
        "SchemaField": [Function],
        "StringField": [Function],
        "TitleField": [Function],
        "UnsupportedField": [Function],
      },
      "formContext": Object {},
      "rootSchema": Object {},
      "widgets": Object {
        "AltDateTimeWidget": [Function],
        "AltDateWidget": [Function],
        "BaseInput": [Function],
        "CheckboxWidget": [Function],
        "CheckboxesWidget": [Function],
        "ColorWidget": [Function],
        "DateTimeWidget": [Function],
        "DateWidget": [Function],
        "EmailWidget": [Function],
        "FileWidget": [Function],
        "HiddenWidget": [Function],
        "PasswordWidget": [Function],
        "RadioWidget": [Function],
        "RangeWidget": [Function],
        "SelectWidget": [Function],
        "TextWidget": [Function],
        "TextareaWidget": [Function],
        "URLWidget": [Function],
        "UpDownWidget": [Function],
      },
    }
  }
  required={false}
  schema={
    Object {
      "dependencies": Object {
        "requiresEmissionAllocation": Object {
          "oneOf": Array [
            Object {
              "properties": Object {
                "requiresEmissionAllocation": Object {
                  "const": false,
                },
              },
            },
            Object {
              "properties": Object {
                "productEmissions": Object {
                  "minimum": 0,
                  "title": "Emissions allocated to product",
                  "type": "number",
                },
                "requiresEmissionAllocation": Object {
                  "const": true,
                },
              },
              "required": Array [
                "productEmissions",
              ],
            },
          ],
        },
        "requiresProductAmount": Object {
          "oneOf": Array [
            Object {
              "properties": Object {
                "productAmount": Object {
                  "minimum": 0,
                  "title": "Annual Production Amount",
                  "type": "number",
                },
                "productUnits": Object {
                  "title": "Units",
                  "type": "string",
                },
                "requiresProductAmount": Object {
                  "const": true,
                },
              },
              "required": Array [
                "productAmount",
              ],
            },
            Object {
              "properties": Object {
                "requiresProductAmount": Object {
                  "const": false,
                },
              },
            },
          ],
        },
      },
      "enum": Array [
        1,
      ],
      "enumNames": Array [
        "foo",
      ],
      "properties": Object {
        "comments": Object {
          "type": "string",
        },
        "isEnergyProduct": Object {
          "type": "boolean",
        },
        "productRowId": Object {
          "title": "Product or Service",
          "type": "integer",
        },
        "requiresEmissionAllocation": Object {
          "type": "boolean",
        },
        "requiresProductAmount": Object {
          "type": "boolean",
        },
      },
      "required": Array [
        "productRowId",
        "requiresEmissionAllocation",
        "requiresProductAmount",
      ],
      "type": "object",
    }
  }
  uiSchema={
    Object {
      "items": Object {
        "comments": Object {
          "ui:col-md": 12,
          "ui:field": "ProblemReportField",
          "ui:options": Object {
            "disableRenderingIfEmpty": true,
            "label": false,
          },
        },
        "isEnergyProduct": Object {
          "ui:widget": "hidden",
        },
        "productAmount": Object {
          "ui:col-md": 4,
          "ui:help": "Report the annual production for the product, following the guidance document provided",
        },
        "productEmissions": Object {
          "ui:col-md": 4,
          "ui:help": "Report emissions associated to CIIP product, in tCO2e",
        },
        "productRowId": Object {
          "ui:col-md": 12,
          "ui:field": "productRowId",
          "ui:widget": "SearchWidget",
        },
        "productUnits": Object {
          "ui:col-md": 4,
          "ui:readonly": true,
        },
        "requiresEmissionAllocation": Object {
          "ui:widget": "hidden",
        },
        "requiresProductAmount": Object {
          "ui:widget": "hidden",
        },
        "ui:field": "product",
        "ui:order": Array [
          "comments",
          "productRowId",
          "productAmount",
          "productUnits",
          "*",
        ],
      },
      "ui:add-text": "Add a Product",
      "ui:remove-text": "Remove Product",
    }
  }
/>
`;
