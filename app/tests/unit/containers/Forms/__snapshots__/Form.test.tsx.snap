// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Form Component should match the snapshot 1`] = `
<div
  className="jsx-1645944843 "
>
  <Alert
    closeLabel="Close alert"
    show={true}
    transition={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "appear": false,
          "in": false,
          "mountOnEnter": false,
          "timeout": 300,
          "unmountOnExit": false,
        },
        "render": [Function],
      }
    }
    variant="info"
  >
    Note: Your form input will be saved automatically as you type.
  </Alert>
  <div
    className="jsx-1645944843 card"
  >
    <div
      className="jsx-1645944843 card-header"
    >
      <Row
        noGutters={false}
      >
        <Col
          md={8}
        >
          <h1
            className="jsx-1645944843"
          >
            Foo
          </h1>
        </Col>
        <Col
          md={4}
        >
          <SavingIndicator
            isSaved={true}
            style={
              Object {
                "lineHeight": "2.25em",
              }
            }
          />
        </Col>
      </Row>
    </div>
    <Row
      noGutters={false}
      style={
        Object {
          "padding": "0 2em 2em 2em",
        }
      }
    >
      <Col
        md={12}
      >
        <MissingProductsComponent
          formResult={Object {}}
          query={
            Object {
              " $fragmentRefs": Object {
                "EmissionCategoryRowIdField_query": true,
                "FuelField_query": true,
                "FuelRowIdField_query": true,
                "NaicsField_query": true,
                "ProductField_query": true,
                "ProductRowIdField_query": true,
              },
              " $refType": "Form_query",
              "products": Object {
                "edges": Array [],
              },
            }
          }
        />
        <Form
          ArrayFieldTemplate={[Function]}
          ErrorList={[Function]}
          FieldTemplate={[Function]}
          ObjectFieldTemplate={[Function]}
          disabled={false}
          fields={
            Object {
              "AddCommentField": [Function],
              "NumberField": [Function],
              "ProductsArrayField": [Function],
              "emission": [Function],
              "emissionCategoryRowId": [Function],
              "emissionGas": [Function],
              "emissionSource": [Function],
              "fuel": [Function],
              "fuelRowId": [Function],
              "naics": [Function],
              "product": [Function],
              "productRowId": [Function],
            }
          }
          formContext={
            Object {
              "ciipFormResult": Object {
                " $refType": "Form_ciipFormResult",
                "formJsonByFormId": Object {
                  "ciipApplicationWizardByFormId": Object {
                    "formPosition": 0,
                  },
                  "formJson": Object {
                    "schema": Object {},
                  },
                  "name": "Foo",
                },
                "formResult": Object {},
              },
              "query": Object {
                " $fragmentRefs": Object {
                  "EmissionCategoryRowIdField_query": true,
                  "FuelField_query": true,
                  "FuelRowIdField_query": true,
                  "NaicsField_query": true,
                  "ProductField_query": true,
                  "ProductRowIdField_query": true,
                },
                " $refType": "Form_query",
                "products": Object {
                  "edges": Array [],
                },
              },
            }
          }
          formData={Object {}}
          liveValidate={false}
          noHtml5Validate={true}
          noValidate={false}
          omitExtraData={false}
          onError={[Function]}
          onSubmit={[MockFunction]}
          readonly={false}
          schema={Object {}}
          showErrorList={false}
          transformErrors={[Function]}
          uiSchema={Object {}}
          validate={[Function]}
          widgets={
            Object {
              "SearchWidget": [Function],
            }
          }
        >
          <Button
            active={false}
            disabled={false}
            size="lg"
            type="submit"
            variant="primary"
          >
            Save & Continue
          </Button>
          <Link
            href={
              Object {
                "pathname": "/reporter",
              }
            }
            passHref={true}
          >
            <Button
              active={false}
              className="exit-button"
              disabled={false}
              size="lg"
              style={
                Object {
                  "background": "white",
                }
              }
              variant="outline-secondary"
            >
              Save & Exit
            </Button>
          </Link>
        </Form>
      </Col>
    </Row>
  </div>
  <JSXStyle
    id="3923245764"
  >
    .
    r
    j
    s
    f
     
    .
    f
    o
    r
    m
    -
    r
    o
    w
    {
    m
    a
    r
    g
    i
    n
    :
    2
    0
    p
    x
     
    0
     
    2
    0
    p
    x
    ;
    }
    .
    e
    m
    i
    s
    s
    i
    o
    n
    -
    f
    o
    r
    m
     
    .
    r
    j
    s
    f
     
    .
    f
    o
    r
    m
    -
    r
    o
    w
    {
    m
    a
    r
    g
    i
    n
    :
    0
    ;
    }
    .
    n
    o
    -
    c
    o
    l
    -
    p
    a
    d
    d
    i
    n
    g
     
    .
    f
    o
    r
    m
    -
    r
    o
    w
    &gt;
    .
    c
    o
    l
    ,
    .
    n
    o
    -
    c
    o
    l
    -
    p
    a
    d
    d
    i
    n
    g
     
    .
    f
    o
    r
    m
    -
    r
    o
    w
    &gt;
    [
    c
    l
    a
    s
    s
    *
    =
    "
    c
    o
    l
    -
    "
    ]
    {
    p
    a
    d
    d
    i
    n
    g
    :
    0
    ;
    }
    .
    e
    r
    r
    o
    r
    s
    {
    m
    a
    r
    g
    i
    n
    :
    1
    e
    m
     
    0
     
    0
     
    0
    ;
    p
    a
    d
    d
    i
    n
    g
    :
    2
    0
    p
    x
    ;
    b
    a
    c
    k
    g
    r
    o
    u
    n
    d
    :
    #
    c
    e
    5
    c
    5
    c
    ;
    c
    o
    l
    o
    r
    :
    w
    h
    i
    t
    e
    ;
    f
    o
    n
    t
    -
    s
    i
    z
    e
    :
    2
    0
    p
    x
    ;
    }
    u
    l
    .
    e
    r
    r
    o
    r
    -
    d
    e
    t
    a
    i
    l
    {
    p
    a
    d
    d
    i
    n
    g
    :
    0
    ;
    l
    i
    s
    t
    -
    s
    t
    y
    l
    e
    :
    n
    o
    n
    e
    ;
    }
    u
    l
    .
    e
    r
    r
    o
    r
    -
    d
    e
    t
    a
    i
    l
     
    l
    i
    .
    t
    e
    x
    t
    -
    d
    a
    n
    g
    e
    r
    {
    b
    a
    c
    k
    g
    r
    o
    u
    n
    d
    :
    #
    c
    e
    5
    c
    5
    c
    ;
    c
    o
    l
    o
    r
    :
    w
    h
    i
    t
    e
     
    !
    i
    m
    p
    o
    r
    t
    a
    n
    t
    ;
    p
    a
    d
    d
    i
    n
    g
    :
    5
    p
    x
    ;
    }
    .
    e
    x
    i
    t
    -
    b
    u
    t
    t
    o
    n
    {
    c
    o
    l
    o
    r
    :
    #
    0
    0
    3
    3
    6
    6
    ;
    m
    a
    r
    g
    i
    n
    -
    l
    e
    f
    t
    :
    5
    p
    x
    ;
    b
    o
    r
    d
    e
    r
    -
    c
    o
    l
    o
    r
    :
    #
    0
    0
    3
    3
    6
    6
    ;
    }
    .
    e
    x
    i
    t
    -
    b
    u
    t
    t
    o
    n
    :
    h
    o
    v
    e
    r
    {
    c
    o
    l
    o
    r
    :
    w
    h
    i
    t
    e
     
    !
    i
    m
    p
    o
    r
    t
    a
    n
    t
    ;
    b
    a
    c
    k
    g
    r
    o
    u
    n
    d
    :
    #
    0
    0
    7
    b
    f
    f
     
    !
    i
    m
    p
    o
    r
    t
    a
    n
    t
    ;
    }
  </JSXStyle>
  <JSXStyle
    id="1645944843"
  >
    .card.jsx-1645944843{border-color:#a4a4a4;background-color:#f4f4f4;}.card-header.jsx-1645944843{background-color:#036;color:#fff;}.card-header.jsx-1645944843 h1.jsx-1645944843{margin-bottom:0;font-size:30px;display:inline-block;}.add-button-container.jsx-1645944843{height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:space-around;-webkit-justify-content:space-around;-ms-flex-pack:space-around;justify-content:space-around;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}
  </JSXStyle>
</div>
`;

exports[`The Form Component should not render an alert reminder to check the guidance if no product requires emission allocation 1`] = `
<div
  className="jsx-1645944843 "
>
  <Alert
    closeLabel="Close alert"
    show={true}
    transition={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "appear": false,
          "in": false,
          "mountOnEnter": false,
          "timeout": 300,
          "unmountOnExit": false,
        },
        "render": [Function],
      }
    }
    variant="info"
  >
    Note: Your form input will be saved automatically as you type.
  </Alert>
  <Relay(VerificationStatementComponent)
    onError={[Function]}
  />
  <div
    className="jsx-1645944843 card"
  >
    <div
      className="jsx-1645944843 card-header"
    >
      <Row
        noGutters={false}
      >
        <Col
          md={8}
        >
          <h1
            className="jsx-1645944843"
          >
            Foo
          </h1>
        </Col>
        <Col
          md={4}
        >
          <SavingIndicator
            isSaved={true}
            style={
              Object {
                "lineHeight": "2.25em",
              }
            }
          />
        </Col>
      </Row>
    </div>
    <Row
      noGutters={false}
      style={
        Object {
          "padding": "0 2em 2em 2em",
        }
      }
    >
      <Col
        md={12}
      >
        <MissingProductsComponent
          formResult={
            Array [
              Object {
                "requiresEmissionAllocation": false,
              },
            ]
          }
          query={
            Object {
              " $fragmentRefs": Object {
                "EmissionCategoryRowIdField_query": true,
                "FuelField_query": true,
                "FuelRowIdField_query": true,
                "NaicsField_query": true,
                "ProductField_query": true,
                "ProductRowIdField_query": true,
              },
              " $refType": "Form_query",
              "products": Object {
                "edges": Array [],
              },
            }
          }
        />
        <Form
          ArrayFieldTemplate={[Function]}
          ErrorList={[Function]}
          FieldTemplate={[Function]}
          ObjectFieldTemplate={[Function]}
          disabled={false}
          fields={
            Object {
              "AddCommentField": [Function],
              "NumberField": [Function],
              "ProductsArrayField": [Function],
              "emission": [Function],
              "emissionCategoryRowId": [Function],
              "emissionGas": [Function],
              "emissionSource": [Function],
              "fuel": [Function],
              "fuelRowId": [Function],
              "naics": [Function],
              "product": [Function],
              "productRowId": [Function],
            }
          }
          formContext={
            Object {
              "ciipFormResult": Object {
                " $refType": "Form_ciipFormResult",
                "formJsonByFormId": Object {
                  "ciipApplicationWizardByFormId": Object {
                    "formPosition": 3,
                  },
                  "formJson": Object {
                    "schema": Object {},
                  },
                  "name": "Foo",
                },
                "formResult": Array [
                  Object {
                    "requiresEmissionAllocation": false,
                  },
                ],
              },
              "query": Object {
                " $fragmentRefs": Object {
                  "EmissionCategoryRowIdField_query": true,
                  "FuelField_query": true,
                  "FuelRowIdField_query": true,
                  "NaicsField_query": true,
                  "ProductField_query": true,
                  "ProductRowIdField_query": true,
                },
                " $refType": "Form_query",
                "products": Object {
                  "edges": Array [],
                },
              },
            }
          }
          formData={
            Array [
              Object {
                "requiresEmissionAllocation": false,
              },
            ]
          }
          liveValidate={false}
          noHtml5Validate={true}
          noValidate={false}
          omitExtraData={false}
          onError={[Function]}
          onSubmit={[MockFunction]}
          readonly={false}
          schema={Object {}}
          showErrorList={false}
          transformErrors={[Function]}
          uiSchema={Object {}}
          validate={[Function]}
          widgets={
            Object {
              "SearchWidget": [Function],
            }
          }
        >
          <Button
            active={false}
            disabled={false}
            size="lg"
            type="submit"
            variant="primary"
          >
            Save & Continue
          </Button>
          <Link
            href={
              Object {
                "pathname": "/reporter",
              }
            }
            passHref={true}
          >
            <Button
              active={false}
              className="exit-button"
              disabled={false}
              size="lg"
              style={
                Object {
                  "background": "white",
                }
              }
              variant="outline-secondary"
            >
              Save & Exit
            </Button>
          </Link>
        </Form>
      </Col>
    </Row>
  </div>
  <JSXStyle
    id="3923245764"
  >
    .
    r
    j
    s
    f
     
    .
    f
    o
    r
    m
    -
    r
    o
    w
    {
    m
    a
    r
    g
    i
    n
    :
    2
    0
    p
    x
     
    0
     
    2
    0
    p
    x
    ;
    }
    .
    e
    m
    i
    s
    s
    i
    o
    n
    -
    f
    o
    r
    m
     
    .
    r
    j
    s
    f
     
    .
    f
    o
    r
    m
    -
    r
    o
    w
    {
    m
    a
    r
    g
    i
    n
    :
    0
    ;
    }
    .
    n
    o
    -
    c
    o
    l
    -
    p
    a
    d
    d
    i
    n
    g
     
    .
    f
    o
    r
    m
    -
    r
    o
    w
    &gt;
    .
    c
    o
    l
    ,
    .
    n
    o
    -
    c
    o
    l
    -
    p
    a
    d
    d
    i
    n
    g
     
    .
    f
    o
    r
    m
    -
    r
    o
    w
    &gt;
    [
    c
    l
    a
    s
    s
    *
    =
    "
    c
    o
    l
    -
    "
    ]
    {
    p
    a
    d
    d
    i
    n
    g
    :
    0
    ;
    }
    .
    e
    r
    r
    o
    r
    s
    {
    m
    a
    r
    g
    i
    n
    :
    1
    e
    m
     
    0
     
    0
     
    0
    ;
    p
    a
    d
    d
    i
    n
    g
    :
    2
    0
    p
    x
    ;
    b
    a
    c
    k
    g
    r
    o
    u
    n
    d
    :
    #
    c
    e
    5
    c
    5
    c
    ;
    c
    o
    l
    o
    r
    :
    w
    h
    i
    t
    e
    ;
    f
    o
    n
    t
    -
    s
    i
    z
    e
    :
    2
    0
    p
    x
    ;
    }
    u
    l
    .
    e
    r
    r
    o
    r
    -
    d
    e
    t
    a
    i
    l
    {
    p
    a
    d
    d
    i
    n
    g
    :
    0
    ;
    l
    i
    s
    t
    -
    s
    t
    y
    l
    e
    :
    n
    o
    n
    e
    ;
    }
    u
    l
    .
    e
    r
    r
    o
    r
    -
    d
    e
    t
    a
    i
    l
     
    l
    i
    .
    t
    e
    x
    t
    -
    d
    a
    n
    g
    e
    r
    {
    b
    a
    c
    k
    g
    r
    o
    u
    n
    d
    :
    #
    c
    e
    5
    c
    5
    c
    ;
    c
    o
    l
    o
    r
    :
    w
    h
    i
    t
    e
     
    !
    i
    m
    p
    o
    r
    t
    a
    n
    t
    ;
    p
    a
    d
    d
    i
    n
    g
    :
    5
    p
    x
    ;
    }
    .
    e
    x
    i
    t
    -
    b
    u
    t
    t
    o
    n
    {
    c
    o
    l
    o
    r
    :
    #
    0
    0
    3
    3
    6
    6
    ;
    m
    a
    r
    g
    i
    n
    -
    l
    e
    f
    t
    :
    5
    p
    x
    ;
    b
    o
    r
    d
    e
    r
    -
    c
    o
    l
    o
    r
    :
    #
    0
    0
    3
    3
    6
    6
    ;
    }
    .
    e
    x
    i
    t
    -
    b
    u
    t
    t
    o
    n
    :
    h
    o
    v
    e
    r
    {
    c
    o
    l
    o
    r
    :
    w
    h
    i
    t
    e
     
    !
    i
    m
    p
    o
    r
    t
    a
    n
    t
    ;
    b
    a
    c
    k
    g
    r
    o
    u
    n
    d
    :
    #
    0
    0
    7
    b
    f
    f
     
    !
    i
    m
    p
    o
    r
    t
    a
    n
    t
    ;
    }
  </JSXStyle>
  <JSXStyle
    id="1645944843"
  >
    .card.jsx-1645944843{border-color:#a4a4a4;background-color:#f4f4f4;}.card-header.jsx-1645944843{background-color:#036;color:#fff;}.card-header.jsx-1645944843 h1.jsx-1645944843{margin-bottom:0;font-size:30px;display:inline-block;}.add-button-container.jsx-1645944843{height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:space-around;-webkit-justify-content:space-around;-ms-flex-pack:space-around;justify-content:space-around;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}
  </JSXStyle>
</div>
`;

exports[`The Form Component should render alert reminder to check the guidance if any product requires emission allocation 1`] = `
<div
  className="jsx-1645944843 "
>
  <Alert
    closeLabel="Close alert"
    show={true}
    transition={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "appear": false,
          "in": false,
          "mountOnEnter": false,
          "timeout": 300,
          "unmountOnExit": false,
        },
        "render": [Function],
      }
    }
    variant="info"
  >
    Note: Your form input will be saved automatically as you type.
  </Alert>
  <Relay(VerificationStatementComponent)
    onError={[Function]}
  />
  <div
    className="jsx-1645944843 card"
  >
    <div
      className="jsx-1645944843 card-header"
    >
      <Row
        noGutters={false}
      >
        <Col
          md={8}
        >
          <h1
            className="jsx-1645944843"
          >
            Foo
          </h1>
        </Col>
        <Col
          md={4}
        >
          <SavingIndicator
            isSaved={true}
            style={
              Object {
                "lineHeight": "2.25em",
              }
            }
          />
        </Col>
      </Row>
    </div>
    <Row
      noGutters={false}
      style={
        Object {
          "padding": "0 2em 2em 2em",
        }
      }
    >
      <Col
        md={12}
      >
        <MissingProductsComponent
          formResult={
            Array [
              Object {
                "requiresEmissionAllocation": true,
              },
            ]
          }
          query={
            Object {
              " $fragmentRefs": Object {
                "EmissionCategoryRowIdField_query": true,
                "FuelField_query": true,
                "FuelRowIdField_query": true,
                "NaicsField_query": true,
                "ProductField_query": true,
                "ProductRowIdField_query": true,
              },
              " $refType": "Form_query",
              "products": Object {
                "edges": Array [],
              },
            }
          }
        />
        <Form
          ArrayFieldTemplate={[Function]}
          ErrorList={[Function]}
          FieldTemplate={[Function]}
          ObjectFieldTemplate={[Function]}
          disabled={false}
          fields={
            Object {
              "AddCommentField": [Function],
              "NumberField": [Function],
              "ProductsArrayField": [Function],
              "emission": [Function],
              "emissionCategoryRowId": [Function],
              "emissionGas": [Function],
              "emissionSource": [Function],
              "fuel": [Function],
              "fuelRowId": [Function],
              "naics": [Function],
              "product": [Function],
              "productRowId": [Function],
            }
          }
          formContext={
            Object {
              "ciipFormResult": Object {
                " $refType": "Form_ciipFormResult",
                "formJsonByFormId": Object {
                  "ciipApplicationWizardByFormId": Object {
                    "formPosition": 3,
                  },
                  "formJson": Object {
                    "schema": Object {},
                  },
                  "name": "Foo",
                },
                "formResult": Array [
                  Object {
                    "requiresEmissionAllocation": true,
                  },
                ],
              },
              "query": Object {
                " $fragmentRefs": Object {
                  "EmissionCategoryRowIdField_query": true,
                  "FuelField_query": true,
                  "FuelRowIdField_query": true,
                  "NaicsField_query": true,
                  "ProductField_query": true,
                  "ProductRowIdField_query": true,
                },
                " $refType": "Form_query",
                "products": Object {
                  "edges": Array [],
                },
              },
            }
          }
          formData={
            Array [
              Object {
                "requiresEmissionAllocation": true,
              },
            ]
          }
          liveValidate={false}
          noHtml5Validate={true}
          noValidate={false}
          omitExtraData={false}
          onError={[Function]}
          onSubmit={[MockFunction]}
          readonly={false}
          schema={Object {}}
          showErrorList={false}
          transformErrors={[Function]}
          uiSchema={Object {}}
          validate={[Function]}
          widgets={
            Object {
              "SearchWidget": [Function],
            }
          }
        >
          <Alert
            closeLabel="Close alert"
            show={true}
            transition={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "appear": false,
                  "in": false,
                  "mountOnEnter": false,
                  "timeout": 300,
                  "unmountOnExit": false,
                },
                "render": [Function],
              }
            }
            variant="info"
          >
            <AlertHeading>
              Before you proceed:
            </AlertHeading>
            Please refer to the guidance documents to calculate the emission allocations for each product or service, and ensure that you report all the necessary product or services
          </Alert>
          <Button
            active={false}
            disabled={false}
            size="lg"
            type="submit"
            variant="primary"
          >
            Save & Continue
          </Button>
          <Link
            href={
              Object {
                "pathname": "/reporter",
              }
            }
            passHref={true}
          >
            <Button
              active={false}
              className="exit-button"
              disabled={false}
              size="lg"
              style={
                Object {
                  "background": "white",
                }
              }
              variant="outline-secondary"
            >
              Save & Exit
            </Button>
          </Link>
        </Form>
      </Col>
    </Row>
  </div>
  <JSXStyle
    id="3923245764"
  >
    .
    r
    j
    s
    f
     
    .
    f
    o
    r
    m
    -
    r
    o
    w
    {
    m
    a
    r
    g
    i
    n
    :
    2
    0
    p
    x
     
    0
     
    2
    0
    p
    x
    ;
    }
    .
    e
    m
    i
    s
    s
    i
    o
    n
    -
    f
    o
    r
    m
     
    .
    r
    j
    s
    f
     
    .
    f
    o
    r
    m
    -
    r
    o
    w
    {
    m
    a
    r
    g
    i
    n
    :
    0
    ;
    }
    .
    n
    o
    -
    c
    o
    l
    -
    p
    a
    d
    d
    i
    n
    g
     
    .
    f
    o
    r
    m
    -
    r
    o
    w
    &gt;
    .
    c
    o
    l
    ,
    .
    n
    o
    -
    c
    o
    l
    -
    p
    a
    d
    d
    i
    n
    g
     
    .
    f
    o
    r
    m
    -
    r
    o
    w
    &gt;
    [
    c
    l
    a
    s
    s
    *
    =
    "
    c
    o
    l
    -
    "
    ]
    {
    p
    a
    d
    d
    i
    n
    g
    :
    0
    ;
    }
    .
    e
    r
    r
    o
    r
    s
    {
    m
    a
    r
    g
    i
    n
    :
    1
    e
    m
     
    0
     
    0
     
    0
    ;
    p
    a
    d
    d
    i
    n
    g
    :
    2
    0
    p
    x
    ;
    b
    a
    c
    k
    g
    r
    o
    u
    n
    d
    :
    #
    c
    e
    5
    c
    5
    c
    ;
    c
    o
    l
    o
    r
    :
    w
    h
    i
    t
    e
    ;
    f
    o
    n
    t
    -
    s
    i
    z
    e
    :
    2
    0
    p
    x
    ;
    }
    u
    l
    .
    e
    r
    r
    o
    r
    -
    d
    e
    t
    a
    i
    l
    {
    p
    a
    d
    d
    i
    n
    g
    :
    0
    ;
    l
    i
    s
    t
    -
    s
    t
    y
    l
    e
    :
    n
    o
    n
    e
    ;
    }
    u
    l
    .
    e
    r
    r
    o
    r
    -
    d
    e
    t
    a
    i
    l
     
    l
    i
    .
    t
    e
    x
    t
    -
    d
    a
    n
    g
    e
    r
    {
    b
    a
    c
    k
    g
    r
    o
    u
    n
    d
    :
    #
    c
    e
    5
    c
    5
    c
    ;
    c
    o
    l
    o
    r
    :
    w
    h
    i
    t
    e
     
    !
    i
    m
    p
    o
    r
    t
    a
    n
    t
    ;
    p
    a
    d
    d
    i
    n
    g
    :
    5
    p
    x
    ;
    }
    .
    e
    x
    i
    t
    -
    b
    u
    t
    t
    o
    n
    {
    c
    o
    l
    o
    r
    :
    #
    0
    0
    3
    3
    6
    6
    ;
    m
    a
    r
    g
    i
    n
    -
    l
    e
    f
    t
    :
    5
    p
    x
    ;
    b
    o
    r
    d
    e
    r
    -
    c
    o
    l
    o
    r
    :
    #
    0
    0
    3
    3
    6
    6
    ;
    }
    .
    e
    x
    i
    t
    -
    b
    u
    t
    t
    o
    n
    :
    h
    o
    v
    e
    r
    {
    c
    o
    l
    o
    r
    :
    w
    h
    i
    t
    e
     
    !
    i
    m
    p
    o
    r
    t
    a
    n
    t
    ;
    b
    a
    c
    k
    g
    r
    o
    u
    n
    d
    :
    #
    0
    0
    7
    b
    f
    f
     
    !
    i
    m
    p
    o
    r
    t
    a
    n
    t
    ;
    }
  </JSXStyle>
  <JSXStyle
    id="1645944843"
  >
    .card.jsx-1645944843{border-color:#a4a4a4;background-color:#f4f4f4;}.card-header.jsx-1645944843{background-color:#036;color:#fff;}.card-header.jsx-1645944843 h1.jsx-1645944843{margin-bottom:0;font-size:30px;display:inline-block;}.add-button-container.jsx-1645944843{height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:space-around;-webkit-justify-content:space-around;-ms-flex-pack:space-around;justify-content:space-around;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}
  </JSXStyle>
</div>
`;
