// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FacilitiesListContainer should match the previous snapshot 1`] = `
<Fragment>
  <SearchTableLayoutComponent
    body={
      <tbody>
        <ForwardRef(Relay(FacilitiesRowItemComponent))
          facilitySearchResult={
            Object {
              " $fragmentRefs ": Object {
                "FacilitiesRowItemContainer_facilitySearchResult": true,
              },
              "rowId": 1,
              "totalFacilityCount": 1,
            }
          }
          query={
            Object {
              " $fragmentRefs": Object {
                "FacilitiesRowItemContainer_query": true,
              },
              " $refType": "FacilitiesListContainer_query",
              "allFacilities": Object {
                "totalCount": 20,
              },
              "organisation": Object {
                "id": "abc",
                "rowId": 1,
              },
              "searchAllFacilities": Object {
                "edges": Array [
                  Object {
                    "node": Object {
                      " $fragmentRefs ": Object {
                        "FacilitiesRowItemContainer_facilitySearchResult": true,
                      },
                      "rowId": 1,
                      "totalFacilityCount": 1,
                    },
                  },
                ],
              },
            }
          }
        />
      </tbody>
    }
    displayNameToColumnNameMap={
      Object {
        "Address": "facility_mailing_address",
        "City": "facility_city",
        "Facility Name": "facility_name",
        "Organisation Name": "organisation_name",
        "Postal Code": "facility_postal_code",
        "Status": "application_revision_status",
      }
    }
    handleEvent={[MockFunction]}
  />
</Fragment>
`;

exports[`FacilitiesListContainer should not render the Pagination component if < 10 facilities (totalFacilityCount < 10) 1`] = `
<Fragment>
  <SearchTableLayoutComponent
    body={
      <tbody>
        <ForwardRef(Relay(FacilitiesRowItemComponent))
          facilitySearchResult={
            Object {
              " $fragmentRefs ": Object {
                "FacilitiesRowItemContainer_facilitySearchResult": true,
              },
              "rowId": 1,
              "totalFacilityCount": 5,
            }
          }
          query={
            Object {
              " $fragmentRefs": Object {
                "FacilitiesRowItemContainer_query": true,
              },
              " $refType": "FacilitiesListContainer_query",
              "allFacilities": Object {
                "totalCount": 20,
              },
              "organisation": Object {
                "id": "abc",
                "rowId": 1,
              },
              "searchAllFacilities": Object {
                "edges": Array [
                  Object {
                    "node": Object {
                      " $fragmentRefs ": Object {
                        "FacilitiesRowItemContainer_facilitySearchResult": true,
                      },
                      "rowId": 1,
                      "totalFacilityCount": 5,
                    },
                  },
                ],
              },
            }
          }
        />
      </tbody>
    }
    displayNameToColumnNameMap={
      Object {
        "Address": "facility_mailing_address",
        "City": "facility_city",
        "Facility Name": "facility_name",
        "Organisation Name": "organisation_name",
        "Postal Code": "facility_postal_code",
        "Status": "application_revision_status",
      }
    }
    handleEvent={[MockFunction]}
  />
</Fragment>
`;

exports[`FacilitiesListContainer should render the Pagination component if > 10 facilities (totalFacilityCount > 10) 1`] = `
<Fragment>
  <SearchTableLayoutComponent
    body={
      <tbody>
        <ForwardRef(Relay(FacilitiesRowItemComponent))
          facilitySearchResult={
            Object {
              " $fragmentRefs ": Object {
                "FacilitiesRowItemContainer_facilitySearchResult": true,
              },
              "rowId": 1,
              "totalFacilityCount": 25,
            }
          }
          query={
            Object {
              " $fragmentRefs": Object {
                "FacilitiesRowItemContainer_query": true,
              },
              " $refType": "FacilitiesListContainer_query",
              "allFacilities": Object {
                "totalCount": 20,
              },
              "organisation": Object {
                "id": "abc",
                "rowId": 1,
              },
              "searchAllFacilities": Object {
                "edges": Array [
                  Object {
                    "node": Object {
                      " $fragmentRefs ": Object {
                        "FacilitiesRowItemContainer_facilitySearchResult": true,
                      },
                      "rowId": 1,
                      "totalFacilityCount": 25,
                    },
                  },
                ],
              },
            }
          }
        />
      </tbody>
    }
    displayNameToColumnNameMap={
      Object {
        "Address": "facility_mailing_address",
        "City": "facility_city",
        "Facility Name": "facility_name",
        "Organisation Name": "organisation_name",
        "Postal Code": "facility_postal_code",
        "Status": "application_revision_status",
      }
    }
    handleEvent={[MockFunction]}
  />
  <ForwardRef>
    <First
      onClick={[Function]}
    />
    <Prev
      onClick={[Function]}
    />
    <ForwardRef>
      <PageItem
        active={true}
        activeLabel="(current)"
        disabled={false}
        key="1"
        onClick={[Function]}
      >
        1
      </PageItem>
      <PageItem
        active={false}
        activeLabel="(current)"
        disabled={false}
        key="2"
        onClick={[Function]}
      >
        2
      </PageItem>
      <PageItem
        active={false}
        activeLabel="(current)"
        disabled={false}
        key="3"
        onClick={[Function]}
      >
        3
      </PageItem>
    </ForwardRef>
    <Next
      onClick={[Function]}
    />
    <Last
      onClick={[Function]}
    />
  </ForwardRef>
</Fragment>
`;
