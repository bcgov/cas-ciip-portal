// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Confirmation Component match the snapshot 1`] = `
<Fragment>
  <h1
    className="jsx-1753635690"
  >
    Summary of your application:
  </h1>
  <h5
    className="jsx-1753635690"
  >
    Please review the information you have provided before continuing.
  </h5>
  <br
    className="jsx-1753635690"
  />
  <Relay(ApplicationDetailsComponent)
    application={
      Object {
        " $fragmentRefs": Object {
          "ApplicationDetailsContainer_application": true,
          "SubmitApplication_application": true,
        },
        " $refType": "ApplicationWizardConfirmation_application",
        "id": "abc",
        "latestDraftRevision": Object {
          "certificationSignatureIsValid": false,
          "certificationUrl": undefined,
          "versionNumber": 1,
        },
        "rowId": 1,
      }
    }
    liveValidate={true}
    query={
      Object {
        " $fragmentRefs": Object {
          "ApplicationDetailsContainer_query": true,
        },
        " $refType": "ApplicationWizardConfirmation_query",
      }
    }
    review={false}
    setHasErrors={[Function]}
  />
  <br
    className="jsx-1753635690"
  />
  <h5>
    Thank you for reviewing the application information. You may now send a generated Certification url to be signed prior to submission.
  </h5>
  <br />
  <Form
    inline={false}
    onSubmit={[Function]}
  >
    <FormRow>
      <Col
        md={6}
      >
        <FormGroup
          controlId="certifierEmail"
        >
          <FormControl
            name="email"
            placeholder="Enter email"
            type="email"
          />
          <FormText
            className="text-muted"
          >
            Send URL to certifier
          </FormText>
        </FormGroup>
      </Col>
      <Col
        md={2}
      >
        <Button
          active={false}
          disabled={false}
          type="submit"
          variant="primary"
        >
          Send to Certifier
        </Button>
      </Col>
    </FormRow>
  </Form>
  <JSXStyle
    id="1753635690"
  >
    .errors{margin-left:20px;padding:20px;background:#ce5c5c;color:white;font-size:20px;}
  </JSXStyle>
</Fragment>
`;

exports[`The Confirmation Component should show a certifier has not yet signed message when hashMatches is true but certificationSignature is null 1`] = `
<Fragment>
  <h1
    className="jsx-1753635690"
  >
    Summary of your application:
  </h1>
  <h5
    className="jsx-1753635690"
  >
    Please review the information you have provided before continuing.
  </h5>
  <br
    className="jsx-1753635690"
  />
  <Relay(ApplicationDetailsComponent)
    application={
      Object {
        " $fragmentRefs": Object {
          "ApplicationDetailsContainer_application": true,
          "SubmitApplication_application": true,
        },
        " $refType": "ApplicationWizardConfirmation_application",
        "id": "abc",
        "latestDraftRevision": Object {
          "certificationSignatureIsValid": false,
          "certificationUrl": Object {
            "certificationSignature": undefined,
            "hashMatches": true,
          },
          "versionNumber": 1,
        },
        "rowId": 1,
      }
    }
    liveValidate={true}
    query={
      Object {
        " $fragmentRefs": Object {
          "ApplicationDetailsContainer_query": true,
        },
        " $refType": "ApplicationWizardConfirmation_query",
      }
    }
    review={false}
    setHasErrors={[Function]}
  />
  <br
    className="jsx-1753635690"
  />
  <h5>
    Your application has been sent to a certifier. Submission will be possible once they have verified the data in the application.
  </h5>
  <Row
    noGutters={false}
  >
    <Col
      md={6}
    >
      <input
        readOnly={true}
        style={
          Object {
            "width": "100%",
          }
        }
      />
    </Col>
    <Col
      md={2}
    >
      <Button
        active={false}
        disabled={false}
        onClick={[Function]}
        type="button"
        variant="primary"
      >
        Copy Link
      </Button>
      <span
        style={
          Object {
            "color": "green",
          }
        }
      />
    </Col>
  </Row>
  <JSXStyle
    id="1753635690"
  >
    .errors{margin-left:20px;padding:20px;background:#ce5c5c;color:white;font-size:20px;}
  </JSXStyle>
</Fragment>
`;
