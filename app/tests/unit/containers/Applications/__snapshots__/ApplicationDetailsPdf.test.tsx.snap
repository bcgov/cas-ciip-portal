// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ApplicationDetailsPdf should render application pdf donwload link 1`] = `
<PDFDownloadLink
  className="btn btn-primary"
  document={
    <DOCUMENT>
      <PAGE
        size="LETTER"
        style={
          Object {
            "paddingBottom": 40,
            "paddingTop": 20,
          }
        }
        wrap={true}
      >
        <styled.VIEW>
          <IMAGE
            src="/static/bcid.png"
            style={
              Object {
                "margin": "auto",
                "width": 150,
              }
            }
          />
          <TEXT>
            Application for CleanBC Industrial Incentive Program
          </TEXT>
        </styled.VIEW>
        <styled.VIEW>
          <styled.VIEW>
            <styled.VIEW>
              <TEXT
                style={
                  Object {
                    "fontSize": 12,
                    "margin": "10px 0 20px",
                  }
                }
              >
                Reporting Year: 
                2019
              </TEXT>
            </styled.VIEW>
            <styled.VIEW>
              <TEXT
                style={
                  Object {
                    "fontSize": 12,
                    "margin": "10px 0 20px",
                  }
                }
              >
                Status:
                 
                SUBMITTED
              </TEXT>
            </styled.VIEW>
          </styled.VIEW>
          <styled.VIEW>
            <styled.VIEW>
              <VIEW
                style={
                  Object {
                    "fontSize": 12,
                    "lineHeight": 1.3,
                  }
                }
              >
                <TEXT
                  style={
                    Object {
                      "borderBottom": 1,
                      "lineHeight": 1.5,
                      "marginBottom": 10,
                    }
                  }
                >
                  Operator
                </TEXT>
                <TEXT>
                  in qui
                </TEXT>
                <TEXT>
                   
                  est dolor
                </TEXT>
                <TEXT>
                   
                  consequat Ut Duis
                  ,
                   
                  Manitoba
                </TEXT>
                <TEXT>
                   
                  u5f3u5
                </TEXT>
              </VIEW>
            </styled.VIEW>
            <styled.VIEW>
              <VIEW
                style={
                  Object {
                    "fontSize": 12,
                    "lineHeight": 1.3,
                  }
                }
              >
                <TEXT
                  style={
                    Object {
                      "borderBottom": 1,
                      "lineHeight": 1.5,
                      "marginBottom": 10,
                    }
                  }
                >
                  Facility
                </TEXT>
                <TEXT>
                  Forest Floor
                </TEXT>
                <TEXT>
                  Evergreen Street Northwest
                  

                  Oak Grove
                  , 
                  British Columbia
                  ,
                   
                  Canada
                  

                  V1C6T8
                </TEXT>
              </VIEW>
            </styled.VIEW>
          </styled.VIEW>
          <VIEW
            style={
              Object {
                "fontSize": 12,
              }
            }
          >
            <TEXT
              style={
                Object {
                  "borderBottom": 1,
                  "fontSize": 16,
                  "paddingBottom": 10,
                }
              }
            >
              

              Admin
            </TEXT>
            <Form
              ArrayFieldTemplate={[Function]}
              ErrorList={[Function]}
              FieldTemplate={[Function]}
              ObjectFieldTemplate={[Function]}
              disabled={false}
              fields={
                Object {
                  "StringField": [Function],
                  "emissionGas": [Function],
                  "emissionSource": [Function],
                  "product": [Function],
                }
              }
              formContext={
                Object {
                  "query": Object {
                    " $refType": "ApplicationDetailsPdf_query",
                    "allProducts": Object {
                      "edges": Array [
                        Object {
                          "node": Object {
                            "name": "foo",
                            "rowId": 1,
                          },
                        },
                        Object {
                          "node": Object {
                            "name": "simpleFoo",
                            "rowId": 2,
                          },
                        },
                      ],
                    },
                  },
                }
              }
              formData={
                Object {
                  "facility": Object {
                    "bcghgid": "51234",
                    "facilityName": "in qui",
                    "facilityType": "IF_b",
                    "isFacilityLocationDifferent": false,
                    "mailingAddress": Object {
                      "city": "mollit eu esse",
                      "postalCode": "k3u 2p4",
                      "province": "British Columbia",
                      "streetAddress": "culpa",
                    },
                    "naics": "4512",
                  },
                  "operationalRepresentative": Object {
                    "email": "mzFgms@AfkpuAfkpuAfkp.ncf",
                    "fax": "est dolor",
                    "firstName": "culpa",
                    "lastName": "in qui",
                    "mailingAddress": Object {
                      "city": "culpa",
                      "postalCode": "A1k4A1",
                      "province": "New Brunswick",
                      "streetAddress": "mollit eu esse",
                    },
                    "phone": "consequat Ut Duis",
                    "position": "mollit eu esse",
                  },
                  "operator": Object {
                    "bcCorporateRegistryNumber": "in qui",
                    "duns": "123451234",
                    "mailingAddress": Object {
                      "city": "consequat Ut Duis",
                      "postalCode": "u5f3u5",
                      "province": "Manitoba",
                      "streetAddress": "est dolor",
                    },
                    "naics": "4512",
                    "name": "in qui",
                    "tradeName": "consequat Ut Duis",
                  },
                }
              }
              liveValidate={false}
              noHtml5Validate={false}
              noValidate={false}
              omitExtraData={true}
              safeRenderCompletion={false}
              schema={
                Object {
                  "definitions": Object {
                    "address": Object {
                      "properties": Object {
                        "city": Object {
                          "title": "City",
                          "type": "string",
                        },
                        "postalCode": Object {
                          "format": "postal-code",
                          "title": "Postal Code",
                          "type": "string",
                        },
                        "province": Object {
                          "enum": Array [
                            "Alberta",
                            "British Columbia",
                            "Manitoba",
                            "New Brunswick",
                            "Newfoundland and Labrador",
                            "Northwest Territories",
                            "Nova Scotia",
                            "Nunavut",
                            "Ontario",
                            "Prince Edward Island",
                            "Quebec",
                            "Saskatchewan",
                            "Yukon",
                          ],
                          "title": "Province or Territory",
                          "type": "string",
                        },
                        "streetAddress": Object {
                          "title": "Street address",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "streetAddress",
                        "postalCode",
                        "province",
                        "city",
                      ],
                      "type": "object",
                    },
                  },
                  "properties": Object {
                    "facility": Object {
                      "dependencies": Object {
                        "isFacilityLocationDifferent": Object {
                          "oneOf": Array [
                            Object {
                              "properties": Object {
                                "isFacilityLocationDifferent": Object {
                                  "const": false,
                                },
                              },
                            },
                            Object {
                              "properties": Object {
                                "facilityLocation": Object {
                                  "properties": Object {
                                    "latitude": Object {
                                      "title": "Latitude",
                                      "type": "number",
                                    },
                                    "locationNearestCity": Object {
                                      "title": "Nearest City",
                                      "type": "string",
                                    },
                                    "locationStreetAddress": Object {
                                      "title": "Location of the facility",
                                      "type": "string",
                                    },
                                    "longitude": Object {
                                      "title": "Longitude",
                                      "type": "number",
                                    },
                                  },
                                  "title": "Facility Location",
                                  "type": "object",
                                },
                                "isFacilityLocationDifferent": Object {
                                  "const": true,
                                },
                              },
                            },
                          ],
                        },
                      },
                      "properties": Object {
                        "bcghgid": Object {
                          "format": "bcghgid",
                          "title": "BCGHG ID Number",
                          "type": "string",
                        },
                        "facilityName": Object {
                          "title": "Facility Name",
                          "type": "string",
                        },
                        "facilityType": Object {
                          "enum": Array [
                            "IF_a",
                            "IF_b",
                            "L_c",
                            "SFO",
                            "LFO",
                            "EIO",
                          ],
                          "title": "Facility Type",
                          "type": "string",
                        },
                        "isFacilityLocationDifferent": Object {
                          "enumNames": Array [
                            " Yes",
                            " No",
                          ],
                          "title": "Is the facility location different from the mailing address?",
                          "type": "boolean",
                        },
                        "mailingAddress": Object {
                          "$ref": "#/definitions/address",
                          "title": "Facility Mailing Address",
                        },
                        "naics": Object {
                          "format": "naics",
                          "title": "NAICS code",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "naics",
                        "bcghgid",
                        "facilityName",
                        "facilityType",
                        "isFacilityLocationDifferent",
                      ],
                      "title": "Facility Information",
                      "type": "object",
                    },
                    "operationalRepresentative": Object {
                      "properties": Object {
                        "email": Object {
                          "format": "email",
                          "title": "Email Address",
                          "type": "string",
                        },
                        "fax": Object {
                          "title": "Fax Number",
                          "type": "string",
                        },
                        "firstName": Object {
                          "title": "First Name",
                          "type": "string",
                        },
                        "lastName": Object {
                          "title": "Last Name",
                          "type": "string",
                        },
                        "mailingAddress": Object {
                          "$ref": "#/definitions/address",
                          "title": "Operational Representative Mailing Address",
                        },
                        "phone": Object {
                          "title": "Telephone Number",
                          "type": "string",
                        },
                        "position": Object {
                          "title": "Position/Title",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "email",
                        "phone",
                        "lastName",
                        "position",
                        "firstName",
                      ],
                      "title": "Operational Representative",
                      "type": "object",
                    },
                    "operator": Object {
                      "properties": Object {
                        "bcCorporateRegistryNumber": Object {
                          "title": "BC Corporate Registry number",
                          "type": "string",
                        },
                        "duns": Object {
                          "format": "duns",
                          "title": "DUNS number",
                          "type": "string",
                        },
                        "mailingAddress": Object {
                          "$ref": "#/definitions/address",
                          "title": "Operator Mailing Address",
                        },
                        "naics": Object {
                          "format": "naics",
                          "title": "NAICS code",
                          "type": "string",
                        },
                        "name": Object {
                          "title": "Legal name",
                          "type": "string",
                        },
                        "tradeName": Object {
                          "title": "Trade name",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "duns",
                        "name",
                        "naics",
                        "tradeName",
                        "bcCorporateRegistryNumber",
                      ],
                      "title": "Operator Information",
                      "type": "object",
                    },
                  },
                  "type": "object",
                }
              }
              showErrorList={false}
              tagName="VIEW"
              uiSchema={
                Object {
                  "facility": Object {
                    "facilityLocation": Object {
                      "ui:order": Array [
                        "locationStreetAddress",
                        "locationNearestCity",
                        "latitude",
                        "longitude",
                      ],
                    },
                    "isFacilityLocationDifferent": Object {
                      "ui:widget": "radio",
                    },
                    "mailingAddress": Object {
                      "postalCode": Object {
                        "ui:placeholder": "ex: A1A 1A1",
                      },
                      "ui:order": Array [
                        "streetAddress",
                        "city",
                        "postalCode",
                        "province",
                      ],
                    },
                    "ui:order": Array [
                      "facilityName",
                      "facilityType",
                      "bcghgid",
                      "naics",
                      "mailingAddress",
                      "isFacilityLocationDifferent",
                      "facilityLocation",
                    ],
                  },
                  "operationalRepresentative": Object {
                    "fax": Object {
                      "ui:options": Object {
                        "inputType": "tel",
                      },
                    },
                    "mailingAddress": Object {
                      "postalCode": Object {
                        "ui:placeholder": "ex: A1A 1A1",
                      },
                      "ui:order": Array [
                        "streetAddress",
                        "city",
                        "postalCode",
                        "province",
                      ],
                    },
                    "phone": Object {
                      "ui:options": Object {
                        "inputType": "tel",
                      },
                    },
                    "ui:order": Array [
                      "firstName",
                      "lastName",
                      "position",
                      "email",
                      "phone",
                      "fax",
                      "mailingAddress",
                    ],
                  },
                  "operator": Object {
                    "bcCorporateRegistryNumber": Object {
                      "ui:col-md": 4,
                    },
                    "duns": Object {
                      "ui:col-md": 4,
                    },
                    "mailingAddress": Object {
                      "postalCode": Object {
                        "ui:placeholder": "ex: A1A 1A1",
                      },
                      "ui:order": Array [
                        "streetAddress",
                        "city",
                        "postalCode",
                        "province",
                      ],
                    },
                    "naics": Object {
                      "ui:col-md": 4,
                    },
                    "ui:order": Array [
                      "name",
                      "tradeName",
                      "naics",
                      "bcCorporateRegistryNumber",
                      "duns",
                      "mailingAddress",
                    ],
                  },
                  "ui:order": Array [
                    "operator",
                    "operationalRepresentative",
                    "facility",
                  ],
                }
              }
              widgets={
                Object {
                  "RadioWidget": [Function],
                }
              }
            >
              <VIEW />
            </Form>
          </VIEW>
          <VIEW
            style={
              Object {
                "fontSize": 12,
              }
            }
          >
            <TEXT
              style={
                Object {
                  "borderBottom": 1,
                  "fontSize": 16,
                  "paddingBottom": 10,
                }
              }
            >
              

              Emission
            </TEXT>
            <Form
              ArrayFieldTemplate={[Function]}
              ErrorList={[Function]}
              FieldTemplate={[Function]}
              ObjectFieldTemplate={[Function]}
              disabled={false}
              fields={
                Object {
                  "StringField": [Function],
                  "emissionGas": [Function],
                  "emissionSource": [Function],
                  "product": [Function],
                }
              }
              formContext={
                Object {
                  "query": Object {
                    " $refType": "ApplicationDetailsPdf_query",
                    "allProducts": Object {
                      "edges": Array [
                        Object {
                          "node": Object {
                            "name": "foo",
                            "rowId": 1,
                          },
                        },
                        Object {
                          "node": Object {
                            "name": "simpleFoo",
                            "rowId": 2,
                          },
                        },
                      ],
                    },
                  },
                }
              }
              formData={
                Object {
                  "sourceTypes": Array [
                    Object {
                      "gases": Array [
                        Object {
                          "annualCO2e": 0,
                          "annualEmission": -80000000,
                          "gasDescription": "est dolor",
                          "gasType": "consequat Ut Duis",
                          "gwp": -40000000,
                        },
                        Object {
                          "annualCO2e": -20000000,
                          "annualEmission": 0,
                          "gasDescription": "in qui",
                          "gasType": "mollit eu esse",
                          "gwp": -60000000,
                        },
                      ],
                      "sourceTypeName": "in qui",
                    },
                    Object {
                      "gases": Array [
                        Object {
                          "annualCO2e": -40000000,
                          "annualEmission": -20000000,
                          "gasDescription": "culpa",
                          "gasType": "est dolor",
                          "gwp": -80000000,
                        },
                      ],
                      "sourceTypeName": "consequat Ut Duis",
                    },
                  ],
                }
              }
              liveValidate={false}
              noHtml5Validate={false}
              noValidate={false}
              omitExtraData={true}
              safeRenderCompletion={false}
              schema={
                Object {
                  "definitions": Object {
                    "gas": Object {
                      "properties": Object {
                        "annualCO2e": Object {
                          "defaultValue": 0,
                          "title": "Tonnes (CO2 equivalent)",
                          "type": "number",
                        },
                        "annualEmission": Object {
                          "defaultValue": 0,
                          "title": "Tonnes (CO2)",
                          "type": "number",
                        },
                        "gasDescription": Object {
                          "type": "string",
                        },
                        "gasType": Object {
                          "title": "Gas Type",
                          "type": "string",
                        },
                        "gwp": Object {
                          "title": "GWP",
                          "type": "number",
                        },
                      },
                      "type": "object",
                    },
                    "sourceType": Object {
                      "properties": Object {
                        "gases": Object {
                          "items": Object {
                            "$ref": "#/definitions/gas",
                          },
                          "minItems": 1,
                          "title": "gases",
                          "type": "array",
                        },
                        "sourceTypeName": Object {
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "properties": Object {
                    "sourceTypes": Object {
                      "items": Object {
                        "$ref": "#/definitions/sourceType",
                      },
                      "minItems": 1,
                      "title": "Source Types",
                      "type": "array",
                    },
                  },
                  "type": "object",
                }
              }
              showErrorList={false}
              tagName="VIEW"
              uiSchema={
                Object {
                  "sourceTypes": Object {
                    "items": Object {
                      "gases": Object {
                        "items": Object {
                          "classNames": "hidden-title",
                          "ui:col-md": 12,
                          "ui:field": "emissionGas",
                        },
                        "ui:options": Object {
                          "addable": false,
                          "orderable": false,
                          "removable": false,
                        },
                      },
                      "sourceTypeName": Object {
                        "classNames": "hidden-title",
                        "ui:col-md": 12,
                        "ui:field": "emissionSource",
                      },
                      "ui:order": Array [
                        "sourceTypeName",
                        "gases",
                      ],
                    },
                    "ui:options": Object {
                      "addable": false,
                      "orderable": false,
                      "removable": false,
                    },
                  },
                  "ui:className": "emission-form no-col-padding",
                }
              }
              widgets={
                Object {
                  "RadioWidget": [Function],
                }
              }
            >
              <VIEW />
            </Form>
          </VIEW>
          <VIEW
            style={
              Object {
                "fontSize": 12,
              }
            }
          >
            <TEXT
              style={
                Object {
                  "borderBottom": 1,
                  "fontSize": 16,
                  "paddingBottom": 10,
                }
              }
            >
              

              Fuel
            </TEXT>
            <Form
              ArrayFieldTemplate={[Function]}
              ErrorList={[Function]}
              FieldTemplate={[Function]}
              ObjectFieldTemplate={[Function]}
              disabled={false}
              fields={
                Object {
                  "StringField": [Function],
                  "emissionGas": [Function],
                  "emissionSource": [Function],
                  "product": [Function],
                }
              }
              formContext={
                Object {
                  "query": Object {
                    " $refType": "ApplicationDetailsPdf_query",
                    "allProducts": Object {
                      "edges": Array [
                        Object {
                          "node": Object {
                            "name": "foo",
                            "rowId": 1,
                          },
                        },
                        Object {
                          "node": Object {
                            "name": "simpleFoo",
                            "rowId": 2,
                          },
                        },
                      ],
                    },
                  },
                }
              }
              formData={
                Array [
                  Object {
                    "fuelType": "mollit eu esse",
                    "fuelUnits": "est dolor",
                    "methodology": "wci 2.0",
                    "quantity": 0,
                  },
                  Object {
                    "fuelType": "culpa",
                    "fuelUnits": "consequat Ut Duis",
                    "methodology": "wci 1.0",
                    "quantity": -60000000,
                  },
                ]
              }
              liveValidate={false}
              noHtml5Validate={false}
              noValidate={false}
              omitExtraData={true}
              safeRenderCompletion={false}
              schema={
                Object {
                  "definitions": Object {
                    "fuel": Object {
                      "properties": Object {
                        "fuelType": Object {
                          "title": "Fuel Type",
                          "type": "string",
                        },
                        "fuelUnits": Object {
                          "title": "Units",
                          "type": "string",
                        },
                        "methodology": Object {
                          "enum": Array [
                            "wci 1.0",
                            "wci 2.0",
                            "wci 3.0",
                          ],
                          "enumNames": Array [
                            "WCI 1.0",
                            "WCI 2.0",
                            "WCI 3.0",
                          ],
                          "title": "Methodology",
                          "type": "string",
                        },
                        "quantity": Object {
                          "title": "Quantity",
                          "type": "number",
                        },
                      },
                      "required": Array [
                        "fuelType",
                        "quantity",
                        "fuelUnits",
                        "methodology",
                      ],
                      "type": "object",
                    },
                  },
                  "items": Object {
                    "$ref": "#/definitions/fuel",
                  },
                  "type": "array",
                }
              }
              showErrorList={false}
              tagName="VIEW"
              uiSchema={
                Object {
                  "items": Object {
                    "ui:field": "fuel",
                  },
                  "ui:add-text": "Add a fuel",
                  "ui:remove-text": "Remove fuel",
                }
              }
              widgets={
                Object {
                  "RadioWidget": [Function],
                }
              }
            >
              <VIEW />
            </Form>
          </VIEW>
          <VIEW
            style={
              Object {
                "fontSize": 12,
              }
            }
          >
            <TEXT
              style={
                Object {
                  "borderBottom": 1,
                  "fontSize": 16,
                  "paddingBottom": 10,
                }
              }
            >
              

              Production
            </TEXT>
            <Form
              ArrayFieldTemplate={[Function]}
              ErrorList={[Function]}
              FieldTemplate={[Function]}
              ObjectFieldTemplate={[Function]}
              disabled={false}
              fields={
                Object {
                  "StringField": [Function],
                  "emissionGas": [Function],
                  "emissionSource": [Function],
                  "product": [Function],
                }
              }
              formContext={
                Object {
                  "query": Object {
                    " $refType": "ApplicationDetailsPdf_query",
                    "allProducts": Object {
                      "edges": Array [
                        Object {
                          "node": Object {
                            "name": "foo",
                            "rowId": 1,
                          },
                        },
                        Object {
                          "node": Object {
                            "name": "simpleFoo",
                            "rowId": 2,
                          },
                        },
                      ],
                    },
                  },
                }
              }
              formData={
                Array [
                  Object {
                    "productAmount": -40000000,
                    "productRowId": -60000000,
                    "productUnits": "culpa",
                    "requiresEmissionAllocation": false,
                    "requiresProductAmount": true,
                  },
                  Object {
                    "productRowId": 0,
                    "requiresEmissionAllocation": false,
                    "requiresProductAmount": false,
                  },
                ]
              }
              liveValidate={false}
              noHtml5Validate={false}
              noValidate={false}
              omitExtraData={true}
              safeRenderCompletion={false}
              schema={
                Object {
                  "definitions": Object {
                    "product": Object {
                      "dependencies": Object {
                        "requiresEmissionAllocation": Object {
                          "oneOf": Array [
                            Object {
                              "properties": Object {
                                "requiresEmissionAllocation": Object {
                                  "const": false,
                                },
                              },
                            },
                            Object {
                              "properties": Object {
                                "productEmissions": Object {
                                  "exclusiveMinimum": 0,
                                  "title": "Emissions allocated to product",
                                  "type": "number",
                                },
                                "requiresEmissionAllocation": Object {
                                  "const": true,
                                },
                              },
                              "required": Array [
                                "productEmissions",
                              ],
                            },
                          ],
                        },
                        "requiresProductAmount": Object {
                          "oneOf": Array [
                            Object {
                              "properties": Object {
                                "productAmount": Object {
                                  "title": "Annual Production Amount",
                                  "type": "number",
                                },
                                "productUnits": Object {
                                  "title": "Units",
                                  "type": "string",
                                },
                                "requiresProductAmount": Object {
                                  "const": true,
                                },
                              },
                              "required": Array [
                                "productAmount",
                                "productUnits",
                              ],
                            },
                            Object {
                              "properties": Object {
                                "requiresProductAmount": Object {
                                  "const": false,
                                },
                              },
                            },
                          ],
                        },
                      },
                      "properties": Object {
                        "productRowId": Object {
                          "title": "Product or Service",
                          "type": "integer",
                        },
                        "requiresEmissionAllocation": Object {
                          "type": "boolean",
                        },
                        "requiresProductAmount": Object {
                          "type": "boolean",
                        },
                      },
                      "required": Array [
                        "productRowId",
                        "requiresEmissionAllocation",
                        "requiresProductAmount",
                      ],
                      "type": "object",
                    },
                  },
                  "items": Object {
                    "$ref": "#/definitions/product",
                  },
                  "type": "array",
                }
              }
              showErrorList={false}
              tagName="VIEW"
              uiSchema={
                Object {
                  "items": Object {
                    "productAmount": Object {
                      "ui:col-md": 4,
                      "ui:help": "Report the annual production for the product, following the guidance document provided",
                    },
                    "productEmissions": Object {
                      "ui:col-md": 4,
                      "ui:help": "Report emissions associated to CIIP product, in tCO2e",
                    },
                    "productRowId": Object {
                      "ui:col-md": 12,
                      "ui:field": "productRowId",
                      "ui:widget": "SearchWidget",
                    },
                    "productUnits": Object {
                      "ui:col-md": 4,
                      "ui:readonly": true,
                    },
                    "requiresEmissionAllocation": Object {
                      "ui:widget": "hidden",
                    },
                    "requiresProductAmount": Object {
                      "ui:widget": "hidden",
                    },
                    "ui:field": "product",
                    "ui:order": Array [
                      "productRowId",
                      "productAmount",
                      "productUnits",
                      "*",
                    ],
                  },
                  "ui:add-text": "Add a Product",
                  "ui:remove-text": "Remove Product",
                }
              }
              widgets={
                Object {
                  "RadioWidget": [Function],
                }
              }
            >
              <VIEW />
            </Form>
          </VIEW>
        </styled.VIEW>
        <TEXT
          fixed={true}
          render={[Function]}
          style={
            Object {
              "bottom": 20,
              "fontSize": 12,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "textAlign": "center",
            }
          }
        />
      </PAGE>
    </DOCUMENT>
  }
  fileName="CIIP_Application_Forest Floor_2019.pdf"
>
  <Component />
</PDFDownloadLink>
`;
