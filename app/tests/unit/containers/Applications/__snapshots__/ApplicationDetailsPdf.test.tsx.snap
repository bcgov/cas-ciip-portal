// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ApplicationDetailsPdf should render application pdf donwload link 1`] = `
<PDFDownloadLink
  className="btn btn-primary"
  document={
    <DOCUMENT>
      <PAGE
        size="A4"
        style={
          Object {
            "paddingBottom": 40,
            "paddingTop": 20,
          }
        }
        wrap={true}
      >
        <styled.VIEW>
          <IMAGE
            src="/static/bcid.png"
            style={
              Object {
                "margin": "auto",
                "width": 150,
              }
            }
          />
          <TEXT>
            Application for CleanBC Industrial Incentive Program
          </TEXT>
        </styled.VIEW>
        <styled.VIEW>
          <styled.VIEW>
            <styled.VIEW>
              <TEXT
                style={
                  Object {
                    "fontSize": 12,
                    "margin": "10px 0 20px",
                  }
                }
              >
                Reporting Year: 
                2019
              </TEXT>
            </styled.VIEW>
            <styled.VIEW>
              <TEXT
                style={
                  Object {
                    "fontSize": 12,
                    "margin": "10px 0 20px",
                  }
                }
              >
                Status:
                 
                SUBMITTED
              </TEXT>
            </styled.VIEW>
          </styled.VIEW>
          <styled.VIEW>
            <styled.VIEW>
              <VIEW
                style={
                  Object {
                    "fontSize": 12,
                    "lineHeight": 1.3,
                  }
                }
              >
                <TEXT
                  style={
                    Object {
                      "borderBottom": 1,
                      "lineHeight": 1.5,
                      "marginBottom": 10,
                    }
                  }
                >
                  Operator
                </TEXT>
                <TEXT>
                  do sunt 
                </TEXT>
                <TEXT>
                   
                  eiusmod sint
                </TEXT>
                <TEXT>
                   
                  anim esse id pariatur laborum
                  ,
                   
                  Northwest Territories
                </TEXT>
                <TEXT>
                   
                  S7A 5N9
                </TEXT>
              </VIEW>
            </styled.VIEW>
            <styled.VIEW>
              <VIEW
                style={
                  Object {
                    "fontSize": 12,
                    "lineHeight": 1.3,
                  }
                }
              >
                <TEXT
                  style={
                    Object {
                      "borderBottom": 1,
                      "lineHeight": 1.5,
                      "marginBottom": 10,
                    }
                  }
                >
                  Facility
                </TEXT>
                <TEXT>
                  Forest Floor
                </TEXT>
                <TEXT>
                  Evergreen Street Northwest
                  

                  Oak Grove
                  , 
                  British Columbia
                  ,
                   
                  Canada
                  

                  V1C6T8
                </TEXT>
              </VIEW>
            </styled.VIEW>
          </styled.VIEW>
          <VIEW>
            <TEXT
              style={
                Object {
                  "borderBottom": 1,
                  "fontSize": 16,
                  "paddingBottom": 10,
                }
              }
            >
              

              Admin
            </TEXT>
            <Form
              ArrayFieldTemplate={[Function]}
              ErrorList={[Function]}
              FieldTemplate={[Function]}
              ObjectFieldTemplate={[Function]}
              disabled={false}
              fields={
                Object {
                  "StringField": [Function],
                  "emissionGas": [Function],
                  "emissionSource": [Function],
                  "production": [Function],
                }
              }
              formData={
                Object {
                  "facility": Object {
                    "bcghgid": "laborum",
                    "facilityName": "eu laborum dolor proident",
                    "facilityType": "SFO",
                    "isFacilityLocationDifferent": false,
                    "mailingAddress": Object {
                      "city": "reprehenderit minim aliqua in",
                      "postalCode": "O1E 9Z0",
                      "province": "Quebec",
                      "streetAddress": "magna cillum deserunt",
                    },
                    "naics": "Duis sit",
                  },
                  "operationalRepresentative": Object {
                    "email": "ipsum laboris incididunt et proident",
                    "fax": "culpa",
                    "firstName": "incididunt mollit ullamco culpa consequat",
                    "lastName": "est",
                    "mailingAddress": Object {
                      "city": "consectetur laborum et commodo",
                      "postalCode": "N1F 5F2",
                      "province": "Quebec",
                      "streetAddress": "labore ut irure",
                    },
                    "phone": "ipsum",
                    "position": "cupidatat dolor ad",
                  },
                  "operator": Object {
                    "bcCorporateRegistryNumber": "id",
                    "duns": "673775195",
                    "mailingAddress": Object {
                      "city": "anim esse id pariatur laborum",
                      "postalCode": "S7A 5N9",
                      "province": "Northwest Territories",
                      "streetAddress": "eiusmod sint",
                    },
                    "naics": "aliquip nulla Lorem cupidatat Duis",
                    "name": "do sunt ",
                    "tradeName": "reprehenderit",
                  },
                }
              }
              liveValidate={false}
              noHtml5Validate={false}
              noValidate={false}
              omitExtraData={true}
              safeRenderCompletion={false}
              schema={
                Object {
                  "definitions": Object {
                    "address": Object {
                      "properties": Object {
                        "city": Object {
                          "title": "City",
                          "type": "string",
                        },
                        "postalCode": Object {
                          "format": "postal-code",
                          "title": "Postal Code",
                          "type": "string",
                        },
                        "province": Object {
                          "enum": Array [
                            "Alberta",
                            "British Columbia",
                            "Manitoba",
                            "New Brunswick",
                            "Newfoundland and Labrador",
                            "Northwest Territories",
                            "Nova Scotia",
                            "Nunavut",
                            "Ontario",
                            "Prince Edward Island",
                            "Quebec",
                            "Saskatchewan",
                            "Yukon",
                          ],
                          "title": "Province or Territory",
                          "type": "string",
                        },
                        "streetAddress": Object {
                          "title": "Street address",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "properties": Object {
                    "facility": Object {
                      "dependencies": Object {
                        "isFacilityLocationDifferent": Object {
                          "oneOf": Array [
                            Object {
                              "properties": Object {
                                "isFacilityLocationDifferent": Object {
                                  "const": false,
                                },
                              },
                            },
                            Object {
                              "properties": Object {
                                "facilityLocation": Object {
                                  "properties": Object {
                                    "latitude": Object {
                                      "title": "Latitude",
                                      "type": "number",
                                    },
                                    "locationNearestCity": Object {
                                      "title": "Nearest City",
                                      "type": "string",
                                    },
                                    "locationStreetAddress": Object {
                                      "title": "Location of the facility",
                                      "type": "string",
                                    },
                                    "longitude": Object {
                                      "title": "Longitude",
                                      "type": "number",
                                    },
                                  },
                                  "title": "Facility Location",
                                  "type": "object",
                                },
                                "isFacilityLocationDifferent": Object {
                                  "const": true,
                                },
                              },
                            },
                          ],
                        },
                      },
                      "properties": Object {
                        "bcghgid": Object {
                          "title": "BCGHG ID Number",
                          "type": "string",
                        },
                        "facilityName": Object {
                          "title": "Facility Name",
                          "type": "string",
                        },
                        "facilityType": Object {
                          "enum": Array [
                            "IF_a",
                            "IF_b",
                            "L_c",
                            "SFO",
                            "LFO",
                            "EIO",
                          ],
                          "title": "Facility Type",
                          "type": "string",
                        },
                        "isFacilityLocationDifferent": Object {
                          "enumNames": Array [
                            " Yes",
                            " No",
                          ],
                          "title": "Is the facility location different from the mailing address?",
                          "type": "boolean",
                        },
                        "mailingAddress": Object {
                          "$ref": "#/definitions/address",
                          "title": "Facility Mailing Address",
                        },
                        "naics": Object {
                          "title": "NAICS Code",
                          "type": "string",
                        },
                      },
                      "title": "Facility Information",
                      "type": "object",
                    },
                    "operationalRepresentative": Object {
                      "properties": Object {
                        "email": Object {
                          "title": "Email Address",
                          "type": "string",
                        },
                        "fax": Object {
                          "title": "Fax Number",
                          "type": "string",
                        },
                        "firstName": Object {
                          "title": "First Name",
                          "type": "string",
                        },
                        "lastName": Object {
                          "title": "Last Name",
                          "type": "string",
                        },
                        "mailingAddress": Object {
                          "$ref": "#/definitions/address",
                          "title": "Operational Representative Mailing Address",
                        },
                        "phone": Object {
                          "title": "Telephone Number",
                          "type": "string",
                        },
                        "position": Object {
                          "title": "Position/Title",
                          "type": "string",
                        },
                      },
                      "title": "Operational Representative",
                      "type": "object",
                    },
                    "operator": Object {
                      "properties": Object {
                        "bcCorporateRegistryNumber": Object {
                          "title": "BC Corporate Registry number",
                          "type": "string",
                        },
                        "duns": Object {
                          "format": "duns",
                          "title": "DUNS number",
                          "type": "string",
                        },
                        "mailingAddress": Object {
                          "$ref": "#/definitions/address",
                          "title": "Operator Mailing Address",
                        },
                        "naics": Object {
                          "title": "NAICS code",
                          "type": "string",
                        },
                        "name": Object {
                          "title": "Legal name",
                          "type": "string",
                        },
                        "tradeName": Object {
                          "title": "Trade name",
                          "type": "string",
                        },
                      },
                      "title": "Operator Information",
                      "type": "object",
                    },
                  },
                  "type": "object",
                }
              }
              showErrorList={false}
              tagName={[Function]}
              uiSchema={
                Object {
                  "facility": Object {
                    "facilityLocation": Object {
                      "ui:order": Array [
                        "locationStreetAddress",
                        "locationNearestCity",
                        "latitude",
                        "longitute",
                      ],
                    },
                    "isFacilityLocationDifferent": Object {
                      "ui:widget": "radio",
                    },
                    "mailingAddress": Object {
                      "ui:order": Array [
                        "streetAddress",
                        "city",
                        "postalCode",
                        "province",
                      ],
                    },
                    "ui:order": Array [
                      "facilityName",
                      "facilityType",
                      "bcghgid",
                      "naics",
                      "mailingAddress",
                      "isFacilityLocationDifferent",
                      "facilityLocation",
                    ],
                  },
                  "operationalRepresentative": Object {
                    "mailingAddress": Object {
                      "ui:order": Array [
                        "streetAddress",
                        "city",
                        "postalCode",
                        "province",
                      ],
                    },
                    "ui:order": Array [
                      "firstName",
                      "lastName",
                      "position",
                      "email",
                      "phone",
                      "fax",
                      "mailingAddress",
                    ],
                  },
                  "operator": Object {
                    "bcCorporateRegistryNumber": Object {
                      "ui:col-md": 4,
                    },
                    "duns": Object {
                      "ui:col-md": 4,
                    },
                    "mailingAddress": Object {
                      "ui:order": Array [
                        "streetAddress",
                        "city",
                        "postalCode",
                        "province",
                      ],
                    },
                    "naics": Object {
                      "ui:col-md": 4,
                    },
                    "ui:order": Array [
                      "name",
                      "tradeName",
                      "naics",
                      "bcCorporateRegistryNumber",
                      "duns",
                      "mailingAddress",
                    ],
                  },
                  "ui:order": Array [
                    "operator",
                    "operationalRepresentative",
                    "facility",
                  ],
                }
              }
              widgets={
                Object {
                  "RadioWidget": [Function],
                }
              }
            >
              <VIEW />
            </Form>
          </VIEW>
          <VIEW>
            <TEXT
              style={
                Object {
                  "borderBottom": 1,
                  "fontSize": 16,
                  "paddingBottom": 10,
                }
              }
            >
              

              Emission
            </TEXT>
            <Form
              ArrayFieldTemplate={[Function]}
              ErrorList={[Function]}
              FieldTemplate={[Function]}
              ObjectFieldTemplate={[Function]}
              disabled={false}
              fields={
                Object {
                  "StringField": [Function],
                  "emissionGas": [Function],
                  "emissionSource": [Function],
                  "production": [Function],
                }
              }
              formData={
                Object {
                  "sourceTypes": Array [
                    Object {
                      "gases": Array [
                        Object {
                          "annualCO2e": 71303878.38974759,
                          "annualEmission": 35880620.64118728,
                          "gasDescription": "ex fugiat",
                          "gasType": "cillum aliquip",
                          "gwp": -6549009.970495641,
                        },
                        Object {
                          "annualCO2e": 52189311.558567345,
                          "annualEmission": 11178337.346207142,
                          "gasDescription": "Duis in Ut irure",
                          "gasType": "Ut",
                          "gwp": 49443041.129291296,
                        },
                        Object {
                          "annualCO2e": -80829251.94403905,
                          "annualEmission": 34213641.646971464,
                          "gasDescription": "exercitation",
                          "gasType": "enim officia proident",
                          "gwp": 75296816.9698641,
                        },
                        Object {
                          "annualCO2e": 56937856.762892425,
                          "annualEmission": -42632865.700007506,
                          "gasDescription": "esse dolor do",
                          "gasType": "ad",
                          "gwp": 6248736.364586189,
                        },
                        Object {
                          "annualCO2e": 84750351.25786322,
                          "annualEmission": -79288973.79942304,
                          "gasDescription": "nostrud Excepteur ut",
                          "gasType": "incididunt enim",
                          "gwp": -7658192.66638124,
                        },
                      ],
                      "sourceTypeName": "ipsum labore eu consequat ",
                    },
                    Object {
                      "gases": Array [
                        Object {
                          "annualCO2e": 30903395.40471314,
                          "annualEmission": 80579365.73047778,
                          "gasDescription": "amet dolore velit ",
                          "gasType": "Duis",
                          "gwp": -57962643.79199036,
                        },
                      ],
                      "sourceTypeName": "Ut aliquip labore adipisicin",
                    },
                    Object {
                      "gases": Array [
                        Object {
                          "annualCO2e": 21126800.334565893,
                          "annualEmission": 819702.5821923763,
                          "gasDescription": "in in veniam",
                          "gasType": "adipisicing",
                          "gwp": 48074363.420989335,
                        },
                        Object {
                          "annualCO2e": 59287455.355385035,
                          "annualEmission": -49733803.06075721,
                          "gasDescription": "aliquip",
                          "gasType": "est ex laborum ut",
                          "gwp": -67376058.95025171,
                        },
                      ],
                      "sourceTypeName": "enim fugiat veniam in i",
                    },
                    Object {
                      "gases": Array [
                        Object {
                          "annualCO2e": 86441090.15813065,
                          "annualEmission": 78772685.90625742,
                          "gasDescription": "do et ipsum",
                          "gasType": "in irure",
                          "gwp": 15493925.731135637,
                        },
                        Object {
                          "annualCO2e": 10360236.881153956,
                          "annualEmission": 37664571.834047854,
                          "gasDescription": "cillum",
                          "gasType": "Excep",
                          "gwp": -12116586.359589338,
                        },
                      ],
                      "sourceTypeName": "aliquip laborum do",
                    },
                    Object {
                      "gases": Array [
                        Object {
                          "annualCO2e": -49203710.98795604,
                          "annualEmission": 78056518.84932017,
                          "gasDescription": "incididunt est deseru",
                          "gasType": "occaecat sit deserunt labore",
                          "gwp": -47848164.94376085,
                        },
                        Object {
                          "annualCO2e": 31890264.867043465,
                          "annualEmission": -67008355.212691665,
                          "gasDescription": "nostrud dolor elit",
                          "gasType": "eu nostrud occaecat paria",
                          "gwp": 73245223.96093297,
                        },
                        Object {
                          "annualCO2e": -26672196.700185895,
                          "annualEmission": -74365738.17084792,
                          "gasDescription": "et dolore minim eiusmod",
                          "gasType": "Ut aute dolor deserunt",
                          "gwp": -52838435.226682454,
                        },
                        Object {
                          "annualCO2e": 39803106.434479,
                          "annualEmission": 58642824.4394857,
                          "gasDescription": "mollit cupidatat dolore",
                          "gasType": "consequat",
                          "gwp": -78459842.61954975,
                        },
                      ],
                      "sourceTypeName": "tempor sint",
                    },
                  ],
                }
              }
              liveValidate={false}
              noHtml5Validate={false}
              noValidate={false}
              omitExtraData={true}
              safeRenderCompletion={false}
              schema={
                Object {
                  "definitions": Object {
                    "gas": Object {
                      "properties": Object {
                        "annualCO2e": Object {
                          "title": "Tonnes (CO2 equivalent)",
                          "type": "number",
                        },
                        "annualEmission": Object {
                          "title": "Tonnes (CO2)",
                          "type": "number",
                        },
                        "gasDescription": Object {
                          "type": "string",
                        },
                        "gasType": Object {
                          "title": "Gas Type",
                          "type": "string",
                        },
                        "gwp": Object {
                          "title": "GWP",
                          "type": "number",
                        },
                      },
                      "type": "object",
                    },
                    "sourceType": Object {
                      "properties": Object {
                        "gases": Object {
                          "items": Object {
                            "$ref": "#/definitions/gas",
                          },
                          "minItems": 1,
                          "title": "gases",
                          "type": "array",
                        },
                        "sourceTypeName": Object {
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "properties": Object {
                    "sourceTypes": Object {
                      "items": Object {
                        "$ref": "#/definitions/sourceType",
                      },
                      "minItems": 1,
                      "title": "Source Types",
                      "type": "array",
                    },
                  },
                  "type": "object",
                }
              }
              showErrorList={false}
              tagName={[Function]}
              uiSchema={
                Object {
                  "sourceTypes": Object {
                    "items": Object {
                      "gases": Object {
                        "items": Object {
                          "ui:field": "emissionGas",
                        },
                        "ui:options": Object {
                          "addable": false,
                          "orderable": false,
                          "removable": false,
                        },
                      },
                      "sourceTypeName": Object {
                        "classNames": "hidden-title",
                        "ui:col-md": 12,
                        "ui:field": "emissionSource",
                      },
                      "ui:order": Array [
                        "sourceTypeName",
                        "gases",
                      ],
                    },
                    "ui:options": Object {
                      "addable": false,
                      "orderable": false,
                      "removable": false,
                    },
                  },
                  "ui:className": "emission-form no-col-padding",
                }
              }
              widgets={
                Object {
                  "RadioWidget": [Function],
                }
              }
            >
              <VIEW />
            </Form>
          </VIEW>
          <VIEW>
            <TEXT
              style={
                Object {
                  "borderBottom": 1,
                  "fontSize": 16,
                  "paddingBottom": 10,
                }
              }
            >
              

              Fuel
            </TEXT>
            <Form
              ArrayFieldTemplate={[Function]}
              ErrorList={[Function]}
              FieldTemplate={[Function]}
              ObjectFieldTemplate={[Function]}
              disabled={false}
              fields={
                Object {
                  "StringField": [Function],
                  "emissionGas": [Function],
                  "emissionSource": [Function],
                  "production": [Function],
                }
              }
              formData={
                Array [
                  Object {
                    "fuelType": "in ullamco ea incididunt occaecat",
                    "fuelUnits": "dolore nulla",
                    "methodology": "wci 3.0",
                    "quantity": 38349349.17089656,
                  },
                  Object {
                    "fuelType": "sed id",
                    "fuelUnits": "deserunt dolore nostrud nulla sint",
                    "methodology": "wci 3.0",
                    "quantity": 65287796.95236185,
                  },
                ]
              }
              liveValidate={false}
              noHtml5Validate={false}
              noValidate={false}
              omitExtraData={true}
              safeRenderCompletion={false}
              schema={
                Object {
                  "definitions": Object {
                    "fuel": Object {
                      "properties": Object {
                        "fuelType": Object {
                          "title": "Fuel Type",
                          "type": "string",
                        },
                        "fuelUnits": Object {
                          "title": "Units",
                          "type": "string",
                        },
                        "methodology": Object {
                          "enum": Array [
                            "wci 1.0",
                            "wci 2.0",
                            "wci 3.0",
                          ],
                          "enumNames": Array [
                            "WCI 1.0",
                            "WCI 2.0",
                            "WCI 3.0",
                          ],
                          "title": "Methodology",
                          "type": "string",
                        },
                        "quantity": Object {
                          "title": "Quantity",
                          "type": "number",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "items": Object {
                    "$ref": "#/definitions/fuel",
                  },
                  "type": "array",
                }
              }
              showErrorList={false}
              tagName={[Function]}
              uiSchema={
                Object {
                  "items": Object {
                    "ui:field": "fuel",
                  },
                  "ui:add-text": "Add a fuel",
                  "ui:remove-text": "Remove fuel",
                }
              }
              widgets={
                Object {
                  "RadioWidget": [Function],
                }
              }
            >
              <VIEW />
            </Form>
          </VIEW>
          <VIEW>
            <TEXT
              style={
                Object {
                  "borderBottom": 1,
                  "fontSize": 16,
                  "paddingBottom": 10,
                }
              }
            >
              

              Electricity and Heat
            </TEXT>
            <Form
              ArrayFieldTemplate={[Function]}
              ErrorList={[Function]}
              FieldTemplate={[Function]}
              ObjectFieldTemplate={[Function]}
              disabled={false}
              fields={
                Object {
                  "StringField": [Function],
                  "emissionGas": [Function],
                  "emissionSource": [Function],
                  "production": [Function],
                }
              }
              formData={
                Object {
                  "electricity": Object {
                    "consumedOnSite": -99193717.33048426,
                    "generatedOnSite": 0,
                    "purchased": 0,
                    "sold": -92840109.12899698,
                  },
                  "heat": Object {
                    "consumedOnSite": 4627023.469820693,
                    "generatedOnSite": 0,
                    "purchased": 90187014.81193686,
                    "purchasedEmissionFactor": -34832534.03978268,
                    "sold": 7383904.3473596275,
                  },
                }
              }
              liveValidate={false}
              noHtml5Validate={false}
              noValidate={false}
              omitExtraData={true}
              safeRenderCompletion={false}
              schema={
                Object {
                  "properties": Object {
                    "electricity": Object {
                      "dependencies": Object {
                        "generatedOnSite": Object {
                          "oneOf": Array [
                            Object {
                              "properties": Object {
                                "generatedOnSite": Object {
                                  "exclusiveMinimum": 0,
                                },
                                "onSiteEmissions": Object {
                                  "title": "Emissions from On-Site Generation (tCO2e)",
                                  "type": "number",
                                },
                              },
                              "required": Array [
                                "onSiteEmissions",
                              ],
                            },
                            Object {
                              "properties": Object {
                                "generatedOnSite": Object {
                                  "const": 0,
                                },
                              },
                            },
                          ],
                        },
                        "purchased": Object {
                          "oneOf": Array [
                            Object {
                              "properties": Object {
                                "purchased": Object {
                                  "exclusiveMinimum": 0,
                                },
                                "purchasedEmissionFactor": Object {
                                  "title": "Purchased Electricity Emission Factor (tCO2e/MWh)",
                                  "type": "number",
                                },
                              },
                              "required": Array [
                                "purchasedEmissionFactor",
                              ],
                            },
                            Object {
                              "properties": Object {
                                "purchased": Object {
                                  "const": 0,
                                },
                              },
                            },
                          ],
                        },
                      },
                      "properties": Object {
                        "consumedOnSite": Object {
                          "title": "Consumed On Site (MWh)",
                          "type": "number",
                        },
                        "generatedOnSite": Object {
                          "title": "Generated On Site (MWh)",
                          "type": "number",
                        },
                        "purchased": Object {
                          "title": "Purchased (MWh)",
                          "type": "number",
                        },
                        "sold": Object {
                          "title": "Sold (MWh)",
                          "type": "number",
                        },
                      },
                      "required": Array [
                        "purchased",
                        "generatedOnSite",
                        "consumedOnSite",
                        "sold",
                      ],
                      "title": "Electricity",
                      "type": "object",
                    },
                    "heat": Object {
                      "dependencies": Object {
                        "generatedOnSite": Object {
                          "oneOf": Array [
                            Object {
                              "properties": Object {
                                "generatedOnSite": Object {
                                  "exclusiveMinimum": 0,
                                },
                                "onSiteEmissions": Object {
                                  "title": "Emissions from On-Site Generation (tCO2e)",
                                  "type": "number",
                                },
                              },
                              "required": Array [
                                "onSiteEmissions",
                              ],
                            },
                            Object {
                              "properties": Object {
                                "generatedOnSite": Object {
                                  "const": 0,
                                },
                              },
                            },
                          ],
                        },
                        "purchased": Object {
                          "oneOf": Array [
                            Object {
                              "properties": Object {
                                "purchased": Object {
                                  "exclusiveMinimum": 0,
                                },
                                "purchasedEmissionFactor": Object {
                                  "default": 0.063,
                                  "title": "Purchased Heat Emission Factor (tCO2e/GJ)",
                                  "type": "number",
                                },
                              },
                              "required": Array [
                                "purchasedEmissionFactor",
                              ],
                            },
                            Object {
                              "properties": Object {
                                "purchased": Object {
                                  "const": 0,
                                },
                              },
                            },
                          ],
                        },
                      },
                      "properties": Object {
                        "consumedOnSite": Object {
                          "title": "Consumed On Site (GJ)",
                          "type": "number",
                        },
                        "generatedOnSite": Object {
                          "title": "Generated On Site (GJ)",
                          "type": "number",
                        },
                        "purchased": Object {
                          "title": "Purchased (GJ)",
                          "type": "number",
                        },
                        "sold": Object {
                          "title": "Sold (GJ)",
                          "type": "number",
                        },
                      },
                      "required": Array [
                        "purchased",
                        "generatedOnSite",
                        "consumedOnSite",
                        "sold",
                      ],
                      "title": "Heat",
                      "type": "object",
                    },
                  },
                  "type": "object",
                }
              }
              showErrorList={false}
              tagName={[Function]}
              uiSchema={
                Object {
                  "electricity": Object {
                    "consumedOnSite": Object {
                      "ui:col-md": 3,
                    },
                    "generatedOnSite": Object {
                      "ui:col-md": 3,
                    },
                    "purchased": Object {
                      "ui:col-md": 3,
                    },
                    "purchasedEmissionFactor": Object {
                      "ui:help": "Find your Grid Emission Factor here (and apply necessary conversion)",
                      "ui:helplink": "https://www2.gov.bc.ca/gov/content/environment/climate-change/industry/reporting/quantify/electricity",
                    },
                    "sold": Object {
                      "ui:col-md": 3,
                    },
                    "ui:order": Array [
                      "purchased",
                      "generatedOnSite",
                      "consumedOnSite",
                      "sold",
                      "*",
                    ],
                  },
                  "heat": Object {
                    "consumedOnSite": Object {
                      "ui:col-md": 3,
                    },
                    "generatedOnSite": Object {
                      "ui:col-md": 3,
                    },
                    "purchased": Object {
                      "ui:col-md": 3,
                    },
                    "purchasedEmissionFactor": Object {
                      "ui:help": "Computed using natural gas emissions from the WCI methodology, assuming 80% efficiency",
                    },
                    "sold": Object {
                      "ui:col-md": 3,
                    },
                    "ui:order": Array [
                      "purchased",
                      "generatedOnSite",
                      "consumedOnSite",
                      "sold",
                      "*",
                    ],
                  },
                  "ui:order": Array [
                    "electricity",
                    "heat",
                  ],
                }
              }
              widgets={
                Object {
                  "RadioWidget": [Function],
                }
              }
            >
              <VIEW />
            </Form>
          </VIEW>
          <VIEW>
            <TEXT
              style={
                Object {
                  "borderBottom": 1,
                  "fontSize": 16,
                  "paddingBottom": 10,
                }
              }
            >
              

              Production
            </TEXT>
            <Form
              ArrayFieldTemplate={[Function]}
              ErrorList={[Function]}
              FieldTemplate={[Function]}
              ObjectFieldTemplate={[Function]}
              disabled={false}
              fields={
                Object {
                  "StringField": [Function],
                  "emissionGas": [Function],
                  "emissionSource": [Function],
                  "production": [Function],
                }
              }
              formData={
                Array [
                  Object {
                    "additionalData": Object {},
                    "paymentAllocationFactor": -23445458,
                    "productRowId": 86776719,
                    "productUnits": "ea sed sint",
                    "productionAllocationFactor": -68363381,
                    "quantity": -39344490.08906542,
                  },
                  Object {
                    "additionalData": Object {
                      "cupidatat5": true,
                      "id8f9$": true,
                      "laborum_0": 53107218,
                      "sint4_": 95526934.22397262,
                    },
                    "paymentAllocationFactor": -32947510,
                    "productRowId": 65260432,
                    "productUnits": "nulla sed irure mollit",
                    "productionAllocationFactor": -92079900,
                    "quantity": 44943797.20978698,
                  },
                  Object {
                    "additionalData": Object {
                      "magna_82": -2831966,
                    },
                    "paymentAllocationFactor": -56755734,
                    "productRowId": 45458968,
                    "productUnits": "sint minim",
                    "productionAllocationFactor": -42502367,
                    "quantity": -11439471.53102301,
                  },
                  Object {
                    "additionalData": Object {},
                    "paymentAllocationFactor": -42707269,
                    "productRowId": -573768,
                    "productUnits": "laborum tempor",
                    "productionAllocationFactor": -9978403,
                    "quantity": 51993742.6379807,
                  },
                  Object {
                    "additionalData": Object {
                      "aute_2$": false,
                      "in_0f": "in dolor",
                      "in_f90": -51157342.01851092,
                    },
                    "paymentAllocationFactor": -8562881,
                    "productRowId": 54197583,
                    "productUnits": "elit aliqua officia exercitation",
                    "productionAllocationFactor": -9368793,
                    "quantity": 17569894.184723184,
                  },
                ]
              }
              liveValidate={false}
              noHtml5Validate={false}
              noValidate={false}
              omitExtraData={true}
              safeRenderCompletion={false}
              schema={
                Object {
                  "definitions": Object {
                    "product": Object {
                      "properties": Object {
                        "additionalData": Object {
                          "additionalProperties": true,
                          "type": "object",
                        },
                        "paymentAllocationFactor": Object {
                          "exclusiveMinimum": 0,
                          "maximum": 100,
                          "title": "Product allocation factor (%)",
                          "type": "integer",
                        },
                        "productRowId": Object {
                          "title": "Product or Service",
                          "type": "integer",
                        },
                        "productUnits": Object {
                          "title": "Units",
                          "type": "string",
                        },
                        "productionAllocationFactor": Object {
                          "exclusiveMinimum": 0,
                          "maximum": 100,
                          "title": "Product allocation factor (%)",
                          "type": "integer",
                        },
                        "quantity": Object {
                          "title": "Annual Production Amount",
                          "type": "number",
                        },
                      },
                      "required": Array [
                        "productRowId",
                        "quantity",
                        "productUnits",
                        "productionAllocationFactor",
                        "paymentAllocationFactor",
                      ],
                      "type": "object",
                    },
                  },
                  "items": Object {
                    "$ref": "#/definitions/product",
                  },
                  "type": "array",
                }
              }
              showErrorList={false}
              tagName={[Function]}
              uiSchema={
                Object {
                  "items": Object {
                    "productRowId": Object {
                      "ui:col-md": 8,
                      "ui:widget": "SearchWidget",
                    },
                    "productionAllocationFactor": Object {
                      "ui:col-md": 4,
                      "ui:help": "Indicate percentage of total facility emissions that should be allocated to the selected product/service",
                    },
                    "ui:field": "production",
                  },
                  "ui:add-text": "Add a Product",
                  "ui:remove-text": "Remove Product",
                }
              }
              widgets={
                Object {
                  "RadioWidget": [Function],
                }
              }
            >
              <VIEW />
            </Form>
          </VIEW>
        </styled.VIEW>
        <TEXT
          fixed={true}
          render={[Function]}
          style={
            Object {
              "bottom": 20,
              "fontSize": 12,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "textAlign": "center",
            }
          }
        />
      </PAGE>
    </DOCUMENT>
  }
  fileName="CIIP_Application_Forest Floor_2019.pdf"
>
  <Component />
</PDFDownloadLink>
`;
