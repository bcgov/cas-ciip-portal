// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductList should match the previous snaphshot 1`] = `
<Fragment>
  <tr
    className="jsx-204006405"
  >
    <td
      className="jsx-204006405"
    >
      test product
    </td>
    <td
      className="jsx-204006405"
    >
      06-05-2020
    </td>
    <td
      className="jsx-204006405"
    >
      1
    </td>
    <td
      className="jsx-204006405"
    >
      10
    </td>
    <td
      className="jsx-204006405"
    >
      Yes
    </td>
    <td
      className="jsx-204006405"
    >
      PUBLISHED
    </td>
    <td
      className="jsx-204006405"
    >
      Yes
    </td>
    <td
      className="jsx-204006405"
    >
      <OverlayTrigger
        defaultShow={false}
        overlay={
          <Tooltip
            id="benchmark"
            placement="right"
          >
            Edit
             
            Benchmark
          </Tooltip>
        }
        placement="bottom"
        trigger={
          Array [
            "hover",
            "focus",
          ]
        }
      >
        <FontAwesomeIcon
          border={false}
          className="editIcon"
          fixedWidth={false}
          flip={null}
          icon={
            Object {
              "icon": Array [
                576,
                512,
                Array [],
                "f3fd",
                "M288 32C128.94 32 0 160.94 0 320c0 52.8 14.25 102.26 39.06 144.8 5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2C561.75 422.26 576 372.8 576 320c0-159.06-128.94-288-288-288zm0 64c14.71 0 26.58 10.13 30.32 23.65-1.11 2.26-2.64 4.23-3.45 6.67l-9.22 27.67c-5.13 3.49-10.97 6.01-17.64 6.01-17.67 0-32-14.33-32-32S270.33 96 288 96zM96 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm48-160c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm246.77-72.41l-61.33 184C343.13 347.33 352 364.54 352 384c0 11.72-3.38 22.55-8.88 32H232.88c-5.5-9.45-8.88-20.28-8.88-32 0-33.94 26.5-61.43 59.9-63.59l61.34-184.01c4.17-12.56 17.73-19.45 30.36-15.17 12.57 4.19 19.35 17.79 15.17 30.36zm14.66 57.2l15.52-46.55c3.47-1.29 7.13-2.23 11.05-2.23 17.67 0 32 14.33 32 32s-14.33 32-32 32c-11.38-.01-20.89-6.28-26.57-15.22zM480 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z",
              ],
              "iconName": "tachometer-alt",
              "prefix": "fas",
            }
          }
          inverse={false}
          listItem={false}
          mask={null}
          onClick={[Function]}
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          swapOpacity={false}
          symbol={false}
          title=""
          transform={null}
        />
      </OverlayTrigger>
      â€ƒ
      <OverlayTrigger
        defaultShow={false}
        overlay={
          <Tooltip
            id="product"
            placement="right"
          >
            View
             Product
          </Tooltip>
        }
        placement="bottom"
        trigger={
          Array [
            "hover",
            "focus",
          ]
        }
      >
        <FontAwesomeIcon
          border={false}
          className="editIcon-disabled"
          fixedWidth={false}
          flip={null}
          icon={
            Object {
              "icon": Array [
                512,
                512,
                Array [],
                "f1b2",
                "M239.1 6.3l-208 78c-18.7 7-31.1 25-31.1 45v225.1c0 18.2 10.3 34.8 26.5 42.9l208 104c13.5 6.8 29.4 6.8 42.9 0l208-104c16.3-8.1 26.5-24.8 26.5-42.9V129.3c0-20-12.4-37.9-31.1-44.9l-208-78C262 2.2 250 2.2 239.1 6.3zM256 68.4l192 72v1.1l-192 78-192-78v-1.1l192-72zm32 356V275.5l160-65v133.9l-160 80z",
              ],
              "iconName": "cube",
              "prefix": "fas",
            }
          }
          inverse={false}
          listItem={false}
          mask={null}
          onClick={[Function]}
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          swapOpacity={false}
          symbol={false}
          title=""
          transform={null}
        />
      </OverlayTrigger>
    </td>
  </tr>
  <Bootstrap(Modal)
    centered={true}
    onHide={[Function]}
    show={false}
    size="xl"
  >
    <ModalHeader
      closeButton={true}
      closeLabel="Close"
      style={
        Object {
          "background": "#003366",
          "color": "white",
        }
      }
    >
      <ModalTitle>
        Edit Product
      </ModalTitle>
    </ModalHeader>
    <ModalBody
      style={
        Object {
          "background": "#f5f5f5",
        }
      }
    >
      <Container
        fluid={false}
      >
        <Form
          ArrayFieldTemplate={[Function]}
          ErrorList={[Function]}
          FieldTemplate={[Function]}
          ObjectFieldTemplate={[Function]}
          disabled={true}
          formData={
            Object {
              "addEmissionsFromEios": false,
              "addPurchasedElectricityEmissions": false,
              "addPurchasedHeatEmissions": false,
              "benchmarksByProductId": Object {
                "edges": Array [
                  Object {
                    "node": Object {
                      "benchmark": 1,
                      "createdAt": "2020-05-06",
                      "eligibilityThreshold": 10,
                      "endReportingYear": 2020,
                      "id": "bench",
                      "incentiveMultiplier": 1,
                      "maximumIncentiveRatio": 1,
                      "minimumIncentiveRatio": 0,
                      "rowId": 1,
                      "startReportingYear": 2019,
                    },
                  },
                ],
              },
              "id": "abc",
              "isCiipProduct": true,
              "productName": "test product",
              "productState": "PUBLISHED",
              "requiresEmissionAllocation": true,
              "requiresProductAmount": true,
              "rowId": 1,
              "subtractExportedElectricityEmissions": false,
              "subtractExportedHeatEmissions": false,
              "subtractGeneratedElectricityEmissions": false,
              "subtractGeneratedHeatEmissions": false,
              "units": "kl",
              "updatedAt": "2020-05-06",
            }
          }
          liveOmit={true}
          liveValidate={false}
          noHtml5Validate={false}
          noValidate={false}
          omitExtraData={true}
          onSubmit={[Function]}
          safeRenderCompletion={false}
          schema={
            Object {
              "properties": Object {
                "addEmissionsFromEios": Object {
                  "default": false,
                  "enumNames": Array [
                    " Yes",
                    " No",
                  ],
                  "title": "Emissions from EIOs are added to facility emissions",
                  "type": "boolean",
                },
                "addPurchasedElectricityEmissions": Object {
                  "default": false,
                  "enumNames": Array [
                    " Yes",
                    " No",
                  ],
                  "title": "Purchased electricity is added to facility emissions",
                  "type": "boolean",
                },
                "addPurchasedHeatEmissions": Object {
                  "default": false,
                  "enumNames": Array [
                    " Yes",
                    " No",
                  ],
                  "title": "Purchased heat is added to facility emissions",
                  "type": "boolean",
                },
                "additions": Object {
                  "type": "string",
                },
                "basic": Object {
                  "type": "string",
                },
                "isCiipProduct": Object {
                  "default": true,
                  "enumNames": Array [
                    " Yes",
                    " No",
                  ],
                  "title": "CIIP (benchmarked) product",
                  "type": "boolean",
                },
                "productName": Object {
                  "title": "Name",
                  "type": "string",
                },
                "requiresEmissionAllocation": Object {
                  "default": true,
                  "enumNames": Array [
                    " Yes",
                    " No",
                  ],
                  "title": "Allocation of emissions is required",
                  "type": "boolean",
                },
                "requiresProductAmount": Object {
                  "default": true,
                  "enumNames": Array [
                    " Yes",
                    " No",
                  ],
                  "title": "Production amount needs to be reported",
                  "type": "boolean",
                },
                "subtractExportedElectricityEmissions": Object {
                  "default": false,
                  "enumNames": Array [
                    " Yes",
                    " No",
                  ],
                  "title": "Exported electricity is subtracted from facility emissions",
                  "type": "boolean",
                },
                "subtractExportedHeatEmissions": Object {
                  "default": false,
                  "enumNames": Array [
                    " Yes",
                    " No",
                  ],
                  "title": "Exported heat is subtracted from facility emissions",
                  "type": "boolean",
                },
                "subtractGeneratedElectricityEmissions": Object {
                  "default": false,
                  "enumNames": Array [
                    " Yes",
                    " No",
                  ],
                  "title": "Generated electricity is subtracted from facility emissions",
                  "type": "boolean",
                },
                "subtractGeneratedHeatEmissions": Object {
                  "default": false,
                  "enumNames": Array [
                    " Yes",
                    " No",
                  ],
                  "title": "Generated heat is subtracted from facility emissions",
                  "type": "boolean",
                },
                "subtractions": Object {
                  "type": "string",
                },
                "units": Object {
                  "title": "Units of measurement",
                  "type": "string",
                },
              },
              "required": Array [
                "productName",
                "requiresEmissionAllocation",
                "isCiipProduct",
                "addPurchasedElectricityEmissions",
                "subtractExportedElectricityEmissions",
                "addPurchasedHeatEmissions",
                "subtractExportedHeatEmissions",
                "subtractGeneratedElectricityEmissions",
                "subtractGeneratedHeatEmissions",
                "addEmissionsFromEios",
                "requiresProductAmount",
              ],
              "type": "object",
            }
          }
          showErrorList={false}
          uiSchema={
            Object {
              "addEmissionsFromEios": Object {
                "ui:col-md": 4,
                "ui:widget": "radio",
              },
              "addPurchasedElectricityEmissions": Object {
                "ui:col-md": 4,
                "ui:widget": "radio",
              },
              "addPurchasedHeatEmissions": Object {
                "ui:col-md": 4,
                "ui:widget": "radio",
              },
              "additions": Object {
                "classNames": "hidden-title",
                "ui:col-md": 12,
                "ui:options": Object {
                  "text": "Additions to Facility Emissions",
                },
                "ui:widget": "header",
              },
              "basic": Object {
                "classNames": "hidden-title",
                "ui:col-md": 12,
                "ui:options": Object {
                  "text": "Basic Information",
                },
                "ui:widget": "header",
              },
              "isCiipProduct": Object {
                "ui:col-md": 4,
                "ui:help": "Non-CIIP products emissions are excluded from payment allocation. If a product has a fixed incentive ratio instead of a benchmark, please create a benchmark and use the mininmum and maximum incentive ratio options",
                "ui:widget": "radio",
              },
              "productName": Object {
                "ui:col-md": 6,
              },
              "requiresEmissionAllocation": Object {
                "ui:col-md": 4,
                "ui:widget": "radio",
              },
              "requiresProductAmount": Object {
                "ui:col-md": 4,
                "ui:widget": "radio",
              },
              "subtractExportedElectricityEmissions": Object {
                "ui:col-md": 4,
                "ui:widget": "radio",
              },
              "subtractExportedHeatEmissions": Object {
                "ui:col-md": 4,
                "ui:widget": "radio",
              },
              "subtractGeneratedElectricityEmissions": Object {
                "ui:col-md": 4,
                "ui:widget": "radio",
              },
              "subtractGeneratedHeatEmissions": Object {
                "ui:col-md": 4,
                "ui:widget": "radio",
              },
              "subtractions": Object {
                "classNames": "hidden-title",
                "ui:col-md": 12,
                "ui:options": Object {
                  "text": "Subtractions from Facility Emissions",
                },
                "ui:widget": "header",
              },
              "units": Object {
                "ui:col-md": 6,
              },
            }
          }
          widgets={
            Object {
              "header": [Function],
            }
          }
        >
          <Button
            active={false}
            disabled={false}
            onClick={[Function]}
            type="button"
            variant="warning"
          >
            Archive Product
          </Button>
        </Form>
      </Container>
    </ModalBody>
    <JSXStyle
      id="548042990"
    >
      .hidden-title label{display:none;}.close{color:white;}.hidden-button{display:none;}
    </JSXStyle>
  </Bootstrap(Modal)>
  <Bootstrap(Modal)
    centered={true}
    onHide={[Function]}
    show={false}
    size="xl"
  >
    <ModalHeader
      closeButton={true}
      closeLabel="Close"
      style={
        Object {
          "background": "#003366",
          "color": "white",
        }
      }
    >
      <ModalTitle>
        Edit Benchmark
      </ModalTitle>
    </ModalHeader>
    <ModalBody
      style={
        Object {
          "background": "#f5f5f5",
        }
      }
    >
      <Container
        fluid={false}
      >
        <Form
          ArrayFieldTemplate={[Function]}
          ErrorList={[Function]}
          FieldTemplate={[Function]}
          ObjectFieldTemplate={[Function]}
          disabled={false}
          formData={
            Object {
              "benchmark": 1,
              "createdAt": "2020-05-06",
              "eligibilityThreshold": 10,
              "endReportingYear": 2020,
              "id": "bench",
              "incentiveMultiplier": 1,
              "maximumIncentiveRatio": 1,
              "minimumIncentiveRatio": 0,
              "rowId": 1,
              "startReportingYear": 2019,
            }
          }
          liveOmit={true}
          liveValidate={false}
          noHtml5Validate={false}
          noValidate={false}
          omitExtraData={true}
          onSubmit={[Function]}
          safeRenderCompletion={false}
          schema={
            Object {
              "properties": Object {
                "benchmark": Object {
                  "title": "Benchmark",
                  "type": "string",
                },
                "current": Object {
                  "type": "string",
                },
                "eligibilityThreshold": Object {
                  "title": "Eligibility Threshold",
                  "type": "string",
                },
                "endReportingYear": Object {
                  "enum": Array [
                    2019,
                    2020,
                  ],
                  "title": "End Reporting Period",
                  "type": "number",
                },
                "incentiveMultiplier": Object {
                  "defaultValue": "1",
                  "title": "Incentive Multiplier",
                  "type": "string",
                },
                "maximumIncentiveRatio": Object {
                  "defaultValue": "1",
                  "title": "Maximum incentive ratio",
                  "type": "string",
                },
                "minimumIncentiveRatio": Object {
                  "defaultValue": "0",
                  "title": "Minimum incentive ratio",
                  "type": "string",
                },
                "startReportingYear": Object {
                  "enum": Array [
                    2019,
                    2020,
                  ],
                  "title": "Start Reporting Period",
                  "type": "number",
                },
              },
              "required": Array [
                "benchmark",
                "eligibilityThreshold",
                "minimumIncentiveRatio",
                "maximumIncentiveRatio",
                "incentiveMultiplier",
                "startReportingYear",
                "endReportingYear",
              ],
              "type": "object",
            }
          }
          showErrorList={false}
          uiSchema={
            Object {
              "benchmark": Object {
                "ui:col-md": 3,
              },
              "current": Object {
                "classNames": "hidden-title",
                "ui:col-md": 12,
                "ui:options": Object {
                  "text": "Current Benchmark Information",
                },
                "ui:widget": "header",
              },
              "eligibilityThreshold": Object {
                "ui:col-md": 3,
              },
              "endReportingYear": Object {
                "ui:col-md": 3,
                "ui:help": "The last reporting year where this benchmark is used",
              },
              "incentiveMultiplier": Object {
                "ui:col-md": 3,
              },
              "maximumIncentiveRatio": Object {
                "ui:col-md": 3,
              },
              "minimumIncentiveRatio": Object {
                "ui:col-md": 3,
              },
              "startReportingYear": Object {
                "ui:col-md": 3,
                "ui:help": "The first reporting year where this benchmark is used",
              },
            }
          }
          widgets={
            Object {
              "header": [Function],
            }
          }
        >
          <Button
            active={false}
            disabled={false}
            type="submit"
            variant="primary"
          >
            Save
          </Button>
        </Form>
        <PastBenchmarksComponent
          pastBenchmarks={Array []}
        />
      </Container>
    </ModalBody>
    <JSXStyle
      id="548042990"
    >
      .hidden-title label{display:none;}.close{color:white;}.hidden-button{display:none;}
    </JSXStyle>
  </Bootstrap(Modal)>
  <JSXStyle
    id="204006405"
  >
    .editIcon:hover{color:red;cursor:pointer;}.editIcon-disabled{opacity:0.5;}.editIcon-disabled:hover{color:red;opacity:0.5;cursor:pointer;}
  </JSXStyle>
</Fragment>
`;
