// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PaginationBar should not render the Pagination component if Math.ceil(totalCount / pageSize) < 2 1`] = `
<Fragment>
  <div
    className="jsx-1384315916 pagination"
  >
    <Dropdown
      navbar={false}
    >
      <DropdownToggle
        id="dropdown-basic"
        variant="outline-dark"
      >
        Items Per Page: 
        <strong
          className="jsx-1384315916"
        >
          20
        </strong>
      </DropdownToggle>
      <DropdownMenu
        align="left"
        alignRight={false}
        flip={true}
      >
        <DropdownItem
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          disabled={false}
          key="20"
          onClick={[Function]}
        >
          20
        </DropdownItem>
        <DropdownItem
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          disabled={false}
          key="50"
          onClick={[Function]}
        >
          50
        </DropdownItem>
        <DropdownItem
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          disabled={false}
          key="100"
          onClick={[Function]}
        >
          100
        </DropdownItem>
      </DropdownMenu>
    </Dropdown>
  </div>
  <JSXStyle
    id="1384315916"
  >
    .pagination.jsx-1384315916{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.pagination a.page-link{color:#036;}.pagination .page-item.active .page-link{background-color:#036;border-color:#036;}
  </JSXStyle>
</Fragment>
`;

exports[`PaginationBar should render a maximum of 9 pagination pages if Math.ceil(totalCount / pageSize) > 9 1`] = `
<Fragment>
  <div
    className="jsx-1384315916 pagination"
  >
    <Dropdown
      navbar={false}
    >
      <DropdownToggle
        id="dropdown-basic"
        variant="outline-dark"
      >
        Items Per Page: 
        <strong
          className="jsx-1384315916"
        >
          20
        </strong>
      </DropdownToggle>
      <DropdownMenu
        align="left"
        alignRight={false}
        flip={true}
      >
        <DropdownItem
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          disabled={false}
          key="20"
          onClick={[Function]}
        >
          20
        </DropdownItem>
        <DropdownItem
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          disabled={false}
          key="50"
          onClick={[Function]}
        >
          50
        </DropdownItem>
        <DropdownItem
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          disabled={false}
          key="100"
          onClick={[Function]}
        >
          100
        </DropdownItem>
      </DropdownMenu>
    </Dropdown>
    <ForwardRef
      style={
        Object {
          "marginLeft": "15px",
        }
      }
    >
      <First
        onClick={[Function]}
      >
        &lt;&lt; First Page
      </First>
      <Prev
        onClick={[Function]}
      />
      <PageItem
        active={true}
        activeLabel="(current)"
        disabled={false}
        key="1"
        onClick={[Function]}
      >
        1
      </PageItem>
      <PageItem
        active={false}
        activeLabel="(current)"
        disabled={false}
        key="2"
        onClick={[Function]}
      >
        2
      </PageItem>
      <PageItem
        active={false}
        activeLabel="(current)"
        disabled={false}
        key="3"
        onClick={[Function]}
      >
        3
      </PageItem>
      <PageItem
        active={false}
        activeLabel="(current)"
        disabled={false}
        key="4"
        onClick={[Function]}
      >
        4
      </PageItem>
      <PageItem
        active={false}
        activeLabel="(current)"
        disabled={false}
        key="5"
        onClick={[Function]}
      >
        5
      </PageItem>
      <PageItem
        active={false}
        activeLabel="(current)"
        disabled={false}
        key="6"
        onClick={[Function]}
      >
        6
      </PageItem>
      <PageItem
        active={false}
        activeLabel="(current)"
        disabled={false}
        key="7"
        onClick={[Function]}
      >
        7
      </PageItem>
      <PageItem
        active={false}
        activeLabel="(current)"
        disabled={false}
        key="8"
        onClick={[Function]}
      >
        8
      </PageItem>
      <PageItem
        active={false}
        activeLabel="(current)"
        disabled={false}
        key="9"
        onClick={[Function]}
      >
        9
      </PageItem>
      <Ellipsis />
      <Next
        onClick={[Function]}
      />
      <Last
        onClick={[Function]}
      >
        Last Page &gt;&gt;
      </Last>
    </ForwardRef>
  </div>
  <JSXStyle
    id="1384315916"
  >
    .pagination.jsx-1384315916{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.pagination a.page-link{color:#036;}.pagination .page-item.active .page-link{background-color:#036;border-color:#036;}
  </JSXStyle>
</Fragment>
`;

exports[`PaginationBar should render the Pagination component if Math.ceil(totalCount / pageSize) > 1 1`] = `
<Fragment>
  <div
    className="jsx-1384315916 pagination"
  >
    <Dropdown
      navbar={false}
    >
      <DropdownToggle
        id="dropdown-basic"
        variant="outline-dark"
      >
        Items Per Page: 
        <strong
          className="jsx-1384315916"
        >
          20
        </strong>
      </DropdownToggle>
      <DropdownMenu
        align="left"
        alignRight={false}
        flip={true}
      >
        <DropdownItem
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          disabled={false}
          key="20"
          onClick={[Function]}
        >
          20
        </DropdownItem>
        <DropdownItem
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          disabled={false}
          key="50"
          onClick={[Function]}
        >
          50
        </DropdownItem>
        <DropdownItem
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          disabled={false}
          key="100"
          onClick={[Function]}
        >
          100
        </DropdownItem>
      </DropdownMenu>
    </Dropdown>
    <ForwardRef
      style={
        Object {
          "marginLeft": "15px",
        }
      }
    >
      <First
        onClick={[Function]}
      >
        &lt;&lt; First Page
      </First>
      <Prev
        onClick={[Function]}
      />
      <PageItem
        active={true}
        activeLabel="(current)"
        disabled={false}
        key="1"
        onClick={[Function]}
      >
        1
      </PageItem>
      <PageItem
        active={false}
        activeLabel="(current)"
        disabled={false}
        key="2"
        onClick={[Function]}
      >
        2
      </PageItem>
      <Next
        onClick={[Function]}
      />
      <Last
        onClick={[Function]}
      >
        Last Page &gt;&gt;
      </Last>
    </ForwardRef>
  </div>
  <JSXStyle
    id="1384315916"
  >
    .pagination.jsx-1384315916{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.pagination a.page-link{color:#036;}.pagination .page-item.active .page-link{background-color:#036;border-color:#036;}
  </JSXStyle>
</Fragment>
`;
