// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OverrideJustification Should allow the user to edit a justification if one is currently active 1`] = `
<Fragment>
  <Alert
    closeLabel="Close alert"
    show={true}
    transition={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "appear": false,
          "in": false,
          "mountOnEnter": false,
          "timeout": 300,
          "unmountOnExit": false,
        },
        "displayName": "Fade",
        "render": [Function],
      }
    }
    variant="danger"
  >
    <strong>
      Error Validation Override Active
    </strong>
  </Alert>
  <Alert
    closeLabel="Close alert"
    show={true}
    transition={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "appear": false,
          "in": false,
          "mountOnEnter": false,
          "timeout": 300,
          "unmountOnExit": false,
        },
        "displayName": "Fade",
        "render": [Function],
      }
    }
    variant="secondary"
  >
    <p>
      <strong>
        You have chosen to override the errors present in your application. This may cause a delay in processing your application.
      </strong>
    </p>
    <p>
      <strong>
        Your Override Justification:
      </strong>
    </p>
    <p>
      bad stuff
    </p>
    <Button
      active={false}
      disabled={false}
      onClick={[Function]}
      style={
        Object {
          "marginRight": "5px",
        }
      }
      type="button"
      variant="secondary"
    >
      Edit Justification
    </Button>
    <Button
      active={false}
      disabled={false}
      onClick={[Function]}
      type="button"
      variant="danger"
    >
      Delete Override
    </Button>
  </Alert>
</Fragment>
`;

exports[`OverrideJustification Should allow the user to save a justification if one is not currently active 1`] = `
<Fragment>
  <Alert
    closeLabel="Close alert"
    show={true}
    transition={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "appear": false,
          "in": false,
          "mountOnEnter": false,
          "timeout": 300,
          "unmountOnExit": false,
        },
        "displayName": "Fade",
        "render": [Function],
      }
    }
    variant="danger"
  >
    <ForwardRef>
      <div
        className="jsx-905902600 override-accordion"
      >
        Your application contains errors shown below that must be fixed before submission. You may either correct these or alternatively, override and provide justification. Your justification will be reviewed by CAS and may cause a delay in processing your application.
        <ForwardRef
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": Object {
                "active": false,
                "disabled": false,
                "type": "button",
                "variant": "primary",
              },
              "displayName": "Button",
              "render": [Function],
            }
          }
          eventKey="0"
          onClick={[Function]}
          variant="secondary"
        >
          Override and Justify
          <FontAwesomeIcon
            border={false}
            className=""
            fixedWidth={false}
            flip={null}
            icon={
              Object {
                "icon": Array [
                  320,
                  512,
                  Array [],
                  "f0d7",
                  "M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z",
                ],
                "iconName": "caret-down",
                "prefix": "fas",
              }
            }
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size={null}
            spin={false}
            style={
              Object {
                "marginLeft": "0.75em",
              }
            }
            swapOpacity={false}
            symbol={false}
            title=""
            transform={null}
          />
        </ForwardRef>
      </div>
      <AccordionCollapse
        eventKey="0"
        in={false}
      >
        <Form
          inline={false}
        >
          <h4
            className="jsx-905902600"
          >
            Override Form Validation
          </h4>
          <FormGroup
            controlId="overrideJustification"
          >
            <FormLabel
              column={false}
              srOnly={false}
            >
              Justification for incomplete form:
            </FormLabel>
            <FormControl
              as="textarea"
              onChange={[Function]}
              rows={4}
              value=""
            />
          </FormGroup>
          <Button
            active={false}
            disabled={false}
            onClick={[Function]}
            type="button"
            variant="success"
          >
            Save
          </Button>
          <ForwardRef
            as={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "active": false,
                  "disabled": false,
                  "type": "button",
                  "variant": "primary",
                },
                "displayName": "Button",
                "render": [Function],
              }
            }
            eventKey="0"
            onClick={[Function]}
            style={
              Object {
                "border": "1px solid currentColor",
                "marginLeft": "1em",
              }
            }
            variant="light"
          >
            Cancel
          </ForwardRef>
        </Form>
        <p
          className="jsx-905902600 justification-text"
        />
      </AccordionCollapse>
    </ForwardRef>
  </Alert>
  <JSXStyle
    id="905902600"
  >
    .override-accordion.jsx-905902600{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}.justification-text.jsx-905902600{color:red;}
  </JSXStyle>
</Fragment>
`;
