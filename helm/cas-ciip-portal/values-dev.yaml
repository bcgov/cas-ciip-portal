replicas: 2
route:
  host: dev.ciip.gov.bc.ca

image:
  schema:
    tag: latest
    pullPolicy: Always
  app:
    tag: latest
    pullPolicy: Always
  psql:
    pullPolicy: Always
    tag: "latest"

dag:
  preInitDb: |
    psql<<EOF
      select pg_terminate_backend(pid) from pg_stat_activity where
      -- don't kill my own connection!
      pid <> pg_backend_pid()
      -- don't kill the connections to other databases
      and datname = '$(PORTAL_DATABASE)';
      drop database if exists $(PORTAL_DATABASE);
      drop user if exists $(PORTAL_USER);
      drop user if exists ciip_portal;
      drop user if exists ciip_readonly;
    EOF

# dropping users shouldn't be necessary, but the create-user-db script does not
# restore ownership or grants connect privilege if the role exists

env:
  smtpConnectionString: smtp://cas-ciip-portal-mailhog:1025
  senderEmail: no-reply-dev.cas@gov.bc.ca
  adminEmail: admin@ciip.dev
  enableDbMocks: true

mailhog:
  enable: true
  securityContext:
    runAsUser: 1001650000
    fsGroup: 1001650000
    runAsNonRoot: true
  host: cas-mailhog-dev.apps.silver.devops.gov.bc.ca

cas-postgres:
  patroni:
    walE:
      enable: true
      # the GCS bucket name should be {{ namespace }}-{{ gcs.bucketSuffix }}
      gcsBucket: 09269b-dev-ciip-backups
      # kubernetesSecret should be gcp-{{ namespace }}-{{ gcs.bucketSuffix }}-service-account-key
      kubernetesSecret: gcp-09269b-dev-ciip-backups-service-account-key # pragma: allowlist secret
    # options below are required if walE.enable is true
  namespace: 09269b-dev
  gcs:
    bucketSuffix: ciip-backups

nginx-sidecar:
  hostName: dev.ciip.gov.bc.ca

ggircs:
  host: https://cas-ggircs-dev.apps.silver.devops.gov.bc.ca/
  namespace: 9212c9-dev
  prefix: 9212c9
  environment: dev

metabase:
  host: https://cas-metabase-dev.apps.silver.devops.gov.bc.ca/
