image:
  schema:
    repository: gcr.io/ggl-cas-storage/cas-ciip-portal-schema
    tag: b530194a9df22e64b1a701defd3b65f41b01676b # pragma: allowlist secret
    pullPolicy: IfNotPresent
  app:
    repository: gcr.io/ggl-cas-storage/cas-ciip-portal-app
    tag: b530194a9df22e64b1a701defd3b65f41b01676b # pragma: allowlist secret
    pullPolicy: IfNotPresent
  psql:
    repository: gcr.io/ggl-cas-storage/cas-postgres
    pullPolicy: Always
    tag: "0.1.0"

replicas: 2
port: 3000
resources: {}
route:
  suffix: ""

persistence:
  db: ciip
  dbOwner: ciip
  appUser: ciip_portal
  readonlyUser: ciip_readonly

env:
  smtpConnectionString: smtp://apps.smtp.gov.bc.ca/?port=25&ignoreTLS=true&secure=false
  senderEmail: no-reply.cas@gov.bc.ca
  adminEmail: GHGRegulator@gov.bc.ca
  appHost: https://ciip.pathfinder.gov.bc.ca # This should be different from the route for the production site (appHost will be https://ciip.gov.bc.ca)

fider:
  host: # TODO move fider template in this repo

cas-postgres:
  patroni:
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 15m
        memory: 600Mi
    persistentVolume:
      size: 20Gi
    replicaCount: 3
    env:
      ALLOW_NOSSL: true
      USE_WALG_BACKUP: "true"
      USE_WALG_RESTORE: "true"
    walE:
      enable: true
      # the GCS bucket name should be {{ namespace }}-{{ gcs.bucketSuffix }}
      gcsBucket:
      # kubernetesSecret should be gcp-{{ namespace }}-{{ gcs.bucketSuffix }}-service-account-key
      kubernetesSecret:
    # options below are required if walE.enable is true
  namespace:
  gcs:
    bucketSuffix:
