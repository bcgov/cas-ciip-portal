apiVersion: batch/v1
kind: Job
metadata:
  name: terraform-apply
  labels:
    component: backend
  namespace: "{{ .Release.Namespace }}"
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
spec:
  backoffLimit: 0
  activeDeadlineSeconds: 900
  template:
    spec:
      serviceAccountName: "terraform-kubernetes-service-account"
      containers:
        - name: terraform-apply
          resources: "{{ toYaml .Values.devops.resources | nindent 12 }}"
          image: "{{ .Values.devops.image.repository }}:{{ .Values.devops.sourceRepoImageTag | default .Values.devops.image.tag }}"
          imagePullPolicy: "{{ .Values.devops.image.pullPolicy }}"
          volumeMounts:
            - mountPath: /etc/gcp
              name: service-account-credentials-volume
              readOnly: True
            - mountPath: /etc/tf
              name: terraform-backend-config-volume
              readOnly: True
            - name: tf-working-dir
              mountPath: /working
              readOnly: False
            - name: terraform-modules
              mountPath: /terraform
              readOnly: False
          env:
            - name: TF_VAR_project_id
              valueFrom:
                secretKeyRef:
                  name: gcp-credentials-secret
                  key: gcp_project_id
            - name: TF_VAR_openshift_namespace
              value: "{{ .Release.Namespace | quote }}"
            - name: TF_VAR_apps
              value: '["ciip-backups", "ciip-documents", "ciip-2018"]'
            - name: kubernetes_host
              value: "https://api.silver.devops.gov.bc.ca:6443"
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/etc/gcp/credentials.json"
          # Terraform was having an issue pulling kubernetes_host in as a TF_VAR, so we add it as a attribute to the command
          command:
            - /bin/sh
            - -c
            - |
              set -euo pipefail;
              cp -r /terraform/. /working;
              cd working;
              export TF_VAR_kubernetes_token=$( cat /var/run/secrets/kubernetes.io/serviceaccount/token );
              terraform init -backend-config=/etc/tf/gcs.tfbackend;
              terraform apply -var=\"kubernetes_host=$kubernetes_host\" -auto-approve";
      restartPolicy: Never
      volumes:
        - name: service-account-credentials-volume
          secret:
            secretName: gcp-credentials-secret # pragma: allowlist secret
            items:
              - key: sa_json
                path: credentials.json
        - name: terraform-backend-config-volume
          secret:
            secretName: gcp-credentials-secret # pragma: allowlist secret
            items:
              - key: tf_backend
                path: gcs.tfbackend
        - name: tf-working-dir
          emptyDir: {}
        - name: terraform-modules
          configMap:
            name: terraform-modules
