apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cas-ciip-portal.fullname" . }}
  labels:
    component: app
{{ include "cas-ciip-portal.labels" . | indent 4 }}

spec:
  replicas: {{ .Values.replicas }}
  selector:
    name: {{ template "cas-ciip-portal.fullname" . }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: app
{{ include "cas-ciip-portal.selectorLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        component: app
{{ include "cas-ciip-portal.labels" . | indent 8 }}
    spec:
      containers:
      - name: {{ template "cas-ciip-portal.fullname" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        image: {{ .Values.image.app.repository }}:{{ .Values.image.app.tag }}
        env:
          - name: SESSION_SECRET
            valueFrom:
              secretKeyRef:
                key: session-secret
                name: {{ template "cas-ciip-portal.fullname" . }}
          - name: PGUSER
            valueFrom:
              secretKeyRef:
                key: database-app-user
                name: {{ template "cas-ciip-portal.fullname" . }}
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                key: database-app-password
                name: {{ template "cas-ciip-portal.fullname" . }}
          - name: PGDATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: {{ template "cas-ciip-portal.fullname" . }}
          - name: PGPORT
            value: "5432"
          - name: PGHOST
            value: {{ template "cas-ciip-portal.fullname" . }}-patroni
          - name: PORT
            value: {{ .Values.port | quote }}
          - name: SMTP_CONNECTION_STRING
            value: {{ .Values.env.smtpConnectionString }}
          - name: SENDER_EMAIL
            value: {{ .Values.env.senderEmail }}
          - name: ADMIN_EMAIL
            value: {{ .Values.env.adminEmail }}
          - name: FEEDBACK_SITE_URL
            value: {{ .Values.fider.host }}
          - name: ENABLE_ANALYTICS
            value: {{ .Values.analytics.enable | quote }}
          - name: HOST
            value: http{{ if not .Values.route.insecure }}s{{ end }}://{{ .Values.route.host }}
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
        ports:
        - containerPort: {{ .Values.port }}
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: {{ .Values.port }}
            scheme: HTTP{{ if not .Values.route.insecure }}S{{ end }}
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
{{ toYaml .Values.resources | indent 10 }}
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
        volumeMounts:
          - mountPath: /root/.acme.sh
            name: acme-home
          - mountPath: /root/.well-known/acme-challenge
            name: acme-challenge
      volumes:
        - name: acme-home
          persistentVolumeClaim:
            claimName: {{ template "cas-ciip-portal.fullname" . }}-acme-home
        - name: acme-challenge
          persistentVolumeClaim:
            claimName: {{ template "cas-ciip-portal.fullname" . }}-acme-challenge
      dnsPolicy: ClusterFirst
      restartPolicy: Always
